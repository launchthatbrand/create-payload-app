{"version":3,"file":"renderField.js","names":["getTranslation","createClientField","MissingEditorProp","fieldIsHiddenOrDisabled","RenderServerComponent","FieldDescription","WatchCondition","defaultUIFieldComponentKeys","renderField","id","clientFieldSchemaMap","collectionSlug","data","fieldConfig","fieldSchemaMap","fieldState","formState","indexPath","operation","parentPath","parentSchemaPath","path","permissions","preferences","req","schemaPath","siblingData","clientField","get","defaultIDType","payload","config","db","field","i18n","importMap","clientProps","readOnly","customComponents","includes","type","serverProps","user","admin","Object","keys","components","length","description","rows","forEach","row","rowIndex","RowLabels","Component","RowLabel","key","rowLabel","labels","singular","String","padStart","rowNumber","blockTypeToMatch","blockType","blockConfig","blocks","blockReferences","find","block","slug","Label","editor","Error","Field","_jsx","FieldComponent","Description","t","AfterInput","afterInput","BeforeInput","beforeInput"],"sources":["../../../src/forms/fieldSchemasToFormState/renderField.tsx"],"sourcesContent":["import type {\n  ClientComponentProps,\n  ClientField,\n  FieldPaths,\n  FlattenedBlock,\n  ServerComponentProps,\n} from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport { createClientField, MissingEditorProp } from 'payload'\nimport { fieldIsHiddenOrDisabled } from 'payload/shared'\n\nimport type { RenderFieldMethod } from './types.js'\n\nimport { RenderServerComponent } from '../../elements/RenderServerComponent/index.js'\n\n// eslint-disable-next-line payload/no-imports-from-exports-dir -- need this to reference already existing bundle. Otherwise, bundle size increases., payload/no-imports-from-exports-dir\nimport { FieldDescription, WatchCondition } from '../../exports/client/index.js'\n\nconst defaultUIFieldComponentKeys: Array<'Cell' | 'Description' | 'Field' | 'Filter'> = [\n  'Cell',\n  'Description',\n  'Field',\n  'Filter',\n]\n\nexport const renderField: RenderFieldMethod = ({\n  id,\n  clientFieldSchemaMap,\n  collectionSlug,\n  data,\n  fieldConfig,\n  fieldSchemaMap,\n  fieldState,\n  formState,\n  indexPath,\n  operation,\n  parentPath,\n  parentSchemaPath,\n  path,\n  permissions,\n  preferences,\n  req,\n  schemaPath,\n  siblingData,\n}) => {\n  const clientField = clientFieldSchemaMap\n    ? (clientFieldSchemaMap.get(schemaPath) as ClientField)\n    : createClientField({\n        defaultIDType: req.payload.config.db.defaultIDType,\n        field: fieldConfig,\n        i18n: req.i18n,\n        importMap: req.payload.importMap,\n      })\n\n  if (fieldIsHiddenOrDisabled(clientField)) {\n    return\n  }\n\n  const clientProps: ClientComponentProps & Partial<FieldPaths> = {\n    field: clientField,\n    path,\n    permissions,\n    readOnly: typeof permissions === 'boolean' ? !permissions : !permissions?.[operation],\n    schemaPath,\n  }\n\n  if (fieldState?.customComponents) {\n    clientProps.customComponents = fieldState.customComponents\n  }\n\n  // fields with subfields\n  if (['array', 'blocks', 'collapsible', 'group', 'row', 'tabs'].includes(fieldConfig.type)) {\n    clientProps.indexPath = indexPath\n    clientProps.parentPath = parentPath\n    clientProps.parentSchemaPath = parentSchemaPath\n  }\n\n  const serverProps: ServerComponentProps = {\n    id,\n    clientField,\n    clientFieldSchemaMap,\n    data,\n    field: fieldConfig,\n    fieldSchemaMap,\n    permissions,\n    // TODO: Should we pass explicit values? initialValue, value, valid\n    // value and initialValue should be typed\n    collectionSlug,\n    formState,\n    i18n: req.i18n,\n    operation,\n    payload: req.payload,\n    preferences,\n    req,\n    siblingData,\n    user: req.user,\n  }\n\n  /**\n   * Only create the `customComponents` object if needed.\n   * This will prevent unnecessary data from being transferred to the client.\n   */\n  if (fieldConfig.admin) {\n    if (\n      (Object.keys(fieldConfig.admin.components || {}).length > 0 ||\n        fieldConfig.type === 'richText' ||\n        ('description' in fieldConfig.admin &&\n          typeof fieldConfig.admin.description === 'function')) &&\n      !fieldState?.customComponents\n    ) {\n      fieldState.customComponents = {}\n    }\n  }\n\n  switch (fieldConfig.type) {\n    case 'array': {\n      fieldState?.rows?.forEach((row, rowIndex) => {\n        if (fieldConfig.admin?.components && 'RowLabel' in fieldConfig.admin.components) {\n          if (!fieldState.customComponents.RowLabels) {\n            fieldState.customComponents.RowLabels = []\n          }\n\n          fieldState.customComponents.RowLabels[rowIndex] = RenderServerComponent({\n            clientProps,\n            Component: fieldConfig.admin.components.RowLabel,\n            importMap: req.payload.importMap,\n            key: `${rowIndex}`,\n            serverProps: {\n              ...serverProps,\n              rowLabel: `${getTranslation(fieldConfig.labels.singular, req.i18n)} ${String(\n                rowIndex + 1,\n              ).padStart(2, '0')}`,\n              rowNumber: rowIndex + 1,\n            },\n          })\n        }\n      })\n\n      break\n    }\n\n    case 'blocks': {\n      fieldState?.rows?.forEach((row, rowIndex) => {\n        const blockTypeToMatch: string = row.blockType\n        const blockConfig =\n          req.payload.blocks[blockTypeToMatch] ??\n          ((fieldConfig.blockReferences ?? fieldConfig.blocks).find(\n            (block) => typeof block !== 'string' && block.slug === blockTypeToMatch,\n          ) as FlattenedBlock | undefined)\n\n        if (blockConfig.admin?.components && 'Label' in blockConfig.admin.components) {\n          if (!fieldState.customComponents) {\n            fieldState.customComponents = {}\n          }\n\n          if (!fieldState.customComponents.RowLabels) {\n            fieldState.customComponents.RowLabels = []\n          }\n\n          fieldState.customComponents.RowLabels[rowIndex] = RenderServerComponent({\n            clientProps,\n            Component: blockConfig.admin.components.Label,\n            importMap: req.payload.importMap,\n            key: `${rowIndex}`,\n            serverProps: {\n              ...serverProps,\n              blockType: row.blockType,\n              rowLabel: `${getTranslation(blockConfig.labels.singular, req.i18n)} ${String(\n                rowIndex + 1,\n              ).padStart(2, '0')}`,\n              rowNumber: rowIndex + 1,\n            },\n          })\n        }\n      })\n\n      break\n    }\n\n    case 'richText': {\n      if (!fieldConfig?.editor) {\n        throw new MissingEditorProp(fieldConfig) // while we allow disabling editor functionality, you should not have any richText fields defined if you do not have an editor\n      }\n\n      if (typeof fieldConfig?.editor === 'function') {\n        throw new Error('Attempted to access unsanitized rich text editor.')\n      }\n\n      if (!fieldConfig.admin) {\n        fieldConfig.admin = {}\n      }\n\n      if (!fieldConfig.admin.components) {\n        fieldConfig.admin.components = {}\n      }\n\n      fieldState.customComponents.Field = (\n        <WatchCondition path={path}>\n          {RenderServerComponent({\n            clientProps,\n            Component: fieldConfig.editor.FieldComponent,\n            importMap: req.payload.importMap,\n            serverProps,\n          })}\n        </WatchCondition>\n      )\n\n      break\n    }\n\n    case 'ui': {\n      if (fieldConfig?.admin?.components) {\n        // Render any extra, untyped components\n        for (const key in fieldConfig.admin.components) {\n          if (key in defaultUIFieldComponentKeys) {\n            continue\n          }\n\n          const Component = fieldConfig.admin.components[key]\n\n          fieldState.customComponents[key] = RenderServerComponent({\n            clientProps,\n            Component,\n            importMap: req.payload.importMap,\n            key: `field.admin.components.${key}`,\n            serverProps,\n          })\n        }\n      }\n      break\n    }\n\n    default: {\n      break\n    }\n  }\n\n  if (fieldConfig.admin) {\n    if (\n      'description' in fieldConfig.admin &&\n      typeof fieldConfig.admin?.description === 'function'\n    ) {\n      fieldState.customComponents.Description = (\n        <FieldDescription\n          description={fieldConfig.admin?.description({\n            i18n: req.i18n,\n            t: req.i18n.t,\n          })}\n          path={path}\n        />\n      )\n    }\n\n    if (fieldConfig.admin?.components) {\n      if ('afterInput' in fieldConfig.admin.components) {\n        fieldState.customComponents.AfterInput = RenderServerComponent({\n          clientProps,\n          Component: fieldConfig.admin.components.afterInput,\n          importMap: req.payload.importMap,\n          key: 'field.admin.components.afterInput',\n          serverProps,\n        })\n      }\n\n      if ('beforeInput' in fieldConfig.admin.components) {\n        fieldState.customComponents.BeforeInput = RenderServerComponent({\n          clientProps,\n          Component: fieldConfig.admin.components.beforeInput,\n          importMap: req.payload.importMap,\n          key: 'field.admin.components.beforeInput',\n          serverProps,\n        })\n      }\n\n      if ('Description' in fieldConfig.admin.components) {\n        fieldState.customComponents.Description = RenderServerComponent({\n          clientProps,\n          Component: fieldConfig.admin.components.Description,\n          importMap: req.payload.importMap,\n          key: 'field.admin.components.Description',\n          serverProps,\n        })\n      }\n\n      if ('Error' in fieldConfig.admin.components) {\n        fieldState.customComponents.Error = RenderServerComponent({\n          clientProps,\n          Component: fieldConfig.admin.components.Error,\n          importMap: req.payload.importMap,\n          key: 'field.admin.components.Error',\n          serverProps,\n        })\n      }\n\n      if ('Label' in fieldConfig.admin.components) {\n        fieldState.customComponents.Label = RenderServerComponent({\n          clientProps,\n          Component: fieldConfig.admin.components.Label,\n          importMap: req.payload.importMap,\n          key: 'field.admin.components.Label',\n          serverProps,\n        })\n      }\n\n      if ('Field' in fieldConfig.admin.components) {\n        fieldState.customComponents.Field = (\n          <WatchCondition path={path}>\n            {RenderServerComponent({\n              clientProps,\n              Component: fieldConfig.admin.components.Field,\n              importMap: req.payload.importMap,\n              key: 'field.admin.components.Field',\n              serverProps,\n            })}\n          </WatchCondition>\n        )\n      }\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}