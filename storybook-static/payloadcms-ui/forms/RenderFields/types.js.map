{"version":3,"file":"types.js","names":[],"sources":["../../../src/forms/RenderFields/types.ts"],"sourcesContent":["import type { ClientField, SanitizedFieldPermissions } from 'payload'\n\nexport type RenderFieldsProps = {\n  readonly className?: string\n  readonly fields: ClientField[]\n  /**\n   * Controls the rendering behavior of the fields, i.e. defers rendering until they intersect with the viewport using the Intersection Observer API.\n   *\n   * If true, the fields will be rendered immediately, rather than waiting for them to intersect with the viewport.\n   *\n   * If a number is provided, will immediately render fields _up to that index_.\n   */\n  readonly forceRender?: boolean\n  readonly margins?: 'small' | false\n  readonly parentIndexPath: string\n  readonly parentPath: string\n  readonly parentSchemaPath: string\n  readonly permissions:\n    | {\n        [fieldName: string]: SanitizedFieldPermissions\n      }\n    | SanitizedFieldPermissions\n  readonly readOnly?: boolean\n}\n"],"mappings":"AAEA","ignoreList":[]}