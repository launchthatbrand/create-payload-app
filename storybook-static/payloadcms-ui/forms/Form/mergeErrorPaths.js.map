{"version":3,"file":"mergeErrorPaths.js","names":["arraysHaveSameStrings","mergeErrorPaths","existing","incoming","changed","result","undefined","existingErrorPaths","incomingErrorPaths","Array","isArray","length","forEach","path","push"],"sources":["../../../src/forms/Form/mergeErrorPaths.ts"],"sourcesContent":["'use client'\nimport { arraysHaveSameStrings } from '../../utilities/arraysHaveSameStrings.js'\n\nexport const mergeErrorPaths = (\n  existing?: string[],\n  incoming?: string[],\n): {\n  changed: boolean\n  result?: string[]\n} => {\n  if (!existing) {\n    return {\n      changed: false,\n      result: undefined,\n    }\n  }\n\n  const existingErrorPaths: string[] = []\n  const incomingErrorPaths: string[] = []\n\n  if (Array.isArray(incoming) && incoming?.length) {\n    incoming.forEach((path) => incomingErrorPaths.push(path))\n  }\n\n  if (Array.isArray(existing) && existing?.length) {\n    existing.forEach((path) => existingErrorPaths.push(path))\n  }\n\n  if (!arraysHaveSameStrings(existingErrorPaths, incomingErrorPaths)) {\n    return {\n      changed: true,\n      result: incomingErrorPaths,\n    }\n  }\n  return {\n    changed: false,\n    result: existing,\n  }\n}\n"],"mappings":"AAAA;;AACA,SAASA,qBAAqB,QAAQ;AAEtC,OAAO,MAAMC,eAAA,GAAkBA,CAC7BC,QAAA,EACAC,QAAA;EAKA,IAAI,CAACD,QAAA,EAAU;IACb,OAAO;MACLE,OAAA,EAAS;MACTC,MAAA,EAAQC;IACV;EACF;EAEA,MAAMC,kBAAA,GAA+B,EAAE;EACvC,MAAMC,kBAAA,GAA+B,EAAE;EAEvC,IAAIC,KAAA,CAAMC,OAAO,CAACP,QAAA,KAAaA,QAAA,EAAUQ,MAAA,EAAQ;IAC/CR,QAAA,CAASS,OAAO,CAAEC,IAAA,IAASL,kBAAA,CAAmBM,IAAI,CAACD,IAAA;EACrD;EAEA,IAAIJ,KAAA,CAAMC,OAAO,CAACR,QAAA,KAAaA,QAAA,EAAUS,MAAA,EAAQ;IAC/CT,QAAA,CAASU,OAAO,CAAEC,IAAA,IAASN,kBAAA,CAAmBO,IAAI,CAACD,IAAA;EACrD;EAEA,IAAI,CAACb,qBAAA,CAAsBO,kBAAA,EAAoBC,kBAAA,GAAqB;IAClE,OAAO;MACLJ,OAAA,EAAS;MACTC,MAAA,EAAQG;IACV;EACF;EACA,OAAO;IACLJ,OAAA,EAAS;IACTC,MAAA,EAAQH;EACV;AACF","ignoreList":[]}