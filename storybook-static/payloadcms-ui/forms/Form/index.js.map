{"version":3,"file":"index.js","names":["dequal","useRouter","serialize","deepCopyObjectSimpleWithoutReactComponents","getDataByPath","getDataByPathFunc","getSiblingData","getSiblingDataFunc","reduceFieldsToValues","wait","React","useCallback","useEffect","useReducer","useRef","useState","toast","FieldErrorsToast","useDebouncedEffect","useEffectEvent","useQueues","useThrottledEffect","useAuth","useConfig","useDocumentInfo","useLocale","useOperation","useRouteTransition","useServerFunctions","useTranslation","useUploadHandlers","abortAndIgnore","handleAbortRef","requests","BackgroundProcessingContext","DocumentFormContext","FormContext","FormFieldsContext","FormWatchContext","InitializingContext","ModifiedContext","ProcessingContext","SubmittedContext","useDocumentForm","errorMessages","fieldReducer","initContextState","mergeServerFormState","baseClass","Form","props","id","collectionSlug","docPermissions","getDocPreferences","globalSlug","action","beforeSubmit","children","className","disabled","disabledFromProps","disableSuccessStatus","disableValidationOnSubmit","el","handleResponse","initialState","isDocumentForm","isInitializing","initializingFromProps","onChange","onSubmit","onSuccess","redirect","submitted","submittedFromProps","uuid","waitForAutocomplete","method","undefined","router","documentForm","code","locale","i18n","t","refreshCookie","user","operation","queueTask","getFormState","startRouteTransition","getUploadHandler","config","setDisabled","isMounted","setIsMounted","modified","setModified","isValid","setIsValid","initializing","setInitializing","processing","setProcessing","backgroundProcessing","setBackgroundProcessing","setSubmitted","formRef","contextRef","abortResetFormRef","isFirstRenderRef","fieldsReducer","fields","dispatchFields","current","prevFields","validateForm","validatedFieldState","data","getData","validationPromises","Object","entries","map","path","field","validatedField","pathSegments","split","passesCondition","validationResult","valid","validate","valueToValidate","value","rows","Array","isArray","blockData","event","preferences","req","payload","siblingData","errorMessage","Promise","all","type","state","submit","options","e","actionArg","methodToUse","overrides","overridesFromArgs","skipValidation","preventDefault","errorToast","successToast","promise","resolve","reject","hasFormSubmitAction","success","error","loading","stopPropagation","revalidatedFormState","serializableFields","reduce","priorOnChange","beforeSubmitFn","result","formState","every","key","formData","createFormData","mergeOverrideData","Boolean","res","toLowerCase","body","headers","language","contentType","get","isJSON","indexOf","json","status","newFormState","newState","mergedFormState","acceptValues","existingState","incomingState","optimize","push","message","errors","fieldErrors","nonFieldErrors","fieldErrs","nonFieldErrs","err","newFieldErrs","newNonFieldErrs","forEach","dataError","_jsx","statusText","console","getFields","getField","file","handler","filename","name","clientUploadContext","updateFilename","JSON","stringify","mimeType","size","dataToSerialize","_payload","indices","nullsAsUndefineds","reset","controller","docPreferences","renderAllFields","schemaPath","signal","replaceState","addFieldRow","blockType","rowIndex","rowIndexArg","subFieldState","newRows","length","removeFieldRow","replaceFieldRow","currentRows","abortOnChange","sanitize","classes","filter","join","executeOnChange","onChangeFn","aborted","changed","DocumentFormContextComponent","Fragment","documentFormContextProps","El","noValidate","ref","Provider","useAllFormFields","useForm","useFormFields","useFormModified","useFormProcessing","useFormSubmitted","useWatchForm"],"sources":["../../../src/forms/Form/index.tsx"],"sourcesContent":["'use client'\nimport { dequal } from 'dequal/lite' // lite: no need for Map and Set support\nimport { useRouter } from 'next/navigation.js'\nimport { serialize } from 'object-to-formdata'\nimport { type FormState, type PayloadRequest } from 'payload'\nimport {\n  deepCopyObjectSimpleWithoutReactComponents,\n  getDataByPath as getDataByPathFunc,\n  getSiblingData as getSiblingDataFunc,\n  reduceFieldsToValues,\n  wait,\n} from 'payload/shared'\nimport React, { useCallback, useEffect, useReducer, useRef, useState } from 'react'\nimport { toast } from 'sonner'\n\nimport type {\n  CreateFormData,\n  Context as FormContextType,\n  FormProps,\n  GetDataByPath,\n  SubmitOptions,\n} from './types.js'\n\nimport { FieldErrorsToast } from '../../elements/Toasts/fieldErrors.js'\nimport { useDebouncedEffect } from '../../hooks/useDebouncedEffect.js'\nimport { useEffectEvent } from '../../hooks/useEffectEvent.js'\nimport { useQueues } from '../../hooks/useQueues.js'\nimport { useThrottledEffect } from '../../hooks/useThrottledEffect.js'\nimport { useAuth } from '../../providers/Auth/index.js'\nimport { useConfig } from '../../providers/Config/index.js'\nimport { useDocumentInfo } from '../../providers/DocumentInfo/index.js'\nimport { useLocale } from '../../providers/Locale/index.js'\nimport { useOperation } from '../../providers/Operation/index.js'\nimport { useRouteTransition } from '../../providers/RouteTransition/index.js'\nimport { useServerFunctions } from '../../providers/ServerFunctions/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { useUploadHandlers } from '../../providers/UploadHandlers/index.js'\nimport { abortAndIgnore, handleAbortRef } from '../../utilities/abortAndIgnore.js'\nimport { requests } from '../../utilities/api.js'\nimport {\n  BackgroundProcessingContext,\n  DocumentFormContext,\n  FormContext,\n  FormFieldsContext,\n  FormWatchContext,\n  InitializingContext,\n  ModifiedContext,\n  ProcessingContext,\n  SubmittedContext,\n  useDocumentForm,\n} from './context.js'\nimport { errorMessages } from './errorMessages.js'\nimport { fieldReducer } from './fieldReducer.js'\nimport { initContextState } from './initContextState.js'\nimport { mergeServerFormState } from './mergeServerFormState.js'\n\nconst baseClass = 'form'\n\nexport const Form: React.FC<FormProps> = (props) => {\n  const { id, collectionSlug, docPermissions, getDocPreferences, globalSlug } = useDocumentInfo()\n\n  const {\n    action,\n    beforeSubmit,\n    children,\n    className,\n    disabled: disabledFromProps,\n    disableSuccessStatus,\n    disableValidationOnSubmit,\n    // fields: fieldsFromProps = collection?.fields || global?.fields,\n    el,\n    handleResponse,\n    initialState, // fully formed initial field state\n    isDocumentForm,\n    isInitializing: initializingFromProps,\n    onChange,\n    onSubmit,\n    onSuccess,\n    redirect,\n    submitted: submittedFromProps,\n    uuid,\n    waitForAutocomplete,\n  } = props\n\n  const method = 'method' in props ? props?.method : undefined\n\n  const router = useRouter()\n\n  const documentForm = useDocumentForm()\n\n  const { code: locale } = useLocale()\n  const { i18n, t } = useTranslation()\n  const { refreshCookie, user } = useAuth()\n  const operation = useOperation()\n  const { queueTask } = useQueues()\n\n  const { getFormState } = useServerFunctions()\n  const { startRouteTransition } = useRouteTransition()\n  const { getUploadHandler } = useUploadHandlers()\n\n  const { config } = useConfig()\n\n  const [disabled, setDisabled] = useState(disabledFromProps || false)\n  const [isMounted, setIsMounted] = useState(false)\n  const [modified, setModified] = useState(false)\n\n  /**\n   * Tracks wether the form state passes validation.\n   * For example the state could be submitted but invalid as field errors have been returned.\n   */\n  const [isValid, setIsValid] = useState(true)\n  const [initializing, setInitializing] = useState(initializingFromProps)\n  const [processing, setProcessing] = useState(false)\n  const [backgroundProcessing, setBackgroundProcessing] = useState(false)\n\n  const [submitted, setSubmitted] = useState(false)\n  const formRef = useRef<HTMLFormElement>(null)\n  const contextRef = useRef({} as FormContextType)\n  const abortResetFormRef = useRef<AbortController>(null)\n  const isFirstRenderRef = useRef(true)\n\n  const fieldsReducer = useReducer(fieldReducer, {}, () => initialState)\n\n  const [fields, dispatchFields] = fieldsReducer\n\n  contextRef.current.fields = fields\n\n  const prevFields = useRef(fields)\n\n  const validateForm = useCallback(async () => {\n    const validatedFieldState = {}\n    let isValid = true\n\n    const data = contextRef.current.getData()\n\n    const validationPromises = Object.entries(contextRef.current.fields).map(\n      async ([path, field]) => {\n        const validatedField = field\n        const pathSegments = path ? path.split('.') : []\n\n        if (field.passesCondition !== false) {\n          let validationResult: boolean | string = validatedField.valid\n\n          if ('validate' in field && typeof field.validate === 'function') {\n            let valueToValidate = field.value\n\n            if (field?.rows && Array.isArray(field.rows)) {\n              valueToValidate = contextRef.current.getDataByPath(path)\n            }\n\n            validationResult = await field.validate(valueToValidate, {\n              ...field,\n              id,\n              collectionSlug,\n              // If there is a parent document form, we can get the data from that form\n              blockData: undefined, // Will be expensive to get - not worth to pass to client-side validation, as this can be obtained by the user using `useFormFields()`\n              data: documentForm?.getData ? documentForm.getData() : data,\n              event: 'submit',\n              operation,\n              path: pathSegments,\n              preferences: {} as any,\n              req: {\n                payload: {\n                  config,\n                },\n                t,\n                user,\n              } as unknown as PayloadRequest,\n              siblingData: contextRef.current.getSiblingData(path),\n            })\n\n            if (typeof validationResult === 'string') {\n              validatedField.errorMessage = validationResult\n              validatedField.valid = false\n            } else {\n              validatedField.valid = true\n              validatedField.errorMessage = undefined\n            }\n          }\n\n          if (validatedField.valid === false) {\n            isValid = false\n          }\n        }\n\n        validatedFieldState[path] = validatedField\n      },\n    )\n\n    await Promise.all(validationPromises)\n\n    if (!dequal(contextRef.current.fields, validatedFieldState)) {\n      dispatchFields({ type: 'REPLACE_STATE', state: validatedFieldState })\n    }\n\n    setIsValid(isValid)\n\n    return isValid\n  }, [collectionSlug, config, dispatchFields, id, operation, t, user, documentForm])\n\n  const submit = useCallback(\n    async (options: SubmitOptions = {}, e): Promise<void> => {\n      const {\n        action: actionArg = action,\n        method: methodToUse = method,\n        overrides: overridesFromArgs = {},\n        skipValidation,\n      } = options\n\n      if (disabled) {\n        if (e) {\n          e.preventDefault()\n        }\n        return\n      }\n\n      // create new toast promise which will resolve manually later\n      let errorToast, successToast\n      const promise = new Promise((resolve, reject) => {\n        successToast = resolve\n        errorToast = reject\n      })\n\n      const hasFormSubmitAction =\n        actionArg || typeof action === 'string' || typeof action === 'function'\n\n      if (redirect || disableSuccessStatus || !hasFormSubmitAction) {\n        // Do not show submitting toast, as the promise toast may never disappear under these conditions.\n        // Instead, make successToast() or errorToast() throw toast.success / toast.error\n        successToast = (data) => toast.success(data)\n        errorToast = (data) => toast.error(data)\n      } else {\n        toast.promise(promise, {\n          error: (data) => {\n            return data as string\n          },\n          loading: t('general:submitting'),\n          success: (data) => {\n            return data as string\n          },\n        })\n      }\n\n      if (e) {\n        e.stopPropagation()\n        e.preventDefault()\n      }\n\n      setProcessing(true)\n      setDisabled(true)\n\n      if (waitForAutocomplete) {\n        await wait(100)\n      }\n\n      // Execute server side validations\n      if (Array.isArray(beforeSubmit)) {\n        let revalidatedFormState: FormState\n\n        const serializableFields = deepCopyObjectSimpleWithoutReactComponents(\n          contextRef.current.fields,\n        )\n\n        await beforeSubmit.reduce(async (priorOnChange, beforeSubmitFn) => {\n          await priorOnChange\n\n          const result = await beforeSubmitFn({\n            formState: serializableFields,\n          })\n\n          revalidatedFormState = result\n        }, Promise.resolve())\n\n        const isValid = Object.entries(revalidatedFormState).every(\n          ([, field]) => field.valid !== false,\n        )\n\n        setIsValid(isValid)\n\n        if (!isValid) {\n          setProcessing(false)\n          setSubmitted(true)\n          setDisabled(false)\n          return dispatchFields({ type: 'REPLACE_STATE', state: revalidatedFormState })\n        }\n      }\n\n      const isValid =\n        skipValidation || disableValidationOnSubmit ? true : await contextRef.current.validateForm()\n\n      setIsValid(isValid)\n      // If not valid, prevent submission\n      if (!isValid) {\n        errorToast(t('error:correctInvalidFields'))\n        setProcessing(false)\n        setSubmitted(true)\n        setDisabled(false)\n        return\n      }\n\n      let overrides = {}\n\n      if (typeof overridesFromArgs === 'function') {\n        overrides = overridesFromArgs(contextRef.current.fields)\n      } else if (typeof overridesFromArgs === 'object') {\n        overrides = overridesFromArgs\n      }\n\n      // If submit handler comes through via props, run that\n      if (onSubmit) {\n        const serializableFields = deepCopyObjectSimpleWithoutReactComponents(\n          contextRef.current.fields,\n        )\n\n        const data = reduceFieldsToValues(serializableFields, true)\n\n        for (const [key, value] of Object.entries(overrides)) {\n          data[key] = value\n        }\n\n        onSubmit(serializableFields, data)\n      }\n\n      if (!hasFormSubmitAction) {\n        // No action provided, so we should return. An example where this happens are lexical link drawers. Upon submitting the drawer, we\n        // want to close it without submitting the form. Stuff like validation would be handled by lexical before this, through beforeSubmit\n        setProcessing(false)\n        setSubmitted(true)\n        setDisabled(false)\n        return\n      }\n\n      const formData = await contextRef.current.createFormData(overrides, {\n        mergeOverrideData: Boolean(typeof overridesFromArgs !== 'function'),\n      })\n\n      try {\n        let res\n\n        if (typeof actionArg === 'string') {\n          res = await requests[methodToUse.toLowerCase()](actionArg, {\n            body: formData,\n            headers: {\n              'Accept-Language': i18n.language,\n            },\n          })\n        } else if (typeof action === 'function') {\n          res = await action(formData)\n        }\n\n        setModified(false)\n        setDisabled(false)\n\n        if (typeof handleResponse === 'function') {\n          handleResponse(res, successToast, errorToast)\n          return\n        }\n\n        const contentType = res.headers.get('content-type')\n        const isJSON = contentType && contentType.indexOf('application/json') !== -1\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let json: Record<string, any> = {}\n\n        if (isJSON) {\n          json = await res.json()\n        }\n        if (res.status < 400) {\n          if (typeof onSuccess === 'function') {\n            const newFormState = await onSuccess(json)\n            if (newFormState) {\n              const { newState: mergedFormState } = mergeServerFormState({\n                acceptValues: true,\n                existingState: contextRef.current.fields || {},\n                incomingState: newFormState,\n              })\n\n              dispatchFields({\n                type: 'REPLACE_STATE',\n                optimize: false,\n                state: mergedFormState,\n              })\n            }\n          }\n          setSubmitted(false)\n          setProcessing(false)\n\n          if (redirect) {\n            startRouteTransition(() => router.push(redirect))\n          } else if (!disableSuccessStatus) {\n            successToast(json.message || t('general:submissionSuccessful'))\n          }\n        } else {\n          setProcessing(false)\n          setSubmitted(true)\n\n          contextRef.current = { ...contextRef.current } // triggers rerender of all components that subscribe to form\n          if (json.message) {\n            errorToast(json.message)\n            return\n          }\n\n          if (Array.isArray(json.errors)) {\n            const [fieldErrors, nonFieldErrors] = json.errors.reduce(\n              ([fieldErrs, nonFieldErrs], err) => {\n                const newFieldErrs = []\n                const newNonFieldErrs = []\n\n                if (err?.message) {\n                  newNonFieldErrs.push(err)\n                }\n\n                if (Array.isArray(err?.data?.errors)) {\n                  err.data?.errors.forEach((dataError) => {\n                    if (dataError?.path) {\n                      newFieldErrs.push(dataError)\n                    } else {\n                      newNonFieldErrs.push(dataError)\n                    }\n                  })\n                }\n\n                return [\n                  [...fieldErrs, ...newFieldErrs],\n                  [...nonFieldErrs, ...newNonFieldErrs],\n                ]\n              },\n              [[], []],\n            )\n\n            setIsValid(false)\n\n            dispatchFields({\n              type: 'ADD_SERVER_ERRORS',\n              errors: fieldErrors,\n            })\n\n            nonFieldErrors.forEach((err) => {\n              errorToast(<FieldErrorsToast errorMessage={err.message || t('error:unknown')} />)\n            })\n\n            return\n          }\n\n          const message = errorMessages?.[res.status] || res?.statusText || t('error:unknown')\n\n          errorToast(message)\n        }\n      } catch (err) {\n        console.error('Error submitting form', err) // eslint-disable-line no-console\n        setProcessing(false)\n        setSubmitted(true)\n        setDisabled(false)\n        errorToast(err.message)\n      }\n    },\n    [\n      beforeSubmit,\n      startRouteTransition,\n      action,\n      disableSuccessStatus,\n      disableValidationOnSubmit,\n      disabled,\n      dispatchFields,\n      handleResponse,\n      method,\n      onSubmit,\n      onSuccess,\n      redirect,\n      router,\n      t,\n      i18n,\n      waitForAutocomplete,\n    ],\n  )\n\n  const getFields = useCallback(() => contextRef.current.fields, [])\n\n  const getField = useCallback((path: string) => contextRef.current.fields[path], [])\n\n  const getData = useCallback(() => reduceFieldsToValues(contextRef.current.fields, true), [])\n\n  const getSiblingData = useCallback(\n    (path: string) => getSiblingDataFunc(contextRef.current.fields, path),\n    [],\n  )\n\n  const getDataByPath = useCallback<GetDataByPath>(\n    (path: string) => getDataByPathFunc(contextRef.current.fields, path),\n    [],\n  )\n\n  const createFormData = useCallback<CreateFormData>(\n    async (overrides, { mergeOverrideData = true }) => {\n      let data = reduceFieldsToValues(contextRef.current.fields, true)\n\n      let file = data?.file\n\n      if (file) {\n        delete data.file\n      }\n\n      if (mergeOverrideData) {\n        data = {\n          ...data,\n          ...overrides,\n        }\n      } else {\n        data = overrides\n      }\n\n      const handler = getUploadHandler({ collectionSlug })\n\n      if (file && typeof handler === 'function') {\n        let filename = file.name\n        const clientUploadContext = await handler({\n          file,\n          updateFilename: (value) => {\n            filename = value\n          },\n        })\n\n        file = JSON.stringify({\n          clientUploadContext,\n          collectionSlug,\n          filename,\n          mimeType: file.type,\n          size: file.size,\n        })\n      }\n\n      const dataToSerialize = {\n        _payload: JSON.stringify(data),\n        file,\n      }\n\n      // nullAsUndefineds is important to allow uploads and relationship fields to clear themselves\n      const formData = serialize(dataToSerialize, { indices: true, nullsAsUndefineds: false })\n\n      return formData\n    },\n    [collectionSlug, getUploadHandler],\n  )\n\n  const reset = useCallback(\n    async (data: unknown) => {\n      const controller = handleAbortRef(abortResetFormRef)\n\n      const docPreferences = await getDocPreferences()\n\n      const { state: newState } = await getFormState({\n        id,\n        collectionSlug,\n        data,\n        docPermissions,\n        docPreferences,\n        globalSlug,\n        locale,\n        operation,\n        renderAllFields: true,\n        schemaPath: collectionSlug ? collectionSlug : globalSlug,\n        signal: controller.signal,\n        skipValidation: true,\n      })\n\n      contextRef.current = { ...initContextState } as FormContextType\n      setModified(false)\n      dispatchFields({ type: 'REPLACE_STATE', state: newState })\n\n      abortResetFormRef.current = null\n    },\n    [\n      collectionSlug,\n      dispatchFields,\n      globalSlug,\n      id,\n      operation,\n      getFormState,\n      docPermissions,\n      getDocPreferences,\n      locale,\n    ],\n  )\n\n  const replaceState = useCallback(\n    (state: FormState) => {\n      contextRef.current = { ...initContextState } as FormContextType\n      setModified(false)\n      dispatchFields({ type: 'REPLACE_STATE', state })\n    },\n    [dispatchFields],\n  )\n\n  const addFieldRow: FormContextType['addFieldRow'] = useCallback(\n    ({ blockType, path, rowIndex: rowIndexArg, subFieldState }) => {\n      const newRows: unknown[] = getDataByPath(path) || []\n      const rowIndex = rowIndexArg === undefined ? newRows.length : rowIndexArg\n\n      // dispatch ADD_ROW that sets requiresRender: true and adds a blank row to local form state.\n      // This performs no form state request, as the debounced onChange effect will do that for us.\n      dispatchFields({\n        type: 'ADD_ROW',\n        blockType,\n        path,\n        rowIndex,\n        subFieldState,\n      })\n\n      setModified(true)\n    },\n    [dispatchFields, getDataByPath],\n  )\n\n  const removeFieldRow: FormContextType['removeFieldRow'] = useCallback(\n    ({ path, rowIndex }) => {\n      dispatchFields({ type: 'REMOVE_ROW', path, rowIndex })\n    },\n    [dispatchFields],\n  )\n\n  const replaceFieldRow: FormContextType['replaceFieldRow'] = useCallback(\n    ({ blockType, path, rowIndex: rowIndexArg, subFieldState }) => {\n      const currentRows: unknown[] = getDataByPath(path)\n      const rowIndex = rowIndexArg === undefined ? currentRows.length : rowIndexArg\n\n      dispatchFields({\n        type: 'REPLACE_ROW',\n        blockType,\n        path,\n        rowIndex,\n        subFieldState,\n      })\n\n      setModified(true)\n    },\n    [dispatchFields, getDataByPath],\n  )\n\n  useEffect(() => {\n    const abortOnChange = abortResetFormRef.current\n\n    return () => {\n      abortAndIgnore(abortOnChange)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (initializingFromProps !== undefined) {\n      setInitializing(initializingFromProps)\n    }\n  }, [initializingFromProps])\n\n  contextRef.current.submit = submit\n  contextRef.current.getFields = getFields\n  contextRef.current.getField = getField\n  contextRef.current.getData = getData\n  contextRef.current.getSiblingData = getSiblingData\n  contextRef.current.getDataByPath = getDataByPath\n  contextRef.current.validateForm = validateForm\n  contextRef.current.createFormData = createFormData\n  contextRef.current.setModified = setModified\n  contextRef.current.setProcessing = setProcessing\n  contextRef.current.setBackgroundProcessing = setBackgroundProcessing\n\n  contextRef.current.setSubmitted = setSubmitted\n  contextRef.current.setIsValid = setIsValid\n  contextRef.current.disabled = disabled\n  contextRef.current.setDisabled = setDisabled\n  contextRef.current.formRef = formRef\n  contextRef.current.reset = reset\n  contextRef.current.replaceState = replaceState\n  contextRef.current.dispatchFields = dispatchFields\n  contextRef.current.addFieldRow = addFieldRow\n  contextRef.current.removeFieldRow = removeFieldRow\n  contextRef.current.replaceFieldRow = replaceFieldRow\n  contextRef.current.uuid = uuid\n  contextRef.current.initializing = initializing\n  contextRef.current.isValid = isValid\n\n  useEffect(() => {\n    setIsMounted(true)\n  }, [])\n\n  useEffect(() => {\n    if (typeof disabledFromProps === 'boolean') {\n      setDisabled(disabledFromProps)\n    }\n  }, [disabledFromProps])\n\n  useEffect(() => {\n    if (typeof submittedFromProps === 'boolean') {\n      setSubmitted(submittedFromProps)\n    }\n  }, [submittedFromProps])\n\n  useEffect(() => {\n    if (initialState) {\n      contextRef.current = { ...initContextState } as FormContextType\n      dispatchFields({\n        type: 'REPLACE_STATE',\n        optimize: false,\n        sanitize: true,\n        state: initialState,\n      })\n    }\n  }, [initialState, dispatchFields])\n\n  useThrottledEffect(\n    () => {\n      refreshCookie()\n    },\n    15000,\n    [fields],\n  )\n\n  useEffect(() => {\n    contextRef.current = { ...contextRef.current } // triggers rerender of all components that subscribe to form\n    setModified(false)\n  }, [locale])\n\n  const classes = [className, baseClass].filter(Boolean).join(' ')\n\n  const executeOnChange = useEffectEvent(async (submitted: boolean, signal: AbortSignal) => {\n    if (Array.isArray(onChange)) {\n      let revalidatedFormState: FormState = contextRef.current.fields\n\n      for (const onChangeFn of onChange) {\n        if (signal.aborted) {\n          return\n        }\n\n        // Edit view default onChange is in packages/ui/src/views/Edit/index.tsx. This onChange usually sends a form state request\n        revalidatedFormState = await onChangeFn({\n          formState: deepCopyObjectSimpleWithoutReactComponents(contextRef.current.fields),\n          submitted,\n        })\n      }\n\n      if (!revalidatedFormState) {\n        return\n      }\n\n      const { changed, newState } = mergeServerFormState({\n        existingState: contextRef.current.fields || {},\n        incomingState: revalidatedFormState,\n      })\n\n      if (changed && !signal.aborted) {\n        prevFields.current = newState\n\n        dispatchFields({\n          type: 'REPLACE_STATE',\n          optimize: false,\n          state: newState,\n        })\n      }\n    }\n  })\n\n  useDebouncedEffect(\n    () => {\n      if ((isFirstRenderRef.current || !dequal(fields, prevFields.current)) && modified) {\n        queueTask(async (signal) => executeOnChange(submitted, signal))\n      }\n\n      prevFields.current = fields\n      isFirstRenderRef.current = false\n    },\n    [modified, submitted, fields, queueTask],\n    250,\n  )\n\n  const DocumentFormContextComponent: React.FC<any> = isDocumentForm\n    ? DocumentFormContext\n    : React.Fragment\n\n  const documentFormContextProps = isDocumentForm\n    ? {\n        value: contextRef.current,\n      }\n    : {}\n\n  const El: 'form' = (el as unknown as 'form') || 'form'\n\n  return (\n    <El\n      action={typeof action === 'function' ? void action : action}\n      className={classes}\n      method={method}\n      noValidate\n      onSubmit={(e) => void contextRef.current.submit({}, e)}\n      ref={formRef}\n    >\n      <DocumentFormContextComponent {...documentFormContextProps}>\n        <FormContext value={contextRef.current}>\n          <FormWatchContext\n            value={{\n              fields,\n              ...contextRef.current,\n            }}\n          >\n            <SubmittedContext value={submitted}>\n              <InitializingContext value={!isMounted || (isMounted && initializing)}>\n                <ProcessingContext value={processing}>\n                  <BackgroundProcessingContext value={backgroundProcessing}>\n                    <ModifiedContext value={modified}>\n                      {/* eslint-disable-next-line @eslint-react/no-context-provider */}\n                      <FormFieldsContext.Provider value={fieldsReducer}>\n                        {children}\n                      </FormFieldsContext.Provider>\n                    </ModifiedContext>\n                  </BackgroundProcessingContext>\n                </ProcessingContext>\n              </InitializingContext>\n            </SubmittedContext>\n          </FormWatchContext>\n        </FormContext>\n      </DocumentFormContextComponent>\n    </El>\n  )\n}\n\nexport {\n  DocumentFormContext,\n  FormContext,\n  FormFieldsContext,\n  FormWatchContext,\n  ModifiedContext,\n  ProcessingContext,\n  SubmittedContext,\n  useAllFormFields,\n  useDocumentForm,\n  useForm,\n  useFormFields,\n  useFormModified,\n  useFormProcessing,\n  useFormSubmitted,\n  useWatchForm,\n} from './context.js'\n\nexport { FormProps }\n"],"mappings":"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","ignoreList":[]}