{"version":3,"file":"index.js","names":["c","_c","useCallback","useMemo","useRef","useThrottledEffect","useAuth","useConfig","useDocumentInfo","useOperation","useTranslation","useDocumentForm","useForm","useFormFields","useFormInitializing","useFormModified","useFormProcessing","useFormSubmitted","useField","options","$","disableFormData","t0","hasRows","path","validate","undefined","submitted","processing","initializing","user","id","collectionSlug","operation","dispatchField","_temp","t1","t2","fields","field","t","config","getData","getDataByPath","getSiblingData","setModified","documentForm","modified","filterOptions","value","initialValue","valid","showError","prevValid","prevErrorMessage","errorMessage","split","pathSegments","t3","e","t4","disableModifyingForm","val","target","type","setTimeout","setValue","t5","customComponents","t6","t7","t8","errorPaths","t9","rows","t10","t11","disabled","formInitializing","formProcessing","formSubmitted","result","t12","validateField","valueToValidate","Array","isArray","current","valid_0","data","isValid","blockData","event","preferences","req","payload","siblingData","update","t13","t14","dispatch"],"sources":["../../../src/forms/useField/index.tsx"],"sourcesContent":["'use client'\nimport type { PayloadRequest } from 'payload'\n\nimport { useCallback, useMemo, useRef } from 'react'\n\nimport type { UPDATE } from '../Form/types.js'\nimport type { FieldType, Options } from './types.js'\n\nexport type { FieldType, Options }\n\nimport { useThrottledEffect } from '../../hooks/useThrottledEffect.js'\nimport { useAuth } from '../../providers/Auth/index.js'\nimport { useConfig } from '../../providers/Config/index.js'\nimport { useDocumentInfo } from '../../providers/DocumentInfo/index.js'\nimport { useOperation } from '../../providers/Operation/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport {\n  useDocumentForm,\n  useForm,\n  useFormFields,\n  useFormInitializing,\n  useFormModified,\n  useFormProcessing,\n  useFormSubmitted,\n} from '../Form/context.js'\n\n/**\n * Get and set the value of a form field.\n *\n * @see https://payloadcms.com/docs/admin/react-hooks#usefield\n */\nexport const useField = <TValue,>(options: Options): FieldType<TValue> => {\n  const { disableFormData = false, hasRows, path, validate } = options\n\n  const submitted = useFormSubmitted()\n  const processing = useFormProcessing()\n  const initializing = useFormInitializing()\n  const { user } = useAuth()\n  const { id, collectionSlug } = useDocumentInfo()\n  const operation = useOperation()\n\n  const dispatchField = useFormFields(([_, dispatch]) => dispatch)\n  const field = useFormFields(([fields]) => (fields && fields?.[path]) || null)\n\n  const { t } = useTranslation()\n  const { config } = useConfig()\n\n  const { getData, getDataByPath, getSiblingData, setModified } = useForm()\n  const documentForm = useDocumentForm()\n  const modified = useFormModified()\n\n  const filterOptions = field?.filterOptions\n  const value = field?.value as TValue\n  const initialValue = field?.initialValue as TValue\n  const valid = typeof field?.valid === 'boolean' ? field.valid : true\n  const showError = valid === false && submitted\n\n  const prevValid = useRef(valid)\n  const prevErrorMessage = useRef(field?.errorMessage)\n\n  const pathSegments = path ? path.split('.') : []\n\n  // Method to return from `useField`, used to\n  // update field values from field component(s)\n  const setValue = useCallback(\n    (e, disableModifyingForm = false) => {\n      const val = e && e.target ? e.target.value : e\n      dispatchField({\n        type: 'UPDATE',\n        disableFormData: disableFormData || (hasRows && val > 0),\n        path,\n        value: val,\n      })\n\n      if (!disableModifyingForm) {\n        if (typeof setModified === 'function') {\n          // Only update setModified to true if the form is not already set to modified. Otherwise the following could happen:\n          // 1. Text field: someone types in it in an unmodified form\n          // 2. After setTimeout triggers setModified(true): form is set to modified. Save Button becomes available. Good!\n          // 3. Type something in text field\n          // 4. Click on save button before setTimeout in useField has finished (so setModified(true) has not been run yet)\n          // 5. Form is saved, setModified(false) is set in the Form/index.tsx `submit` function, \"saved successfully\" toast appears\n          // 6. setModified(true) inside the timeout is run, form is set to modified again, even though it was already saved and thus set to unmodified. Bad! This should have happened before the form is saved. Now the form should be unmodified and stay that way\n          //    until a NEW change happens. Due to this, the \"Leave without saving\" modal appears even though it should not when leaving the page fast immediately after saving the document.\n          // This is only an issue for forms which have already been set to modified true, as that causes the save button to be enabled. If we prevent this setTimeout to be run\n          // for already-modified forms first place (which is unnecessary), we can avoid this issue. As for unmodified forms, this race issue will not happen, because you cannot click the save button faster\n          // than the timeout in useField is run. That's because the save button won't even be enabled for clicking until the setTimeout in useField has run.\n          // This fixes e2e test flakes, as e2e tests were often so fast that they were saving the form before the timeout in useField has run.\n          // Specifically, this fixes the 'should not warn about unsaved changes when navigating to lexical editor with blocks node and then leaving the page after making a change and saving' lexical e2e test.\n          if (modified === false) {\n            // Update modified state after field value comes back\n            // to avoid cursor jump caused by state value / DOM mismatch\n            setTimeout(() => {\n              setModified(true)\n            }, 10)\n          }\n        }\n      }\n    },\n    [setModified, path, dispatchField, disableFormData, hasRows, modified],\n  )\n\n  // Store result from hook as ref\n  // to prevent unnecessary rerenders\n  const result: FieldType<TValue> = useMemo(\n    () => ({\n      customComponents: field?.customComponents,\n      disabled: processing || initializing,\n      errorMessage: field?.errorMessage,\n      errorPaths: field?.errorPaths || [],\n      filterOptions,\n      formInitializing: initializing,\n      formProcessing: processing,\n      formSubmitted: submitted,\n      initialValue,\n      path,\n      rows: field?.rows,\n      setValue,\n      showError,\n      valid: field?.valid,\n      value,\n    }),\n    [\n      field,\n      processing,\n      setValue,\n      showError,\n      submitted,\n      value,\n      initialValue,\n      path,\n      filterOptions,\n      initializing,\n    ],\n  )\n\n  // Throttle the validate function\n  useThrottledEffect(\n    () => {\n      const validateField = async () => {\n        let valueToValidate = value\n\n        if (field?.rows && Array.isArray(field.rows)) {\n          valueToValidate = getDataByPath(path)\n        }\n\n        let errorMessage: string | undefined = prevErrorMessage.current\n        let valid: boolean | string = prevValid.current\n\n        const data = getData()\n        const isValid =\n          typeof validate === 'function'\n            ? await validate(valueToValidate, {\n                id,\n                blockData: undefined, // Will be expensive to get - not worth to pass to client-side validation, as this can be obtained by the user using `useFormFields()`\n                collectionSlug,\n                data: documentForm?.getData ? documentForm.getData() : data,\n                event: 'onChange',\n                operation,\n                path: pathSegments,\n                preferences: {} as any,\n                req: {\n                  payload: {\n                    config,\n                  },\n                  t,\n                  user,\n                } as unknown as PayloadRequest,\n                siblingData: getSiblingData(path),\n              })\n            : typeof prevErrorMessage.current === 'string'\n              ? prevErrorMessage.current\n              : prevValid.current\n\n        if (typeof isValid === 'string') {\n          valid = false\n          errorMessage = isValid\n        } else if (typeof isValid === 'boolean') {\n          valid = isValid\n          errorMessage = undefined\n        }\n\n        // Only dispatch if the validation result has changed\n        // This will prevent unnecessary rerenders\n        if (valid !== prevValid.current || errorMessage !== prevErrorMessage.current) {\n          prevValid.current = valid\n          prevErrorMessage.current = errorMessage\n\n          const update: UPDATE = {\n            type: 'UPDATE',\n            errorMessage,\n            path,\n            rows: field?.rows,\n            valid,\n            validate,\n            value,\n          }\n\n          if (disableFormData || (hasRows ? typeof value === 'number' && value > 0 : false)) {\n            update.disableFormData = true\n          }\n\n          if (typeof dispatchField === 'function') {\n            dispatchField(update)\n          }\n        }\n      }\n\n      void validateField()\n    },\n    150,\n    [\n      value,\n      disableFormData,\n      dispatchField,\n      getData,\n      getSiblingData,\n      getDataByPath,\n      id,\n      operation,\n      path,\n      user,\n      validate,\n      field?.rows,\n      collectionSlug,\n    ],\n  )\n\n  return result\n}\n"],"mappings":"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","ignoreList":[]}