{"version":3,"file":"types.js","names":[],"sources":["../../../src/forms/useField/types.ts"],"sourcesContent":["import type { FieldState, FilterOptionsResult, Row, Validate } from 'payload'\n\nexport type Options = {\n  disableFormData?: boolean\n  hasRows?: boolean\n  path: string\n  validate?: Validate\n}\n\nexport type FieldType<T> = {\n  customComponents?: FieldState['customComponents']\n  disabled: boolean\n  errorMessage?: string\n  errorPaths?: string[]\n  filterOptions?: FilterOptionsResult\n  formInitializing: boolean\n  formProcessing: boolean\n  formSubmitted: boolean\n  initialValue?: T\n  readOnly?: boolean\n  rows?: Row[]\n  setValue: (val: unknown, disableModifyingForm?: boolean) => void\n  showError: boolean\n  valid?: boolean\n  value: T\n}\n"],"mappings":"AASA","ignoreList":[]}