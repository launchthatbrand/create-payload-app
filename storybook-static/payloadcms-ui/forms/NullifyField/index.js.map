{"version":3,"file":"index.js","names":["c","_c","React","Banner","CheckboxField","useConfig","useLocale","useTranslation","NullifyLocaleField","t0","$","fieldValue","localized","path","code","currentLocale","config","t1","localization","checked","setChecked","useState","t","defaultLocale","fallback","hideCheckbox","Array","isArray","length","t2","_jsx","children","field","name","label","id","replace","schemaPath"],"sources":["../../../src/forms/NullifyField/index.tsx"],"sourcesContent":["'use client'\n\nimport * as React from 'react'\n\nimport { Banner } from '../../elements/Banner/index.js'\nimport { CheckboxField } from '../../fields/Checkbox/index.js'\nimport { useConfig } from '../../providers/Config/index.js'\nimport { useLocale } from '../../providers/Locale/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\n\ntype NullifyLocaleFieldProps = {\n  readonly fieldValue?: [] | null | number\n  readonly localized: boolean\n  readonly path: string\n}\n\nexport const NullifyLocaleField: React.FC<NullifyLocaleFieldProps> = ({\n  fieldValue,\n  localized,\n  path,\n}) => {\n  const { code: currentLocale } = useLocale()\n  const {\n    config: { localization },\n  } = useConfig()\n  const [checked, setChecked] = React.useState<boolean>(typeof fieldValue !== 'number')\n  const { t } = useTranslation()\n\n  if (!localized || !localization) {\n    // hide when field is not localized or localization is not enabled\n    return null\n  }\n\n  if (localization.defaultLocale === currentLocale || !localization.fallback) {\n    // if editing default locale or when fallback is disabled\n    return null\n  }\n\n  if (fieldValue) {\n    let hideCheckbox = false\n    if (typeof fieldValue === 'number' && fieldValue > 0) {\n      hideCheckbox = true\n    }\n    if (Array.isArray(fieldValue) && fieldValue.length > 0) {\n      hideCheckbox = true\n    }\n\n    if (hideCheckbox) {\n      if (checked) {\n        setChecked(false)\n      } // uncheck when field has value\n      return null\n    }\n  }\n\n  return (\n    <Banner>\n      <CheckboxField\n        checked={checked}\n        field={{\n          name: '',\n          label: t('general:fallbackToDefaultLocale'),\n        }}\n        id={`field-${path.replace(/\\./g, '__')}`}\n        path={path}\n        schemaPath=\"\"\n        // onToggle={onChange}\n      />\n    </Banner>\n  )\n}\n"],"mappings":"AAAA;;AAAA,SAAAA,CAAA,IAAAC,EAAA;;AAEA,YAAYC,KAAA,MAAW;AAEvB,SAASC,MAAM,QAAQ;AACvB,SAASC,aAAa,QAAQ;AAC9B,SAASC,SAAS,QAAQ;AAC1B,SAASC,SAAS,QAAQ;AAC1B,SAASC,cAAc,QAAQ;AAQ/B,OAAO,MAAMC,kBAAA,GAAwDC,EAAA;EAAA,MAAAC,CAAA,GAAAT,EAAA;EAAC;IAAAU,UAAA;IAAAC,SAAA;IAAAC;EAAA,IAAAJ,EAIrE;EACC;IAAAK,IAAA,EAAAC;EAAA,IAAgCT,SAAA;EAChC;IAAAU,MAAA,EAAAC;EAAA,IAEIZ,SAAA;EADM;IAAAa;EAAA,IAAAD,EAAgB;EAE1B,OAAAE,OAAA,EAAAC,UAAA,IAA8BlB,KAAA,CAAAmB,QAAA,CAAwB,OAAOV,UAAA,KAAe;EAC5E;IAAAW;EAAA,IAAcf,cAAA;EAAA,IAEV,CAACK,SAAA,KAAcM,YAAA;IAAA;EAAA;EAAA,IAKfA,YAAA,CAAAK,aAAA,KAA+BR,aAAA,KAAkBG,YAAA,CAAAM,QAAqB;IAAA;EAAA;EAAA,IAKtEb,UAAA;IACF,IAAAc,YAAA;IAAmB,IACf,OAAOd,UAAA,KAAe,YAAYA,UAAA,IAAa;MACjDc,YAAA,CAAAA,CAAA,CAAAA,IAAA;IAAA;IAAA,IAEEC,KAAA,CAAAC,OAAA,CAAchB,UAAA,KAAeA,UAAA,CAAAiB,MAAA,IAAoB;MACnDH,YAAA,CAAAA,CAAA,CAAAA,IAAA;IAAA;IAAA,IAGEA,YAAA;MAAA,IACEN,OAAA;QACFC,UAAA,MAAW;MAAA;MAAA;IAAA;EAAA;EAAA,IAAAS,EAAA;EAAA,IAAAnB,CAAA,QAAAS,OAAA,IAAAT,CAAA,QAAAG,IAAA,IAAAH,CAAA,QAAAY,CAAA;IAOfO,EAAA,GAAAC,IAAA,CAAA3B,MAAA;MAAA4B,QAAA,EACED,IAAA,CAAA1B,aAAA;QAAAe,OAAA;QAAAa,KAAA;UAAAC,IAAA,EAGU;UAAAC,KAAA,EACCZ,CAAA,CAAE;QAAA;QAAAa,EAAA,EAEP,SAAStB,IAAA,CAAAuB,OAAA,QAAoB,OAAO;QAAAvB,IAAA;QAAAwB,UAAA,EAE7B;MAAA,C;;;;;;;;;SATfR,E;CAcJ","ignoreList":[]}