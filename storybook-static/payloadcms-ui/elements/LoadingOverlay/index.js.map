{"version":3,"file":"index.js","names":["c","_c","React","createContext","LoadingOverlay","useDelayedRender","useTranslation","defaultLoadingOverlayState","reducer","animatedDuration","Context","isOnScreen","toggleLoadingOverlay","undefined","LoadingOverlayProvider","t0","$","children","t","t1","fallbackText","overlays","dispatchOverlay","useReducer","t2","isLoading","delayBeforeShow","inTimeout","minShowTime","outTimeout","show","isMounted","isUnmounting","triggerDelayedRender","t3","t4","type","key","loadingText","t5","payload","overlayType","_jsx","animationDuration","_jsxs","value","useLoadingOverlay","contextHook","use","Error"],"sources":["../../../src/elements/LoadingOverlay/index.tsx"],"sourcesContent":["'use client'\nimport React, { createContext } from 'react'\n\nimport type { LoadingOverlayContext, ToggleLoadingOverlay } from './types.js'\n\nimport { LoadingOverlay } from '../../elements/Loading/index.js'\nimport { useDelayedRender } from '../../hooks/useDelayedRender.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { defaultLoadingOverlayState, reducer } from './reducer.js'\n\nconst animatedDuration = 250\n\nconst Context = createContext({\n  isOnScreen: false,\n  toggleLoadingOverlay: undefined,\n})\n\nexport const LoadingOverlayProvider: React.FC<{ children?: React.ReactNode }> = ({ children }) => {\n  const { t } = useTranslation()\n  const fallbackText = t('general:loading')\n  const [overlays, dispatchOverlay] = React.useReducer(reducer, defaultLoadingOverlayState)\n\n  const { isMounted, isUnmounting, triggerDelayedRender } = useDelayedRender({\n    delayBeforeShow: 1000,\n    inTimeout: animatedDuration,\n    minShowTime: 500,\n    outTimeout: animatedDuration,\n    show: overlays.isLoading,\n  })\n\n  const toggleLoadingOverlay = React.useCallback<ToggleLoadingOverlay>(\n    ({ type, isLoading, key, loadingText = fallbackText }) => {\n      if (isLoading) {\n        triggerDelayedRender()\n        dispatchOverlay({\n          type: 'add',\n          payload: {\n            type,\n            key,\n            loadingText,\n          },\n        })\n      } else {\n        dispatchOverlay({\n          type: 'remove',\n          payload: {\n            type,\n            key,\n          },\n        })\n      }\n    },\n    [triggerDelayedRender, fallbackText],\n  )\n\n  return (\n    <Context\n      value={{\n        isOnScreen: isMounted,\n        toggleLoadingOverlay,\n      }}\n    >\n      {isMounted && (\n        <LoadingOverlay\n          animationDuration={`${animatedDuration}ms`}\n          loadingText={overlays.loadingText || fallbackText}\n          overlayType={overlays.overlayType}\n          show={!isUnmounting}\n        />\n      )}\n      {children}\n    </Context>\n  )\n}\n\nexport const useLoadingOverlay = (): LoadingOverlayContext => {\n  const contextHook = React.use(Context)\n  if (contextHook === undefined) {\n    throw new Error('useLoadingOverlay must be used within a LoadingOverlayProvider')\n  }\n\n  return contextHook\n}\n"],"mappings":"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","ignoreList":[]}