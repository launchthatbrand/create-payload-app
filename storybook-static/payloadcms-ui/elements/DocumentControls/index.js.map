{"version":3,"file":"index.js","names":["c","_c","getTranslation","formatAdminURL","React","Fragment","useEffect","useFormInitializing","useFormProcessing","useConfig","useEditDepth","useTranslation","formatDate","Autosave","Button","CopyLocaleData","DeleteDocument","DuplicateDocument","Gutter","Locked","Popup","PopupList","PreviewButton","PublishButton","RenderCustomComponent","SaveButton","SaveDraftButton","Status","baseClass","DocumentControls","props","$","id","slug","customComponents","t0","data","disableActions","disableCreate","hasSavePermission","isAccountView","isEditing","onDelete","onDrawerCreateNew","onDuplicate","onTakeOver","permissions","readOnlyForIncomingUser","redirectAfterDelete","redirectAfterDuplicate","user","t1","undefined","CustomPreviewButton","CustomPublishButton","CustomSaveButton","CustomSaveDraftButton","i18n","t","editDepth","config","getEntityConfig","collectionConfig","collectionSlug","globalConfig","globalSlug","admin","t2","localization","routes","t3","dateFormat","adminRoute","updatedAt","setUpdatedAt","useState","createdAt","setCreatedAt","processing","initializing","t4","t5","date","pattern","hasCreatePermission","create","hasDeletePermission","delete","showDotMenu","Boolean","unsavedDraftWithValidations","versions","drafts","validate","autosaveEnabled","autosave","showCopyToLocale","disableCopyToLocale","t6","_jsx","className","t7","buttonStyle","onClick","size","type","children","_jsxs","label","labels","singular","filter","join","collection","global","publishedDocUpdatedAt","timestamps","title","preview","CustomComponent","Fallback","button","disabled","horizontalAlign","verticalAlign","ButtonGroup","href","path","disableDuplicate","toString","singularLabel","buttonId","useAsTitle"],"sources":["../../../src/elements/DocumentControls/index.tsx"],"sourcesContent":["'use client'\nimport type {\n  ClientUser,\n  SanitizedCollectionConfig,\n  SanitizedCollectionPermission,\n  SanitizedGlobalPermission,\n} from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport { formatAdminURL } from 'payload/shared'\nimport React, { Fragment, useEffect } from 'react'\n\nimport type { DocumentDrawerContextType } from '../DocumentDrawer/Provider.js'\n\nimport { useFormInitializing, useFormProcessing } from '../../forms/Form/context.js'\nimport { useConfig } from '../../providers/Config/index.js'\nimport { useEditDepth } from '../../providers/EditDepth/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { formatDate } from '../../utilities/formatDocTitle/formatDateTitle.js'\nimport { Autosave } from '../Autosave/index.js'\nimport { Button } from '../Button/index.js'\nimport { CopyLocaleData } from '../CopyLocaleData/index.js'\nimport { DeleteDocument } from '../DeleteDocument/index.js'\nimport { DuplicateDocument } from '../DuplicateDocument/index.js'\nimport { Gutter } from '../Gutter/index.js'\nimport { Locked } from '../Locked/index.js'\nimport { Popup, PopupList } from '../Popup/index.js'\nimport { PreviewButton } from '../PreviewButton/index.js'\nimport { PublishButton } from '../PublishButton/index.js'\nimport { RenderCustomComponent } from '../RenderCustomComponent/index.js'\nimport { SaveButton } from '../SaveButton/index.js'\nimport { SaveDraftButton } from '../SaveDraftButton/index.js'\nimport { Status } from '../Status/index.js'\nimport './index.scss'\n\nconst baseClass = 'doc-controls'\n\nexport const DocumentControls: React.FC<{\n  readonly apiURL: string\n  readonly customComponents?: {\n    readonly PreviewButton?: React.ReactNode\n    readonly PublishButton?: React.ReactNode\n    readonly SaveButton?: React.ReactNode\n    readonly SaveDraftButton?: React.ReactNode\n  }\n  readonly data?: any\n  readonly disableActions?: boolean\n  readonly disableCreate?: boolean\n  readonly hasPublishPermission?: boolean\n  readonly hasSavePermission?: boolean\n  readonly id?: number | string\n  readonly isAccountView?: boolean\n  readonly isEditing?: boolean\n  readonly onDelete?: DocumentDrawerContextType['onDelete']\n  readonly onDrawerCreateNew?: () => void\n  /* Only available if `redirectAfterDuplicate` is `false` */\n  readonly onDuplicate?: DocumentDrawerContextType['onDuplicate']\n  readonly onSave?: DocumentDrawerContextType['onSave']\n  readonly onTakeOver?: () => void\n  readonly permissions: null | SanitizedCollectionPermission | SanitizedGlobalPermission\n  readonly readOnlyForIncomingUser?: boolean\n  readonly redirectAfterDelete?: boolean\n  readonly redirectAfterDuplicate?: boolean\n  readonly slug: SanitizedCollectionConfig['slug']\n  readonly user?: ClientUser\n}> = (props) => {\n  const {\n    id,\n    slug,\n    customComponents: {\n      PreviewButton: CustomPreviewButton,\n      PublishButton: CustomPublishButton,\n      SaveButton: CustomSaveButton,\n      SaveDraftButton: CustomSaveDraftButton,\n    } = {},\n    data,\n    disableActions,\n    disableCreate,\n    hasSavePermission,\n    isAccountView,\n    isEditing,\n    onDelete,\n    onDrawerCreateNew,\n    onDuplicate,\n    onTakeOver,\n    permissions,\n    readOnlyForIncomingUser,\n    redirectAfterDelete,\n    redirectAfterDuplicate,\n    user,\n  } = props\n\n  const { i18n, t } = useTranslation()\n\n  const editDepth = useEditDepth()\n\n  const { config, getEntityConfig } = useConfig()\n\n  const collectionConfig = getEntityConfig({ collectionSlug: slug })\n\n  const globalConfig = getEntityConfig({ globalSlug: slug })\n\n  const {\n    admin: { dateFormat },\n    localization,\n    routes: { admin: adminRoute },\n  } = config\n\n  // Settings these in state to avoid hydration issues if there is a mismatch between the server and client\n  const [updatedAt, setUpdatedAt] = React.useState<string>('')\n  const [createdAt, setCreatedAt] = React.useState<string>('')\n\n  const processing = useFormProcessing()\n  const initializing = useFormInitializing()\n\n  useEffect(() => {\n    if (data?.updatedAt) {\n      setUpdatedAt(formatDate({ date: data.updatedAt, i18n, pattern: dateFormat }))\n    }\n    if (data?.createdAt) {\n      setCreatedAt(formatDate({ date: data.createdAt, i18n, pattern: dateFormat }))\n    }\n  }, [data, i18n, dateFormat])\n\n  const hasCreatePermission = permissions && 'create' in permissions && permissions.create\n\n  const hasDeletePermission = permissions && 'delete' in permissions && permissions.delete\n\n  const showDotMenu = Boolean(\n    collectionConfig && id && !disableActions && (hasCreatePermission || hasDeletePermission),\n  )\n\n  const unsavedDraftWithValidations =\n    !id && collectionConfig?.versions?.drafts && collectionConfig.versions?.drafts.validate\n\n  const autosaveEnabled =\n    (collectionConfig?.versions?.drafts && collectionConfig?.versions?.drafts?.autosave) ||\n    (globalConfig?.versions?.drafts && globalConfig?.versions?.drafts?.autosave)\n\n  const showCopyToLocale = localization && !collectionConfig?.admin?.disableCopyToLocale\n\n  return (\n    <Gutter className={baseClass}>\n      <div className={`${baseClass}__wrapper`}>\n        <div className={`${baseClass}__content`}>\n          <ul className={`${baseClass}__meta`}>\n            {collectionConfig && !isEditing && !isAccountView && (\n              <li className={`${baseClass}__list-item`}>\n                <p className={`${baseClass}__value`}>\n                  {i18n.t('general:creatingNewLabel', {\n                    label: getTranslation(\n                      collectionConfig?.labels?.singular ?? i18n.t('general:document'),\n                      i18n,\n                    ),\n                  })}\n                </p>\n              </li>\n            )}\n            {user && readOnlyForIncomingUser && (\n              <Locked className={`${baseClass}__locked-controls`} user={user} />\n            )}\n            {(collectionConfig?.versions?.drafts || globalConfig?.versions?.drafts) && (\n              <Fragment>\n                {(globalConfig || (collectionConfig && isEditing)) && (\n                  <li\n                    className={[`${baseClass}__status`, `${baseClass}__list-item`]\n                      .filter(Boolean)\n                      .join(' ')}\n                  >\n                    <Status />\n                  </li>\n                )}\n                {hasSavePermission && autosaveEnabled && !unsavedDraftWithValidations && (\n                  <li className={`${baseClass}__list-item`}>\n                    <Autosave\n                      collection={collectionConfig}\n                      global={globalConfig}\n                      id={id}\n                      publishedDocUpdatedAt={data?.createdAt}\n                    />\n                  </li>\n                )}\n              </Fragment>\n            )}\n            {collectionConfig?.timestamps && (isEditing || isAccountView) && (\n              <Fragment>\n                <li\n                  className={[`${baseClass}__list-item`, `${baseClass}__value-wrap`]\n                    .filter(Boolean)\n                    .join(' ')}\n                  title={data?.updatedAt ? updatedAt : ''}\n                >\n                  <p className={`${baseClass}__label`}>{i18n.t('general:lastModified')}:&nbsp;</p>\n                  {data?.updatedAt && <p className={`${baseClass}__value`}>{updatedAt}</p>}\n                </li>\n                <li\n                  className={[`${baseClass}__list-item`, `${baseClass}__value-wrap`]\n                    .filter(Boolean)\n                    .join(' ')}\n                  title={data?.createdAt ? createdAt : ''}\n                >\n                  <p className={`${baseClass}__label`}>{i18n.t('general:created')}:&nbsp;</p>\n                  {data?.createdAt && <p className={`${baseClass}__value`}>{createdAt}</p>}\n                </li>\n              </Fragment>\n            )}\n          </ul>\n        </div>\n        <div className={`${baseClass}__controls-wrapper`}>\n          <div className={`${baseClass}__controls`}>\n            {(collectionConfig?.admin.preview || globalConfig?.admin.preview) && (\n              <RenderCustomComponent\n                CustomComponent={CustomPreviewButton}\n                Fallback={<PreviewButton />}\n              />\n            )}\n            {hasSavePermission && (\n              <Fragment>\n                {collectionConfig?.versions?.drafts || globalConfig?.versions?.drafts ? (\n                  <Fragment>\n                    {(unsavedDraftWithValidations || !autosaveEnabled) && (\n                      <RenderCustomComponent\n                        CustomComponent={CustomSaveDraftButton}\n                        Fallback={<SaveDraftButton />}\n                      />\n                    )}\n                    <RenderCustomComponent\n                      CustomComponent={CustomPublishButton}\n                      Fallback={<PublishButton />}\n                    />\n                  </Fragment>\n                ) : (\n                  <RenderCustomComponent\n                    CustomComponent={CustomSaveButton}\n                    Fallback={<SaveButton />}\n                  />\n                )}\n              </Fragment>\n            )}\n            {user && readOnlyForIncomingUser && (\n              <Button\n                buttonStyle=\"secondary\"\n                id=\"take-over\"\n                onClick={onTakeOver}\n                size=\"medium\"\n                type=\"button\"\n              >\n                {t('general:takeOver')}\n              </Button>\n            )}\n          </div>\n          {showDotMenu && !readOnlyForIncomingUser && (\n            <Popup\n              button={\n                <div className={`${baseClass}__dots`}>\n                  <div />\n                  <div />\n                  <div />\n                </div>\n              }\n              className={`${baseClass}__popup`}\n              disabled={initializing || processing}\n              horizontalAlign=\"right\"\n              size=\"large\"\n              verticalAlign=\"bottom\"\n            >\n              <PopupList.ButtonGroup>\n                {showCopyToLocale && <CopyLocaleData />}\n                {hasCreatePermission && (\n                  <React.Fragment>\n                    {!disableCreate && (\n                      <Fragment>\n                        {editDepth > 1 ? (\n                          <PopupList.Button id=\"action-create\" onClick={onDrawerCreateNew}>\n                            {i18n.t('general:createNew')}\n                          </PopupList.Button>\n                        ) : (\n                          <PopupList.Button\n                            href={formatAdminURL({\n                              adminRoute,\n                              path: `/collections/${collectionConfig?.slug}/create`,\n                            })}\n                            id=\"action-create\"\n                          >\n                            {i18n.t('general:createNew')}\n                          </PopupList.Button>\n                        )}\n                      </Fragment>\n                    )}\n                    {collectionConfig.disableDuplicate !== true && isEditing && (\n                      <DuplicateDocument\n                        id={id.toString()}\n                        onDuplicate={onDuplicate}\n                        redirectAfterDuplicate={redirectAfterDuplicate}\n                        singularLabel={collectionConfig?.labels?.singular}\n                        slug={collectionConfig?.slug}\n                      />\n                    )}\n                  </React.Fragment>\n                )}\n                {hasDeletePermission && (\n                  <DeleteDocument\n                    buttonId=\"action-delete\"\n                    collectionSlug={collectionConfig?.slug}\n                    id={id.toString()}\n                    onDelete={onDelete}\n                    redirectAfterDelete={redirectAfterDelete}\n                    singularLabel={collectionConfig?.labels?.singular}\n                    useAsTitle={collectionConfig?.admin?.useAsTitle}\n                  />\n                )}\n              </PopupList.ButtonGroup>\n            </Popup>\n          )}\n        </div>\n      </div>\n      <div className={`${baseClass}__divider`} />\n    </Gutter>\n  )\n}\n"],"mappings":"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","ignoreList":[]}