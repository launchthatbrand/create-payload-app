{"version":3,"file":"index.js","names":["getTranslation","hoistQueryParamsToAnd","transformColumnsToPreferences","React","Fragment","useCallback","useEffect","useState","Button","Pill","useEffectEvent","ChevronIcon","PlusIcon","useAuth","useConfig","ListQueryProvider","useServerFunctions","TableColumnsProvider","useTranslation","AnimateHeight","ColumnSelector","useDocumentDrawer","Popup","PopupList","RelationshipProvider","DrawerLink","RelationshipTablePagination","baseClass","RelationshipTable","props","AfterInput","allowCreate","BeforeInput","disableTable","field","filterOptions","initialData","initialDataFromProps","initialDrawerData","Label","parent","relationTo","Table","setTable","config","getEntityConfig","permissions","docs","Array","isArray","reduce","acc","doc","id","i18n","t","query","setQuery","openColumnSelector","setOpenColumnSelector","collectionConfig","collectionSlug","selectedCollection","setSelectedCollection","undefined","isLoadingTable","setIsLoadingTable","data","setData","columnState","setColumnState","getTableState","renderTable","newQuery","limit","String","defaultLimit","admin","pagination","sort","defaultSort","where","defaultColumns","map","accessor","active","newData","state","newColumnState","NewTable","columns","enableRowSelections","renderRowTypes","tableAppearance","handleTableRender","DocumentDrawer","DocumentDrawerToggler","closeDrawer","isDrawerOpen","openDrawer","onDrawerSave","args","foundDocIndex","findIndex","withNewOrUpdatedDoc","newDocs","onDrawerCreate","onDrawerDelete","filter","canCreate","collections","create","_jsxs","className","_jsx","button","buttonStyle","buttonType","horizontalAlign","render","close","closePopup","ButtonGroup","relatedCollection","onClick","find","each","slug","labels","singular","size","icon","direction","pillStyle","length","label","plural","modifySearchParams","onQueryChange","LinkedCellOverride","height","onSave"],"sources":["../../../src/elements/RelationshipTable/index.tsx"],"sourcesContent":["'use client'\nimport { getTranslation } from '@payloadcms/translations'\nimport {\n  type CollectionSlug,\n  type Column,\n  type JoinFieldClient,\n  type ListQuery,\n  type PaginatedDocs,\n  type Where,\n} from 'payload'\nimport { hoistQueryParamsToAnd, transformColumnsToPreferences } from 'payload/shared'\nimport React, { Fragment, useCallback, useEffect, useState } from 'react'\n\nimport type { DocumentDrawerProps } from '../DocumentDrawer/types.js'\n\nimport { Button } from '../../elements/Button/index.js'\nimport { Pill } from '../../elements/Pill/index.js'\nimport { useEffectEvent } from '../../hooks/useEffectEvent.js'\nimport { ChevronIcon } from '../../icons/Chevron/index.js'\nimport { PlusIcon } from '../../icons/Plus/index.js'\nimport { useAuth } from '../../providers/Auth/index.js'\nimport { useConfig } from '../../providers/Config/index.js'\nimport { ListQueryProvider } from '../../providers/ListQuery/index.js'\nimport { useServerFunctions } from '../../providers/ServerFunctions/index.js'\nimport { TableColumnsProvider } from '../../providers/TableColumns/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { AnimateHeight } from '../AnimateHeight/index.js'\nimport { ColumnSelector } from '../ColumnSelector/index.js'\nimport { useDocumentDrawer } from '../DocumentDrawer/index.js'\nimport { Popup, PopupList } from '../Popup/index.js'\nimport { RelationshipProvider } from '../Table/RelationshipProvider/index.js'\nimport { DrawerLink } from './cells/DrawerLink/index.js'\nimport { RelationshipTablePagination } from './Pagination.js'\nimport './index.scss'\n\nconst baseClass = 'relationship-table'\n\ntype RelationshipTableComponentProps = {\n  readonly AfterInput?: React.ReactNode\n  readonly allowCreate?: boolean\n  readonly BeforeInput?: React.ReactNode\n  readonly disableTable?: boolean\n  readonly field: JoinFieldClient\n  readonly filterOptions?: Where\n  readonly initialData?: PaginatedDocs\n  readonly initialDrawerData?: DocumentDrawerProps['initialData']\n  readonly Label?: React.ReactNode\n  readonly parent?: {\n    collectionSlug: CollectionSlug\n    id: number | string\n    joinPath: string\n  }\n  readonly relationTo: string | string[]\n}\n\nexport const RelationshipTable: React.FC<RelationshipTableComponentProps> = (props) => {\n  const {\n    AfterInput,\n    allowCreate = true,\n    BeforeInput,\n    disableTable = false,\n    field,\n    filterOptions,\n    initialData: initialDataFromProps,\n    initialDrawerData,\n    Label,\n    parent,\n    relationTo,\n  } = props\n  const [Table, setTable] = useState<React.ReactNode>(null)\n  const { config, getEntityConfig } = useConfig()\n\n  const { permissions } = useAuth()\n\n  const [initialData] = useState<PaginatedDocs>(() => {\n    if (initialDataFromProps) {\n      return {\n        ...initialDataFromProps,\n        docs: Array.isArray(initialDataFromProps.docs)\n          ? initialDataFromProps.docs.reduce((acc, doc) => {\n              if (typeof doc === 'string') {\n                return [\n                  ...acc,\n                  {\n                    id: doc,\n                  },\n                ]\n              }\n              return [...acc, doc]\n            }, [])\n          : [],\n      }\n    }\n  })\n\n  const { i18n, t } = useTranslation()\n\n  const [query, setQuery] = useState<ListQuery>()\n  const [openColumnSelector, setOpenColumnSelector] = useState(false)\n\n  const [collectionConfig] = useState(() => getEntityConfig({ collectionSlug: relationTo }))\n\n  const [selectedCollection, setSelectedCollection] = useState(\n    Array.isArray(relationTo) ? undefined : relationTo,\n  )\n  const [isLoadingTable, setIsLoadingTable] = useState(!disableTable)\n  const [data, setData] = useState<PaginatedDocs>(initialData)\n  const [columnState, setColumnState] = useState<Column[]>()\n\n  const { getTableState } = useServerFunctions()\n\n  const renderTable = useCallback(\n    async (docs?: PaginatedDocs['docs']) => {\n      const newQuery: ListQuery = {\n        limit: String(field?.defaultLimit || collectionConfig?.admin?.pagination?.defaultLimit),\n        sort: field.defaultSort || collectionConfig?.defaultSort,\n        ...(query || {}),\n        where: { ...(query?.where || {}) },\n      }\n\n      if (filterOptions) {\n        newQuery.where = hoistQueryParamsToAnd(newQuery.where, filterOptions)\n      }\n\n      // map columns from string[] to ListPreferences['columns']\n      const defaultColumns = field.admin.defaultColumns\n        ? field.admin.defaultColumns.map((accessor) => ({\n            accessor,\n            active: true,\n          }))\n        : undefined\n\n      const {\n        data: newData,\n        state: newColumnState,\n        Table: NewTable,\n      } = await getTableState({\n        collectionSlug: relationTo,\n        columns: transformColumnsToPreferences(query?.columns) || defaultColumns,\n        docs,\n        enableRowSelections: false,\n        parent,\n        query: newQuery,\n        renderRowTypes: true,\n        tableAppearance: 'condensed',\n      })\n\n      setData(newData)\n      setTable(NewTable)\n      setColumnState(newColumnState)\n      setIsLoadingTable(false)\n    },\n    [\n      field.defaultLimit,\n      field.defaultSort,\n      collectionConfig?.admin?.pagination?.defaultLimit,\n      collectionConfig?.defaultSort,\n      query,\n      filterOptions,\n      getTableState,\n      relationTo,\n      parent,\n    ],\n  )\n\n  const handleTableRender = useEffectEvent((query: ListQuery, disableTable: boolean) => {\n    if (!disableTable && (!Table || query)) {\n      void renderTable()\n    }\n  })\n\n  useEffect(() => {\n    handleTableRender(query, disableTable)\n  }, [query, disableTable])\n\n  const [DocumentDrawer, DocumentDrawerToggler, { closeDrawer, isDrawerOpen, openDrawer }] =\n    useDocumentDrawer({\n      collectionSlug: selectedCollection,\n    })\n\n  const onDrawerSave = useCallback<DocumentDrawerProps['onSave']>(\n    (args) => {\n      const foundDocIndex = data?.docs?.findIndex((doc) => doc.id === args.doc.id)\n      let withNewOrUpdatedDoc: PaginatedDocs['docs'] = undefined\n\n      if (foundDocIndex !== -1) {\n        const newDocs = [...data.docs]\n        newDocs[foundDocIndex] = args.doc\n        withNewOrUpdatedDoc = newDocs\n      } else {\n        withNewOrUpdatedDoc = [args.doc, ...data.docs]\n      }\n\n      void renderTable(withNewOrUpdatedDoc)\n    },\n    [data?.docs, renderTable],\n  )\n\n  const onDrawerCreate = useCallback<DocumentDrawerProps['onSave']>(\n    (args) => {\n      closeDrawer()\n\n      void onDrawerSave(args)\n    },\n    [closeDrawer, onDrawerSave],\n  )\n\n  const onDrawerDelete = useCallback<DocumentDrawerProps['onDelete']>(\n    (args) => {\n      const newDocs = data.docs.filter((doc) => doc.id !== args.id)\n      void renderTable(newDocs)\n    },\n    [data?.docs, renderTable],\n  )\n\n  const canCreate =\n    allowCreate !== false &&\n    permissions?.collections?.[Array.isArray(relationTo) ? relationTo[0] : relationTo]?.create\n\n  useEffect(() => {\n    if (Array.isArray(relationTo) && selectedCollection) {\n      openDrawer()\n    }\n  }, [selectedCollection, openDrawer, relationTo])\n\n  useEffect(() => {\n    if (Array.isArray(relationTo) && !isDrawerOpen && selectedCollection) {\n      setSelectedCollection(undefined)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDrawerOpen])\n\n  return (\n    <div className={baseClass}>\n      <div className={`${baseClass}__header`}>\n        {Label}\n        <div className={`${baseClass}__actions`}>\n          {!Array.isArray(relationTo) && canCreate && (\n            <DocumentDrawerToggler className={`${baseClass}__add-new`}>\n              {i18n.t('fields:addNew')}\n            </DocumentDrawerToggler>\n          )}\n\n          {Array.isArray(relationTo) && (\n            <Fragment>\n              <Popup\n                button={\n                  <Button buttonStyle=\"none\" className={`${baseClass}__add-new-polymorphic`}>\n                    {i18n.t('fields:addNew')}\n                    <PlusIcon />\n                  </Button>\n                }\n                buttonType=\"custom\"\n                horizontalAlign=\"center\"\n                render={({ close: closePopup }) => (\n                  <PopupList.ButtonGroup>\n                    {relationTo.map((relatedCollection) => {\n                      if (permissions.collections[relatedCollection].create) {\n                        return (\n                          <PopupList.Button\n                            className={`${baseClass}__relation-button--${relatedCollection}`}\n                            key={relatedCollection}\n                            onClick={() => {\n                              closePopup()\n                              setSelectedCollection(relatedCollection)\n                            }}\n                          >\n                            {getTranslation(\n                              config.collections.find((each) => each.slug === relatedCollection)\n                                .labels.singular,\n                              i18n,\n                            )}\n                          </PopupList.Button>\n                        )\n                      }\n\n                      return null\n                    })}\n                  </PopupList.ButtonGroup>\n                )}\n                size=\"medium\"\n              />\n            </Fragment>\n          )}\n          <Pill\n            aria-controls={`${baseClass}-columns`}\n            aria-expanded={openColumnSelector}\n            className={`${baseClass}__toggle-columns ${\n              openColumnSelector ? `${baseClass}__buttons-active` : ''\n            }`}\n            icon={<ChevronIcon direction={openColumnSelector ? 'up' : 'down'} />}\n            onClick={() => setOpenColumnSelector(!openColumnSelector)}\n            pillStyle=\"light\"\n          >\n            {t('general:columns')}\n          </Pill>\n        </div>\n      </div>\n      {BeforeInput}\n      {isLoadingTable ? (\n        <p>{t('general:loading')}</p>\n      ) : (\n        <Fragment>\n          {data?.docs && data.docs.length === 0 && (\n            <div className={`${baseClass}__no-results`}>\n              <p>\n                {i18n.t('general:noResults', {\n                  label: Array.isArray(relationTo)\n                    ? i18n.t('general:documents')\n                    : getTranslation(collectionConfig?.labels?.plural, i18n),\n                })}\n              </p>\n              {canCreate && (\n                <Button onClick={openDrawer}>\n                  {i18n.t('general:createNewLabel', {\n                    label: getTranslation(collectionConfig?.labels?.singular, i18n),\n                  })}\n                </Button>\n              )}\n            </div>\n          )}\n          {data?.docs && data.docs.length > 0 && (\n            <RelationshipProvider>\n              <ListQueryProvider\n                columns={transformColumnsToPreferences(columnState)}\n                data={data}\n                defaultLimit={\n                  field.defaultLimit ?? collectionConfig?.admin?.pagination?.defaultLimit\n                }\n                modifySearchParams={false}\n                onQueryChange={setQuery}\n              >\n                <TableColumnsProvider\n                  collectionSlug={Array.isArray(relationTo) ? relationTo[0] : relationTo}\n                  columnState={columnState}\n                  LinkedCellOverride={\n                    <DrawerLink onDrawerDelete={onDrawerDelete} onDrawerSave={onDrawerSave} />\n                  }\n                >\n                  <AnimateHeight\n                    className={`${baseClass}__columns`}\n                    height={openColumnSelector ? 'auto' : 0}\n                    id={`${baseClass}-columns`}\n                  >\n                    <div className={`${baseClass}__columns-inner`}>\n                      {collectionConfig && (\n                        <ColumnSelector collectionSlug={collectionConfig.slug} />\n                      )}\n                    </div>\n                  </AnimateHeight>\n                  {Table}\n                  <RelationshipTablePagination />\n                </TableColumnsProvider>\n              </ListQueryProvider>\n            </RelationshipProvider>\n          )}\n        </Fragment>\n      )}\n      {AfterInput}\n      <DocumentDrawer initialData={initialDrawerData} onSave={onDrawerCreate} />\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]}