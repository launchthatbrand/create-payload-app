{"version":3,"file":"index.js","names":["c","_c","React","createContext","use","useCallback","useEffect","useReducer","useRef","useDebounce","useConfig","useLocale","useTranslation","reducer","Context","RelationshipProvider","t0","$","children","t1","Symbol","for","documents","dispatchDocuments","debouncedDocuments","config","t2","routes","t3","serverURL","api","i18n","code","locale","prevLocale","t4","t5","reloadAll","undefined","Object","entries","forEach","t6","slug","docs","idsToLoad","t7","id","value","push","length","url","params","URLSearchParams","append","idsToString","map","_temp","join","query","toString","result","fetch","credentials","headers","language","ok","json","type","relationTo","loadRelationshipDocs","current","relationships","getRelationships","t8","_jsx","useListRelationships","id_0","String"],"sources":["../../../../src/elements/Table/RelationshipProvider/index.tsx"],"sourcesContent":["'use client'\nimport type { TypeWithID } from 'payload'\n\nimport React, { createContext, use, useCallback, useEffect, useReducer, useRef } from 'react'\n\nimport { useDebounce } from '../../../hooks/useDebounce.js'\nimport { useConfig } from '../../../providers/Config/index.js'\nimport { useLocale } from '../../../providers/Locale/index.js'\nimport { useTranslation } from '../../../providers/Translation/index.js'\nimport { reducer } from './reducer.js'\n\n// documents are first set to null when requested\n// set to false when no doc is returned\n// or set to the document returned\nexport type Documents = {\n  [slug: string]: {\n    [id: number | string]: false | null | TypeWithID\n  }\n}\n\ntype ListRelationshipContext = {\n  documents: Documents\n  getRelationships: (\n    docs: {\n      relationTo: string\n      value: number | string\n    }[],\n  ) => void\n}\n\nconst Context = createContext({} as ListRelationshipContext)\n\nexport const RelationshipProvider: React.FC<{ readonly children?: React.ReactNode }> = ({\n  children,\n}) => {\n  const [documents, dispatchDocuments] = useReducer(reducer, {})\n  const debouncedDocuments = useDebounce(documents, 100)\n\n  const {\n    config: {\n      routes: { api },\n      serverURL,\n    },\n  } = useConfig()\n\n  const { i18n } = useTranslation()\n  const { code: locale } = useLocale()\n  const prevLocale = useRef(locale)\n\n  const loadRelationshipDocs = useCallback(\n    (reloadAll = false) => {\n      Object.entries(debouncedDocuments).forEach(async ([slug, docs]) => {\n        const idsToLoad: (number | string)[] = []\n\n        Object.entries(docs).forEach(([id, value]) => {\n          if (value === null || reloadAll) {\n            idsToLoad.push(id)\n          }\n        })\n\n        if (idsToLoad.length > 0) {\n          const url = `${serverURL}${api}/${slug}`\n\n          const params = new URLSearchParams()\n\n          params.append('depth', '0')\n          params.append('limit', '250')\n\n          if (locale) {\n            params.append('locale', locale)\n          }\n\n          if (idsToLoad && idsToLoad.length > 0) {\n            const idsToString = idsToLoad.map((id) => String(id))\n            params.append('where[id][in]', idsToString.join(','))\n          }\n\n          const query = `?${params.toString()}`\n\n          const result = await fetch(`${url}${query}`, {\n            credentials: 'include',\n            headers: {\n              'Accept-Language': i18n.language,\n            },\n          })\n\n          if (result.ok) {\n            const json = await result.json()\n            if (json.docs) {\n              dispatchDocuments({\n                type: 'ADD_LOADED',\n                docs: json.docs,\n                idsToLoad,\n                relationTo: slug,\n              })\n            }\n          } else {\n            dispatchDocuments({ type: 'ADD_LOADED', docs: [], idsToLoad, relationTo: slug })\n          }\n        }\n      })\n    },\n    [debouncedDocuments, serverURL, api, i18n, locale],\n  )\n\n  useEffect(() => {\n    void loadRelationshipDocs(locale && prevLocale.current !== locale)\n    prevLocale.current = locale\n  }, [locale, loadRelationshipDocs])\n\n  const getRelationships = useCallback(\n    (relationships: { relationTo: string; value: number | string }[]) => {\n      dispatchDocuments({ type: 'REQUEST', docs: relationships })\n    },\n    [],\n  )\n\n  return <Context value={{ documents, getRelationships }}>{children}</Context>\n}\n\nexport const useListRelationships = (): ListRelationshipContext => use(Context)\n"],"mappings":"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","ignoreList":[]}