{"version":3,"file":"index.js","names":["c","_c","getTranslation","optionsAreObjects","React","useTranslation","SelectCell","t0","$","cellData","field","t1","options","i18n","t2","items","map","i","found","filter","f","value","label","join","findLabel","content","t3","Array","isArray","_jsx","children"],"sources":["../../../../../../src/elements/Table/DefaultCell/fields/Select/index.tsx"],"sourcesContent":["'use client'\nimport type { DefaultCellComponentProps, OptionObject, SelectFieldClient } from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport { optionsAreObjects } from 'payload/shared'\nimport React from 'react'\n\nimport { useTranslation } from '../../../../../providers/Translation/index.js'\n\nexport interface SelectCellProps extends DefaultCellComponentProps<SelectFieldClient> {}\n\nexport const SelectCell: React.FC<SelectCellProps> = ({ cellData, field: { options } }) => {\n  const { i18n } = useTranslation()\n\n  const findLabel = (items: string[]) =>\n    items\n      .map((i) => {\n        const found = (options as OptionObject[]).filter((f: OptionObject) => f.value === i)?.[0]\n          ?.label\n        return getTranslation(found, i18n)\n      })\n      .join(', ')\n\n  let content = ''\n  if (optionsAreObjects(options)) {\n    content = Array.isArray(cellData)\n      ? findLabel(cellData) // hasMany\n      : findLabel([cellData])\n  } else {\n    content = Array.isArray(cellData)\n      ? cellData.join(', ') // hasMany\n      : cellData\n  }\n\n  return <span>{content}</span>\n}\n"],"mappings":"AAAA;;AAAA,SAAAA,CAAA,IAAAC,EAAA;;AAGA,SAASC,cAAc,QAAQ;AAC/B,SAASC,iBAAiB,QAAQ;AAClC,OAAOC,KAAA,MAAW;AAElB,SAASC,cAAc,QAAQ;AAI/B,OAAO,MAAMC,UAAA,GAAwCC,EAAA;EAAA,MAAAC,CAAA,GAAAP,EAAA;EAAC;IAAAQ,QAAA;IAAAC,KAAA,EAAAC;EAAA,IAAAJ,EAAgC;EAAb;IAAAK;EAAA,IAAAD,EAAW;EAClF;IAAAE;EAAA,IAAiBR,cAAA;EAAA,IAAAS,EAAA;EAAA,IAAAN,CAAA,QAAAK,IAAA,IAAAL,CAAA,QAAAI,OAAA;IAECE,EAAA,GAAAC,KAAA,IAChBA,KAAA,CAAAC,GAAA,CAAAC,CAAA;MAEI,MAAAC,KAAA,GAAcN,OAAC,CAAAO,MAAA,CAAAC,CAAA,IAAuDA,CAAA,CAAAC,KAAA,KAAYJ,CAAA,QAAAK,KAAA;MAC9E,OACGpB,cAAA,CAAegB,KAAA,EAAOL,IAAA;IAAA,CAC/B,EAAAU,IAAA,CACM;IAAAf,CAAA,MAAAK,IAAA;IAAAL,CAAA,MAAAI,OAAA;IAAAJ,CAAA,MAAAM,EAAA;EAAA;IAAAA,EAAA,GAAAN,CAAA;EAAA;EAPV,MAAAgB,SAAA,GAAkBV,EAOR;EAEV,IAAAW,OAAA;EAAc,IACVtB,iBAAA,CAAkBS,OAAA;IAAA,IAAAc,EAAA;IAAA,IAAAlB,CAAA,QAAAC,QAAA,IAAAD,CAAA,QAAAgB,SAAA;MACVE,EAAA,GAAAC,KAAA,CAAAC,OAAA,CAAcnB,QAAA,IACpBe,SAAA,CAAUf,QAAA,IACVe,SAAA,EAAWf,QAAA,CAAS;MAAAD,CAAA,MAAAC,QAAA;MAAAD,CAAA,MAAAgB,SAAA;MAAAhB,CAAA,MAAAkB,EAAA;IAAA;MAAAA,EAAA,GAAAlB,CAAA;IAAA;IAFxBiB,OAAA,CAAAA,CAAA,CAAUA,EAEc;EAFxB;IAAA,IAAAC,EAAA;IAAA,IAAAlB,CAAA,QAAAC,QAAA;MAIUiB,EAAA,GAAAC,KAAA,CAAAC,OAAA,CAAcnB,QAAA,IACpBA,QAAA,CAAAc,IAAA,CAAc,QACdd,QAAA;MAAAD,CAAA,MAAAC,QAAA;MAAAD,CAAA,MAAAkB,EAAA;IAAA;MAAAA,EAAA,GAAAlB,CAAA;IAAA;IAFJiB,OAAA,CAAAA,CAAA,CAAUA,EAEN;EAFJ;EAAA,IAAAC,EAAA;EAAA,IAAAlB,CAAA,QAAAiB,OAAA;IAKKC,EAAA,GAAAG,IAAA,CAAC;MAAAC,QAAA,EAAML;IAAA,C;;;;;;SAAPC,E;CACT","ignoreList":[]}