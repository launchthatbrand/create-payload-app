{"version":3,"file":"index.js","names":["React","Thumbnail","baseClass","targetThumbnailSizeMin","targetThumbnailSizeMax","FileCell","cellData","filename","collectionConfig","field","rowData","fieldPreviewAllowed","displayPreview","undefined","previewAllowed","upload","fileSrc","thumbnailURL","url","mimeType","startsWith","sizes","Object","values","bestFit","reduce","closest","current","width","original","_jsxs","className","_jsx","collectionSlug","slug","doc","size","uploadConfig","String","_Fragment"],"sources":["../../../../../../src/elements/Table/DefaultCell/fields/File/index.tsx"],"sourcesContent":["'use client'\nimport type {\n  ClientCollectionConfig,\n  DefaultCellComponentProps,\n  TextFieldClient,\n  UploadFieldClient,\n} from 'payload'\n\nimport React from 'react'\n\nimport { Thumbnail } from '../../../../Thumbnail/index.js'\nimport './index.scss'\n\nconst baseClass = 'file'\n\nconst targetThumbnailSizeMin = 40\nconst targetThumbnailSizeMax = 180\n\nexport interface FileCellProps\n  extends DefaultCellComponentProps<TextFieldClient | UploadFieldClient> {\n  readonly collectionConfig: ClientCollectionConfig\n}\n\nexport const FileCell: React.FC<FileCellProps> = ({\n  cellData: filename,\n  collectionConfig,\n  field,\n  rowData,\n}) => {\n  const fieldPreviewAllowed = 'displayPreview' in field ? field.displayPreview : undefined\n  const previewAllowed = fieldPreviewAllowed ?? collectionConfig.upload?.displayPreview ?? true\n\n  if (previewAllowed) {\n    let fileSrc: string | undefined = rowData?.thumbnailURL ?? rowData?.url\n\n    if (\n      rowData?.url &&\n      !rowData?.thumbnailURL &&\n      typeof rowData?.mimeType === 'string' &&\n      rowData?.mimeType.startsWith('image') &&\n      rowData?.sizes\n    ) {\n      const sizes = Object.values<{ url?: string; width?: number }>(rowData.sizes)\n\n      const bestFit = sizes.reduce(\n        (closest, current) => {\n          if (!current.width || current.width < targetThumbnailSizeMin) {\n            return closest\n          }\n\n          if (current.width >= targetThumbnailSizeMin && current.width <= targetThumbnailSizeMax) {\n            return !closest.width ||\n              current.width < closest.width ||\n              closest.width < targetThumbnailSizeMin ||\n              closest.width > targetThumbnailSizeMax\n              ? current\n              : closest\n          }\n\n          if (\n            !closest.width ||\n            (!closest.original &&\n              closest.width < targetThumbnailSizeMin &&\n              current.width > closest.width) ||\n            (closest.width > targetThumbnailSizeMax && current.width < closest.width)\n          ) {\n            return current\n          }\n\n          return closest\n        },\n        { original: true, url: rowData?.url, width: rowData?.width },\n      )\n\n      fileSrc = bestFit.url || fileSrc\n    }\n\n    return (\n      <div className={baseClass}>\n        <Thumbnail\n          className={`${baseClass}__thumbnail`}\n          collectionSlug={collectionConfig?.slug}\n          doc={{\n            ...rowData,\n            filename,\n          }}\n          fileSrc={fileSrc}\n          size=\"small\"\n          uploadConfig={collectionConfig?.upload}\n        />\n        <span className={`${baseClass}__filename`}>{String(filename)}</span>\n      </div>\n    )\n  } else {\n    return <>{String(filename)}</>\n  }\n}\n"],"mappings":"AAAA;;;AAQA,OAAOA,KAAA,MAAW;AAElB,SAASC,SAAS,QAAQ;AAC1B,OAAO;AAEP,MAAMC,SAAA,GAAY;AAElB,MAAMC,sBAAA,GAAyB;AAC/B,MAAMC,sBAAA,GAAyB;AAO/B,OAAO,MAAMC,QAAA,GAAoCA,CAAC;EAChDC,QAAA,EAAUC,QAAQ;EAClBC,gBAAgB;EAChBC,KAAK;EACLC;AAAO,CACR;EACC,MAAMC,mBAAA,GAAsB,oBAAoBF,KAAA,GAAQA,KAAA,CAAMG,cAAc,GAAGC,SAAA;EAC/E,MAAMC,cAAA,GAAiBH,mBAAA,IAAuBH,gBAAA,CAAiBO,MAAM,EAAEH,cAAA,IAAkB;EAEzF,IAAIE,cAAA,EAAgB;IAClB,IAAIE,OAAA,GAA8BN,OAAA,EAASO,YAAA,IAAgBP,OAAA,EAASQ,GAAA;IAEpE,IACER,OAAA,EAASQ,GAAA,IACT,CAACR,OAAA,EAASO,YAAA,IACV,OAAOP,OAAA,EAASS,QAAA,KAAa,YAC7BT,OAAA,EAASS,QAAA,CAASC,UAAA,CAAW,YAC7BV,OAAA,EAASW,KAAA,EACT;MACA,MAAMA,KAAA,GAAQC,MAAA,CAAOC,MAAM,CAAmCb,OAAA,CAAQW,KAAK;MAE3E,MAAMG,OAAA,GAAUH,KAAA,CAAMI,MAAM,CAC1B,CAACC,OAAA,EAASC,OAAA;QACR,IAAI,CAACA,OAAA,CAAQC,KAAK,IAAID,OAAA,CAAQC,KAAK,GAAGzB,sBAAA,EAAwB;UAC5D,OAAOuB,OAAA;QACT;QAEA,IAAIC,OAAA,CAAQC,KAAK,IAAIzB,sBAAA,IAA0BwB,OAAA,CAAQC,KAAK,IAAIxB,sBAAA,EAAwB;UACtF,OAAO,CAACsB,OAAA,CAAQE,KAAK,IACnBD,OAAA,CAAQC,KAAK,GAAGF,OAAA,CAAQE,KAAK,IAC7BF,OAAA,CAAQE,KAAK,GAAGzB,sBAAA,IAChBuB,OAAA,CAAQE,KAAK,GAAGxB,sBAAA,GACduB,OAAA,GACAD,OAAA;QACN;QAEA,IACE,CAACA,OAAA,CAAQE,KAAK,IACb,CAACF,OAAA,CAAQG,QAAQ,IAChBH,OAAA,CAAQE,KAAK,GAAGzB,sBAAA,IAChBwB,OAAA,CAAQC,KAAK,GAAGF,OAAA,CAAQE,KAAK,IAC9BF,OAAA,CAAQE,KAAK,GAAGxB,sBAAA,IAA0BuB,OAAA,CAAQC,KAAK,GAAGF,OAAA,CAAQE,KAAK,EACxE;UACA,OAAOD,OAAA;QACT;QAEA,OAAOD,OAAA;MACT,GACA;QAAEG,QAAA,EAAU;QAAMX,GAAA,EAAKR,OAAA,EAASQ,GAAA;QAAKU,KAAA,EAAOlB,OAAA,EAASkB;MAAM;MAG7DZ,OAAA,GAAUQ,OAAA,CAAQN,GAAG,IAAIF,OAAA;IAC3B;IAEA,oBACEc,KAAA,CAAC;MAAIC,SAAA,EAAW7B,SAAA;8BACd8B,IAAA,CAAC/B,SAAA;QACC8B,SAAA,EAAW,GAAG7B,SAAA,aAAsB;QACpC+B,cAAA,EAAgBzB,gBAAA,EAAkB0B,IAAA;QAClCC,GAAA,EAAK;UACH,GAAGzB,OAAO;UACVH;QACF;QACAS,OAAA,EAASA,OAAA;QACToB,IAAA,EAAK;QACLC,YAAA,EAAc7B,gBAAA,EAAkBO;uBAElCiB,IAAA,CAAC;QAAKD,SAAA,EAAW,GAAG7B,SAAA,YAAqB;kBAAGoC,MAAA,CAAO/B,QAAA;;;EAGzD,OAAO;IACL,oBAAOyB,IAAA,CAAAO,SAAA;gBAAGD,MAAA,CAAO/B,QAAA;;EACnB;AACF","ignoreList":[]}