{"version":3,"file":"index.js","names":["c","_c","getTranslation","React","useTranslation","ReactSelect","formatOptions","Select","t0","$","disabled","isClearable","onChange","operator","options","optionsFromProps","value","i18n","t1","setOptions","useState","t2","Symbol","for","isMulti","includes","valueToRender","Array","isArray","t3","val","matchingOption","find","option","label","map","matchingOption_0","t4","option_0","selectedOption","newValue","_temp","onSelect","t5","useEffect","t6","t7","t8","option_2","_jsx","option_1"],"sources":["../../../../../src/elements/WhereBuilder/Condition/Select/index.tsx"],"sourcesContent":["'use client'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport React from 'react'\n\nimport type { Props } from './types.js'\n\nimport { useTranslation } from '../../../../providers/Translation/index.js'\nimport { ReactSelect } from '../../../ReactSelect/index.js'\nimport { formatOptions } from './formatOptions.js'\n\nexport const Select: React.FC<Props> = ({\n  disabled,\n  isClearable,\n  onChange,\n  operator,\n  options: optionsFromProps,\n  value,\n}) => {\n  const { i18n } = useTranslation()\n  const [options, setOptions] = React.useState(formatOptions(optionsFromProps))\n\n  const isMulti = ['in', 'not_in'].includes(operator)\n  let valueToRender\n\n  if (isMulti && Array.isArray(value)) {\n    valueToRender = value.map((val) => {\n      const matchingOption = options.find((option) => option.value === val)\n      return {\n        label: matchingOption ? getTranslation(matchingOption.label, i18n) : val,\n        value: matchingOption?.value ?? val,\n      }\n    })\n  } else if (value) {\n    const matchingOption = options.find((option) => option.value === value)\n    valueToRender = {\n      label: matchingOption ? getTranslation(matchingOption.label, i18n) : value,\n      value: matchingOption?.value ?? value,\n    }\n  }\n\n  const onSelect = React.useCallback(\n    (selectedOption) => {\n      let newValue\n\n      if (!selectedOption) {\n        newValue = null\n      } else if (isMulti) {\n        if (Array.isArray(selectedOption)) {\n          newValue = selectedOption.map((option) => option.value)\n        } else {\n          newValue = []\n        }\n      } else {\n        newValue = selectedOption.value\n      }\n\n      onChange(newValue)\n    },\n    [isMulti, onChange],\n  )\n\n  React.useEffect(() => {\n    setOptions(formatOptions(optionsFromProps))\n  }, [optionsFromProps])\n\n  React.useEffect(() => {\n    if (!isMulti && Array.isArray(value)) {\n      onChange(value[0])\n    }\n  }, [isMulti, onChange, value])\n\n  return (\n    <ReactSelect\n      disabled={disabled}\n      isClearable={isClearable}\n      isMulti={isMulti}\n      onChange={onSelect}\n      options={options.map((option) => ({ ...option, label: getTranslation(option.label, i18n) }))}\n      value={valueToRender}\n    />\n  )\n}\n"],"mappings":"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","ignoreList":[]}