{"version":3,"file":"index.js","names":["useModal","getTranslation","useRouter","useSearchParams","qs","React","useCallback","toast","useAuth","useConfig","useRouteCache","SelectAllStatus","useSelection","useTranslation","requests","parseSearchParams","ConfirmationModal","baseClass","PublishMany","props","clearRouteCache","collection","slug","labels","plural","singular","versions","config","routes","api","serverURL","permissions","i18n","t","getQueryParams","selectAll","router","searchParams","openModal","collectionPermissions","collections","hasPermission","update","modalSlug","addDefaultError","error","handlePublish","patch","_status","not_equals","body","JSON","stringify","headers","language","then","res","json","deletedDocs","docs","length","successLabel","status","success","count","label","errors","message","description","map","join","replace","page","undefined","addQueryPrefix","forEach","_err","drafts","None","_jsxs","Fragment","_jsx","className","onClick","type","cancelLabel","confirmingLabel","confirmLabel","heading","onConfirm"],"sources":["../../../src/elements/PublishMany/index.tsx"],"sourcesContent":["'use client'\nimport type { ClientCollectionConfig } from 'payload'\n\nimport { useModal } from '@faceless-ui/modal'\nimport { getTranslation } from '@payloadcms/translations'\nimport { useRouter, useSearchParams } from 'next/navigation.js'\nimport * as qs from 'qs-esm'\nimport React, { useCallback } from 'react'\nimport { toast } from 'sonner'\n\nimport { useAuth } from '../../providers/Auth/index.js'\nimport { useConfig } from '../../providers/Config/index.js'\nimport { useRouteCache } from '../../providers/RouteCache/index.js'\nimport { SelectAllStatus, useSelection } from '../../providers/Selection/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { requests } from '../../utilities/api.js'\nimport { parseSearchParams } from '../../utilities/parseSearchParams.js'\nimport { ConfirmationModal } from '../ConfirmationModal/index.js'\nimport './index.scss'\n\nexport type PublishManyProps = {\n  collection: ClientCollectionConfig\n}\n\nconst baseClass = 'publish-many'\n\nexport const PublishMany: React.FC<PublishManyProps> = (props) => {\n  const { clearRouteCache } = useRouteCache()\n\n  const { collection: { slug, labels: { plural, singular }, versions } = {} } = props\n\n  const {\n    config: {\n      routes: { api },\n      serverURL,\n    },\n  } = useConfig()\n\n  const { permissions } = useAuth()\n  const { i18n, t } = useTranslation()\n  const { getQueryParams, selectAll } = useSelection()\n  const router = useRouter()\n  const searchParams = useSearchParams()\n  const { openModal } = useModal()\n\n  const collectionPermissions = permissions?.collections?.[slug]\n  const hasPermission = collectionPermissions?.update\n\n  const modalSlug = `publish-${slug}`\n\n  const addDefaultError = useCallback(() => {\n    toast.error(t('error:unknown'))\n  }, [t])\n\n  const handlePublish = useCallback(async () => {\n    await requests\n      .patch(\n        `${serverURL}${api}/${slug}${getQueryParams({ _status: { not_equals: 'published' } })}&draft=true`,\n        {\n          body: JSON.stringify({\n            _status: 'published',\n          }),\n          headers: {\n            'Accept-Language': i18n.language,\n            'Content-Type': 'application/json',\n          },\n        },\n      )\n      .then(async (res) => {\n        try {\n          const json = await res.json()\n\n          const deletedDocs = json?.docs.length || 0\n          const successLabel = deletedDocs > 1 ? plural : singular\n\n          if (res.status < 400 || deletedDocs > 0) {\n            toast.success(\n              t('general:updatedCountSuccessfully', {\n                count: deletedDocs,\n                label: getTranslation(successLabel, i18n),\n              }),\n            )\n\n            if (json?.errors.length > 0) {\n              toast.error(json.message, {\n                description: json.errors.map((error) => error.message).join('\\n'),\n              })\n            }\n\n            router.replace(\n              qs.stringify(\n                {\n                  ...parseSearchParams(searchParams),\n                  page: selectAll ? '1' : undefined,\n                },\n                { addQueryPrefix: true },\n              ),\n            )\n\n            clearRouteCache() // Use clearRouteCache instead of router.refresh, as we only need to clear the cache if the user has route caching enabled - clearRouteCache checks for this\n            return null\n          }\n\n          if (json.errors) {\n            json.errors.forEach((error) => toast.error(error.message))\n          } else {\n            addDefaultError()\n          }\n          return false\n        } catch (_err) {\n          return addDefaultError()\n        }\n      })\n  }, [\n    serverURL,\n    api,\n    slug,\n    getQueryParams,\n    i18n,\n    plural,\n    singular,\n    t,\n    router,\n    searchParams,\n    selectAll,\n    clearRouteCache,\n    addDefaultError,\n  ])\n\n  if (!versions?.drafts || selectAll === SelectAllStatus.None || !hasPermission) {\n    return null\n  }\n\n  return (\n    <React.Fragment>\n      <button\n        className={`${baseClass}__toggle`}\n        onClick={() => {\n          openModal(modalSlug)\n        }}\n        type=\"button\"\n      >\n        {t('version:publish')}\n      </button>\n      <ConfirmationModal\n        body={t('version:aboutToPublishSelection', { label: getTranslation(plural, i18n) })}\n        cancelLabel={t('general:cancel')}\n        confirmingLabel={t('version:publishing')}\n        confirmLabel={t('general:confirm')}\n        heading={t('version:confirmPublish')}\n        modalSlug={modalSlug}\n        onConfirm={handlePublish}\n      />\n    </React.Fragment>\n  )\n}\n"],"mappings":"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","ignoreList":[]}