{"version":3,"file":"index.js","names":["c","_c","React","baseClass","File","ShimmerEffect","Thumbnail","props","$","className","t0","doc","t1","fileSrc","imageCacheTag","size","undefined","t2","filename","mimeType","fileExists","setFileExists","useState","t3","t4","classNames","join","t5","t6","startsWith","img","Image","src","onload","onerror","useEffect","queryChar","includes","encodeURIComponent","t7","t8","_jsx","alt","_jsxs","children","height","ThumbnailComponent"],"sources":["../../../src/elements/Thumbnail/index.tsx"],"sourcesContent":["'use client'\nimport React from 'react'\n\nimport './index.scss'\n\nconst baseClass = 'thumbnail'\n\nimport type { SanitizedCollectionConfig } from 'payload'\n\nimport { File } from '../../graphics/File/index.js'\nimport { ShimmerEffect } from '../ShimmerEffect/index.js'\n\nexport type ThumbnailProps = {\n  className?: string\n  collectionSlug?: string\n  doc?: Record<string, unknown>\n  fileSrc?: string\n  imageCacheTag?: string\n  size?: 'expand' | 'large' | 'medium' | 'small'\n  uploadConfig?: SanitizedCollectionConfig['upload']\n}\n\nexport const Thumbnail: React.FC<ThumbnailProps> = (props) => {\n  const { className = '', doc: { filename, mimeType } = {}, fileSrc, imageCacheTag, size } = props\n  const [fileExists, setFileExists] = React.useState(undefined)\n\n  const classNames = [baseClass, `${baseClass}--size-${size || 'medium'}`, className].join(' ')\n\n  React.useEffect(() => {\n    if (!fileSrc || (typeof mimeType === 'string' && !mimeType.startsWith('image'))) {\n      setFileExists(false)\n      return\n    }\n    setFileExists(undefined)\n\n    const img = new Image()\n    img.src = fileSrc\n    img.onload = () => {\n      setFileExists(true)\n    }\n    img.onerror = () => {\n      setFileExists(false)\n    }\n  }, [fileSrc, mimeType])\n\n  let src: null | string = null\n\n  /**\n   * If an imageCacheTag is provided, append it to the fileSrc\n   * Check if the fileSrc already has a query string, if it does, append the imageCacheTag with an ampersand\n   */\n  if (fileSrc) {\n    const queryChar = fileSrc?.includes('?') ? '&' : '?'\n    src = imageCacheTag ? `${fileSrc}${queryChar}${encodeURIComponent(imageCacheTag)}` : fileSrc\n  }\n\n  return (\n    <div className={classNames}>\n      {fileExists === undefined && <ShimmerEffect height=\"100%\" />}\n      {fileExists && <img alt={filename as string} src={src} />}\n      {fileExists === false && <File />}\n    </div>\n  )\n}\n\ntype ThumbnailComponentProps = {\n  readonly alt?: string\n  readonly className?: string\n  readonly filename: string\n  readonly fileSrc: string\n  readonly imageCacheTag?: string\n  readonly size?: 'expand' | 'large' | 'medium' | 'small'\n}\nexport function ThumbnailComponent(props: ThumbnailComponentProps) {\n  const { alt, className = '', filename, fileSrc, imageCacheTag, size } = props\n  const [fileExists, setFileExists] = React.useState(undefined)\n\n  const classNames = [baseClass, `${baseClass}--size-${size || 'medium'}`, className].join(' ')\n\n  React.useEffect(() => {\n    if (!fileSrc) {\n      setFileExists(false)\n      return\n    }\n    setFileExists(undefined)\n\n    const img = new Image()\n    img.src = fileSrc\n    img.onload = () => {\n      setFileExists(true)\n    }\n    img.onerror = () => {\n      setFileExists(false)\n    }\n  }, [fileSrc])\n\n  let src: string = ''\n\n  /**\n   * If an imageCacheTag is provided, append it to the fileSrc\n   * Check if the fileSrc already has a query string, if it does, append the imageCacheTag with an ampersand\n   */\n  if (fileSrc) {\n    const queryChar = fileSrc?.includes('?') ? '&' : '?'\n    src = imageCacheTag ? `${fileSrc}${queryChar}${encodeURIComponent(imageCacheTag)}` : fileSrc\n  }\n\n  return (\n    <div className={classNames}>\n      {fileExists === undefined && <ShimmerEffect height=\"100%\" />}\n      {fileExists && <img alt={alt || filename} src={src} />}\n      {fileExists === false && <File />}\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]}