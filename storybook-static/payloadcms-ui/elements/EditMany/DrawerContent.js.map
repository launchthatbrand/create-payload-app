{"version":3,"file":"DrawerContent.js","names":["c","_c","useModal","getTranslation","useRouter","useSearchParams","mergeListSearchAndWhere","unflatten","qs","React","useCallback","useEffect","useMemo","useState","useForm","Form","RenderField","FormSubmit","XIcon","useAuth","useConfig","DocumentInfoProvider","OperationContext","useRouteCache","SelectAllStatus","useSelection","useServerFunctions","useTranslation","abortAndIgnore","handleAbortRef","parseSearchParams","FieldSelect","baseClass","Submit","t0","$","action","disabled","submit","t","t1","method","skipValidation","save","t2","_jsx","className","onClick","children","PublishButton","overrides","_status","SaveDraftButton","buttonStyle","EditManyDrawerContent","props","collection","fields","labels","plural","singular","drawerSlug","selectedFields","setSelectedFields","permissions","user","closeModal","config","routes","api","apiRoute","serverURL","getFormState","count","getQueryParams","selectAll","i18n","isInitializing","setIsInitializing","router","abortFormStateRef","useRef","clearRouteCache","collectionPermissions","collections","slug","searchParams","select","reduce","acc","option","value","path","onChange","formState","prevFormState","submitted","controller","state","collectionSlug","docPermissions","docPreferences","operation","schemaPath","signal","current","abortFormState","queryString","queryWithSearch","collectionConfig","search","get","onSuccess","replace","stringify","page","AllAvailable","undefined","addQueryPrefix","onFieldSelect","dispatchFields","selected","type","currentEditor","hasPublishedDoc","id","initialData","isLocked","lastUpdateTime","mostRecentVersionIsAutosaved","unpublishedVersionCount","versionCount","_jsxs","label","length","map","i","field","fieldPermissions","clientFieldConfig","indexPath","parentPath","parentSchemaPath","versions","drafts","Fragment"],"sources":["../../../src/elements/EditMany/DrawerContent.tsx"],"sourcesContent":["'use client'\n\nimport type { SelectType } from 'payload'\n\nimport { useModal } from '@faceless-ui/modal'\nimport { getTranslation } from '@payloadcms/translations'\nimport { useRouter, useSearchParams } from 'next/navigation.js'\nimport { mergeListSearchAndWhere, unflatten } from 'payload/shared'\nimport * as qs from 'qs-esm'\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\n\nimport type { FormProps } from '../../forms/Form/index.js'\nimport type { OnFieldSelect } from '../FieldSelect/index.js'\nimport type { FieldOption } from '../FieldSelect/reduceFieldOptions.js'\n\nimport { useForm } from '../../forms/Form/context.js'\nimport { Form } from '../../forms/Form/index.js'\nimport { RenderField } from '../../forms/RenderFields/RenderField.js'\nimport { FormSubmit } from '../../forms/Submit/index.js'\nimport { XIcon } from '../../icons/X/index.js'\nimport { useAuth } from '../../providers/Auth/index.js'\nimport { useConfig } from '../../providers/Config/index.js'\nimport { DocumentInfoProvider } from '../../providers/DocumentInfo/index.js'\nimport { OperationContext } from '../../providers/Operation/index.js'\nimport { useRouteCache } from '../../providers/RouteCache/index.js'\nimport { SelectAllStatus, useSelection } from '../../providers/Selection/index.js'\nimport { useServerFunctions } from '../../providers/ServerFunctions/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { abortAndIgnore, handleAbortRef } from '../../utilities/abortAndIgnore.js'\nimport { parseSearchParams } from '../../utilities/parseSearchParams.js'\nimport { FieldSelect } from '../FieldSelect/index.js'\nimport { baseClass, type EditManyProps } from './index.js'\nimport './index.scss'\nimport '../../forms/RenderFields/index.scss'\n\nconst Submit: React.FC<{\n  readonly action: string\n  readonly disabled: boolean\n}> = ({ action, disabled }) => {\n  const { submit } = useForm()\n  const { t } = useTranslation()\n\n  const save = useCallback(() => {\n    void submit({\n      action,\n      method: 'PATCH',\n      skipValidation: true,\n    })\n  }, [action, submit])\n\n  return (\n    <FormSubmit className={`${baseClass}__save`} disabled={disabled} onClick={save}>\n      {t('general:save')}\n    </FormSubmit>\n  )\n}\n\nconst PublishButton: React.FC<{\n  action: string\n  disabled: boolean\n}> = ({ action, disabled }) => {\n  const { submit } = useForm()\n  const { t } = useTranslation()\n\n  const save = useCallback(() => {\n    void submit({\n      action,\n      method: 'PATCH',\n      overrides: {\n        _status: 'published',\n      },\n      skipValidation: true,\n    })\n  }, [action, submit])\n\n  return (\n    <FormSubmit className={`${baseClass}__publish`} disabled={disabled} onClick={save}>\n      {t('version:publishChanges')}\n    </FormSubmit>\n  )\n}\n\nconst SaveDraftButton: React.FC<{\n  action: string\n  disabled: boolean\n}> = ({ action, disabled }) => {\n  const { submit } = useForm()\n  const { t } = useTranslation()\n\n  const save = useCallback(() => {\n    void submit({\n      action,\n      method: 'PATCH',\n      overrides: {\n        _status: 'draft',\n      },\n      skipValidation: true,\n    })\n  }, [action, submit])\n\n  return (\n    <FormSubmit\n      buttonStyle=\"secondary\"\n      className={`${baseClass}__draft`}\n      disabled={disabled}\n      onClick={save}\n    >\n      {t('version:saveDraft')}\n    </FormSubmit>\n  )\n}\n\nexport const EditManyDrawerContent: React.FC<\n  {\n    drawerSlug: string\n    selectedFields: FieldOption[]\n    setSelectedFields: (fields: FieldOption[]) => void\n  } & EditManyProps\n> = (props) => {\n  const {\n    collection: { fields, labels: { plural, singular } } = {},\n    collection,\n    drawerSlug,\n    selectedFields,\n    setSelectedFields,\n  } = props\n\n  const { permissions, user } = useAuth()\n\n  const { closeModal } = useModal()\n\n  const {\n    config: {\n      routes: { api: apiRoute },\n      serverURL,\n    },\n  } = useConfig()\n\n  const { getFormState } = useServerFunctions()\n\n  const { count, getQueryParams, selectAll } = useSelection()\n  const { i18n, t } = useTranslation()\n\n  const [isInitializing, setIsInitializing] = useState(false)\n\n  const router = useRouter()\n  const abortFormStateRef = React.useRef<AbortController>(null)\n  const { clearRouteCache } = useRouteCache()\n  const collectionPermissions = permissions?.collections?.[collection.slug]\n  const searchParams = useSearchParams()\n\n  const select = useMemo<SelectType>(() => {\n    return unflatten(\n      selectedFields.reduce((acc, option) => {\n        acc[option.value.path] = true\n        return acc\n      }, {} as SelectType),\n    )\n  }, [selectedFields])\n\n  const onChange: FormProps['onChange'][0] = useCallback(\n    async ({ formState: prevFormState, submitted }) => {\n      const controller = handleAbortRef(abortFormStateRef)\n\n      const { state } = await getFormState({\n        collectionSlug: collection.slug,\n        docPermissions: collectionPermissions,\n        docPreferences: null,\n        formState: prevFormState,\n        operation: 'update',\n        schemaPath: collection.slug,\n        select,\n        signal: controller.signal,\n        skipValidation: !submitted,\n      })\n\n      abortFormStateRef.current = null\n\n      return state\n    },\n    [getFormState, collection, collectionPermissions, select],\n  )\n\n  useEffect(() => {\n    const abortFormState = abortFormStateRef.current\n\n    return () => {\n      abortAndIgnore(abortFormState)\n    }\n  }, [])\n\n  const queryString = useMemo(() => {\n    const queryWithSearch = mergeListSearchAndWhere({\n      collectionConfig: collection,\n      search: searchParams.get('search'),\n    })\n\n    return getQueryParams(queryWithSearch)\n  }, [collection, searchParams, getQueryParams])\n\n  const onSuccess = () => {\n    router.replace(\n      qs.stringify(\n        {\n          ...parseSearchParams(searchParams),\n          page: selectAll === SelectAllStatus.AllAvailable ? '1' : undefined,\n        },\n        { addQueryPrefix: true },\n      ),\n    )\n    clearRouteCache() // Use clearRouteCache instead of router.refresh, as we only need to clear the cache if the user has route caching enabled - clearRouteCache checks for this\n    closeModal(drawerSlug)\n  }\n\n  const onFieldSelect = useCallback<OnFieldSelect>(\n    async ({ dispatchFields, formState, selected }) => {\n      setIsInitializing(true)\n\n      setSelectedFields(selected || [])\n\n      const { state } = await getFormState({\n        collectionSlug: collection.slug,\n        docPermissions: collectionPermissions,\n        docPreferences: null,\n        formState,\n        operation: 'update',\n        schemaPath: collection.slug,\n        select: unflatten(\n          selected.reduce((acc, option) => {\n            acc[option.value.path] = true\n            return acc\n          }, {} as SelectType),\n        ),\n        skipValidation: true,\n      })\n\n      dispatchFields({\n        type: 'UPDATE_MANY',\n        formState: state,\n      })\n\n      setIsInitializing(false)\n    },\n    [getFormState, collection.slug, collectionPermissions, setSelectedFields],\n  )\n\n  return (\n    <DocumentInfoProvider\n      collectionSlug={collection.slug}\n      currentEditor={user}\n      hasPublishedDoc={false}\n      id={null}\n      initialData={{}}\n      isLocked={false}\n      lastUpdateTime={0}\n      mostRecentVersionIsAutosaved={false}\n      unpublishedVersionCount={0}\n      versionCount={0}\n    >\n      <OperationContext value=\"update\">\n        <div className={`${baseClass}__main`}>\n          <div className={`${baseClass}__header`}>\n            <h2 className={`${baseClass}__header__title`}>\n              {t('general:editingLabel', {\n                count,\n                label: getTranslation(count > 1 ? plural : singular, i18n),\n              })}\n            </h2>\n            <button\n              aria-label={t('general:close')}\n              className={`${baseClass}__header__close`}\n              id={`close-drawer__${drawerSlug}`}\n              onClick={() => closeModal(drawerSlug)}\n              type=\"button\"\n            >\n              <XIcon />\n            </button>\n          </div>\n          <Form\n            className={`${baseClass}__form`}\n            isInitializing={isInitializing}\n            onChange={[onChange]}\n            onSuccess={onSuccess}\n          >\n            <FieldSelect\n              fields={fields}\n              onChange={onFieldSelect}\n              permissions={collectionPermissions.fields}\n            />\n            {selectedFields.length === 0 ? null : (\n              <div className=\"render-fields\">\n                {selectedFields.map((option, i) => {\n                  const {\n                    value: { field, fieldPermissions, path },\n                  } = option\n\n                  return (\n                    <RenderField\n                      clientFieldConfig={field}\n                      indexPath=\"\"\n                      key={`${path}-${i}`}\n                      parentPath=\"\"\n                      parentSchemaPath=\"\"\n                      path={path}\n                      permissions={fieldPermissions}\n                    />\n                  )\n                })}\n              </div>\n            )}\n            <div className={`${baseClass}__sidebar-wrap`}>\n              <div className={`${baseClass}__sidebar`}>\n                <div className={`${baseClass}__sidebar-sticky-wrap`}>\n                  <div className={`${baseClass}__document-actions`}>\n                    {collection?.versions?.drafts ? (\n                      <React.Fragment>\n                        <SaveDraftButton\n                          action={`${serverURL}${apiRoute}/${collection.slug}${queryString}&draft=true`}\n                          disabled={selectedFields.length === 0}\n                        />\n                        <PublishButton\n                          action={`${serverURL}${apiRoute}/${collection.slug}${queryString}&draft=true`}\n                          disabled={selectedFields.length === 0}\n                        />\n                      </React.Fragment>\n                    ) : (\n                      <Submit\n                        action={`${serverURL}${apiRoute}/${collection.slug}${queryString}`}\n                        disabled={selectedFields.length === 0}\n                      />\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Form>\n        </div>\n      </OperationContext>\n    </DocumentInfoProvider>\n  )\n}\n"],"mappings":"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","ignoreList":[]}