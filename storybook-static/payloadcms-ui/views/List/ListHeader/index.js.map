{"version":3,"file":"index.js","names":["useModal","getTranslation","React","Button","useListDrawerContext","ListSelection","Pill","ReactSelect","FieldLabel","XIcon","useConfig","baseClass","drawerBaseClass","DefaultListHeader","className","collectionConfig","Description","disableBulkDelete","disableBulkEdit","hasCreatePermission","i18n","isBulkUploadEnabled","newDocumentURL","openBulkUpload","smallBreak","t","_jsxs","filter","Boolean","join","_jsx","labels","plural","_Fragment","label","singular","buttonStyle","el","size","to","onClick","ListDrawerHeader","config","collections","getEntityConfig","closeModal","DocumentDrawerToggler","drawerSlug","enabledCollections","selectedOption","setSelectedOption","collectionSlug","value","enabledCollectionConfigs","slug","includes","moreThanOneAvailableCollection","length","type","onChange","options","map","coll","ListHeader","props","isInDrawer"],"sources":["../../../../src/views/List/ListHeader/index.tsx"],"sourcesContent":["import type { I18nClient, TFunction } from '@payloadcms/translations'\nimport type { ClientCollectionConfig } from 'payload'\n\nimport { useModal } from '@faceless-ui/modal'\nimport { getTranslation } from '@payloadcms/translations'\nimport React from 'react'\n\nimport { Button } from '../../../elements/Button/index.js'\nimport { useListDrawerContext } from '../../../elements/ListDrawer/Provider.js'\nimport { ListSelection } from '../../../elements/ListSelection/index.js'\nimport { Pill } from '../../../elements/Pill/index.js'\nimport { ReactSelect } from '../../../elements/ReactSelect/index.js'\nimport { FieldLabel } from '../../../fields/FieldLabel/index.js'\nimport { XIcon } from '../../../icons/X/index.js'\nimport { useConfig } from '../../../providers/Config/index.js'\nimport './index.scss'\n\nconst baseClass = 'list-header'\nconst drawerBaseClass = 'list-drawer'\n\nexport type ListHeaderProps = {\n  className?: string\n  collectionConfig: ClientCollectionConfig\n  Description?: React.ReactNode\n  disableBulkDelete?: boolean\n  disableBulkEdit?: boolean\n  hasCreatePermission: boolean\n  i18n: I18nClient\n  isBulkUploadEnabled: boolean\n  newDocumentURL: string\n  openBulkUpload: () => void\n  smallBreak: boolean\n  t: TFunction\n}\n\nconst DefaultListHeader: React.FC<ListHeaderProps> = ({\n  className,\n  collectionConfig,\n  Description,\n  disableBulkDelete,\n  disableBulkEdit,\n  hasCreatePermission,\n  i18n,\n  isBulkUploadEnabled,\n  newDocumentURL,\n  openBulkUpload,\n  smallBreak,\n  t,\n}) => {\n  return (\n    <header className={[baseClass, className].filter(Boolean).join(' ')}>\n      <h1>{getTranslation(collectionConfig?.labels?.plural, i18n)}</h1>\n      {hasCreatePermission && (\n        <>\n          <Button\n            aria-label={i18n.t('general:createNewLabel', {\n              label: getTranslation(collectionConfig?.labels?.singular, i18n),\n            })}\n            buttonStyle=\"pill\"\n            el={'link'}\n            size=\"small\"\n            to={newDocumentURL}\n          >\n            {i18n.t('general:createNew')}\n          </Button>\n          {isBulkUploadEnabled && (\n            <Button\n              aria-label={t('upload:bulkUpload')}\n              buttonStyle=\"pill\"\n              onClick={openBulkUpload}\n              size=\"small\"\n            >\n              {t('upload:bulkUpload')}\n            </Button>\n          )}\n        </>\n      )}\n      {!smallBreak && (\n        <ListSelection\n          collectionConfig={collectionConfig}\n          disableBulkDelete={disableBulkDelete}\n          disableBulkEdit={disableBulkEdit}\n          label={getTranslation(collectionConfig?.labels?.plural, i18n)}\n        />\n      )}\n      {Description}\n    </header>\n  )\n}\n\nconst ListDrawerHeader: React.FC<ListHeaderProps> = ({\n  Description,\n  hasCreatePermission,\n  i18n,\n  t,\n}) => {\n  const {\n    config: { collections },\n    getEntityConfig,\n  } = useConfig()\n\n  const { closeModal } = useModal()\n\n  const {\n    DocumentDrawerToggler,\n    drawerSlug,\n    enabledCollections,\n    selectedOption,\n    setSelectedOption,\n  } = useListDrawerContext()\n\n  const collectionConfig = getEntityConfig({ collectionSlug: selectedOption.value })\n\n  const enabledCollectionConfigs = collections.filter(({ slug }) =>\n    enabledCollections.includes(slug),\n  )\n\n  const moreThanOneAvailableCollection = enabledCollections.length > 1\n\n  return (\n    <header className={`${drawerBaseClass}__header`}>\n      <div className={`${drawerBaseClass}__header-wrap`}>\n        <div className={`${drawerBaseClass}__header-content`}>\n          <h2 className={`${drawerBaseClass}__header-text`}>\n            {getTranslation(collectionConfig?.labels?.plural, i18n)}\n          </h2>\n          {hasCreatePermission && (\n            <DocumentDrawerToggler className={`${drawerBaseClass}__create-new-button`}>\n              <Pill>{t('general:createNew')}</Pill>\n            </DocumentDrawerToggler>\n          )}\n        </div>\n        <button\n          aria-label={t('general:close')}\n          className={`${drawerBaseClass}__header-close`}\n          onClick={() => {\n            closeModal(drawerSlug)\n          }}\n          type=\"button\"\n        >\n          <XIcon />\n        </button>\n      </div>\n      {Description}\n      {moreThanOneAvailableCollection && (\n        <div className={`${drawerBaseClass}__select-collection-wrap`}>\n          <FieldLabel label={t('upload:selectCollectionToBrowse')} />\n          <ReactSelect\n            className={`${baseClass}__select-collection`}\n            onChange={setSelectedOption}\n            options={enabledCollectionConfigs.map((coll) => ({\n              label: getTranslation(coll.labels.singular, i18n),\n              value: coll.slug,\n            }))}\n            value={{\n              label: getTranslation(collectionConfig?.labels.singular, i18n),\n              value: collectionConfig?.slug,\n            }}\n          />\n        </div>\n      )}\n    </header>\n  )\n}\n\nexport const ListHeader: React.FC<ListHeaderProps> = (props) => {\n  const { isInDrawer } = useListDrawerContext()\n\n  if (isInDrawer) {\n    return <ListDrawerHeader {...props} />\n  }\n\n  return <DefaultListHeader {...props} />\n}\n"],"mappings":"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","ignoreList":[]}