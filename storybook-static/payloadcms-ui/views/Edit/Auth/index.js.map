{"version":3,"file":"index.js","names":["c","_c","React","Fragment","useCallback","useEffect","useMemo","useState","toast","Button","EmailAndUsernameFields","CheckboxField","ConfirmPasswordField","PasswordField","useFormFields","useFormModified","useAuth","useConfig","useDocumentInfo","useTranslation","APIKey","baseClass","Auth","props","$","className","collectionSlug","disableLocalStrategy","email","loginWithUsername","operation","readOnly","requirePassword","setValidateBeforeSubmit","useAPIKey","username","verify","permissions","changingPassword","setChangingPassword","enableAPIKey","_temp","dispatchFields","_temp2","modified","i18n","t","docPermissions","isEditing","isInitializing","config","t0","routes","t1","serverURL","api","enableFields","disabled","apiKeyPermissions","fields","apiKeyReadOnly","update","enableAPIKeyReadOnly","canReadApiKey","read","t2","bb0","collection","collections","Boolean","unlock","undefined","hasPermissionToUnlock","t3","showPasswordFields","type","errorMessage","path","valid","handleChangePassword","t4","language","url","response","fetch","body","JSON","stringify","credentials","headers","method","status","success","error","t5","t6","t7","filter","t8","join","t9","value","t10","_jsx","children","_jsxs","field","name","admin","label","schemaPath","enabled","t11","autoComplete","required","indexPath","parentPath","parentSchemaPath","buttonStyle","onClick","size","id","reducer"],"sources":["../../../../src/views/Edit/Auth/index.tsx"],"sourcesContent":["'use client'\n\nimport React, { Fragment, useCallback, useEffect, useMemo, useState } from 'react'\nimport { toast } from 'sonner'\n\nimport type { Props } from './types.js'\n\nimport { Button } from '../../../elements/Button/index.js'\nimport { EmailAndUsernameFields } from '../../../elements/EmailAndUsername/index.js'\nimport { CheckboxField } from '../../../fields/Checkbox/index.js'\nimport { ConfirmPasswordField } from '../../../fields/ConfirmPassword/index.js'\nimport { PasswordField } from '../../../fields/Password/index.js'\nimport { useFormFields, useFormModified } from '../../../forms/Form/context.js'\nimport { useAuth } from '../../../providers/Auth/index.js'\nimport { useConfig } from '../../../providers/Config/index.js'\nimport { useDocumentInfo } from '../../../providers/DocumentInfo/index.js'\nimport { useTranslation } from '../../../providers/Translation/index.js'\nimport { APIKey } from './APIKey.js'\nimport './index.scss'\n\nconst baseClass = 'auth-fields'\n\nexport const Auth: React.FC<Props> = (props) => {\n  const {\n    className,\n    collectionSlug,\n    disableLocalStrategy,\n    email,\n    loginWithUsername,\n    operation,\n    readOnly,\n    requirePassword,\n    setValidateBeforeSubmit,\n    useAPIKey,\n    username,\n    verify,\n  } = props\n\n  const { permissions } = useAuth()\n  const [changingPassword, setChangingPassword] = useState(requirePassword)\n  const enableAPIKey = useFormFields(([fields]) => (fields && fields?.enableAPIKey) || null)\n  const dispatchFields = useFormFields((reducer) => reducer[1])\n  const modified = useFormModified()\n  const { i18n, t } = useTranslation()\n  const { docPermissions, isEditing, isInitializing } = useDocumentInfo()\n  const {\n    config: {\n      routes: { api },\n      serverURL,\n    },\n  } = useConfig()\n\n  const enableFields =\n    !disableLocalStrategy ||\n    (typeof disableLocalStrategy === 'object' && disableLocalStrategy.enableFields === true)\n\n  const disabled = readOnly || isInitializing\n\n  const apiKeyPermissions =\n    docPermissions?.fields === true ? true : docPermissions?.fields?.enableAPIKey\n\n  const apiKeyReadOnly =\n    readOnly ||\n    apiKeyPermissions === true ||\n    (apiKeyPermissions && typeof apiKeyPermissions === 'object' && !apiKeyPermissions?.update)\n\n  const enableAPIKeyReadOnly =\n    readOnly || (apiKeyPermissions !== true && !apiKeyPermissions?.update)\n\n  const canReadApiKey = apiKeyPermissions === true || apiKeyPermissions?.read\n\n  const hasPermissionToUnlock: boolean = useMemo(() => {\n    const collection = permissions?.collections?.[collectionSlug]\n\n    if (collection) {\n      return Boolean('unlock' in collection ? collection.unlock : undefined)\n    }\n\n    return false\n  }, [permissions, collectionSlug])\n\n  const handleChangePassword = useCallback(\n    (showPasswordFields: boolean) => {\n      if (showPasswordFields) {\n        setValidateBeforeSubmit(true)\n\n        dispatchFields({\n          type: 'UPDATE',\n          errorMessage: t('validation:required'),\n          path: 'password',\n          valid: false,\n        })\n\n        dispatchFields({\n          type: 'UPDATE',\n          errorMessage: t('validation:required'),\n          path: 'confirm-password',\n          valid: false,\n        })\n      } else {\n        setValidateBeforeSubmit(false)\n        dispatchFields({ type: 'REMOVE', path: 'password' })\n        dispatchFields({ type: 'REMOVE', path: 'confirm-password' })\n      }\n\n      setChangingPassword(showPasswordFields)\n    },\n    [dispatchFields, t, setValidateBeforeSubmit],\n  )\n\n  const unlock = useCallback(async () => {\n    const url = `${serverURL}${api}/${collectionSlug}/unlock`\n    const response = await fetch(url, {\n      body:\n        loginWithUsername && username ? JSON.stringify({ username }) : JSON.stringify({ email }),\n      credentials: 'include',\n      headers: {\n        'Accept-Language': i18n.language,\n        'Content-Type': 'application/json',\n      },\n      method: 'post',\n    })\n\n    if (response.status === 200) {\n      toast.success(t('authentication:successfullyUnlocked'))\n    } else {\n      toast.error(t('authentication:failedToUnlock'))\n    }\n  }, [i18n, serverURL, api, collectionSlug, email, username, t, loginWithUsername])\n\n  useEffect(() => {\n    if (!modified) {\n      setChangingPassword(false)\n    }\n  }, [modified])\n\n  if (disableLocalStrategy && !enableFields && !useAPIKey) {\n    return null\n  }\n\n  return (\n    <div className={[baseClass, className].filter(Boolean).join(' ')}>\n      {enableFields && (\n        <React.Fragment>\n          <EmailAndUsernameFields\n            loginWithUsername={loginWithUsername}\n            operation={operation}\n            permissions={docPermissions?.fields}\n            readOnly={readOnly}\n            t={t}\n          />\n          {(changingPassword || requirePassword) && (!disableLocalStrategy || !enableFields) && (\n            <div className={`${baseClass}__changing-password`}>\n              <PasswordField\n                autoComplete=\"new-password\"\n                field={{\n                  name: 'password',\n                  label: t('authentication:newPassword'),\n                  required: true,\n                }}\n                indexPath=\"\"\n                parentPath=\"\"\n                parentSchemaPath=\"\"\n                path=\"password\"\n                schemaPath=\"password\"\n              />\n              <ConfirmPasswordField disabled={readOnly} />\n            </div>\n          )}\n          <div className={`${baseClass}__controls`}>\n            {changingPassword && !requirePassword && (\n              <Button\n                buttonStyle=\"secondary\"\n                disabled={disabled}\n                onClick={() => handleChangePassword(false)}\n                size=\"medium\"\n              >\n                {t('general:cancel')}\n              </Button>\n            )}\n            {!changingPassword && !requirePassword && !disableLocalStrategy && (\n              <Button\n                buttonStyle=\"secondary\"\n                disabled={disabled}\n                id=\"change-password\"\n                onClick={() => handleChangePassword(true)}\n                size=\"medium\"\n              >\n                {t('authentication:changePassword')}\n              </Button>\n            )}\n            {operation === 'update' && hasPermissionToUnlock && (\n              <Button\n                buttonStyle=\"secondary\"\n                disabled={disabled}\n                onClick={() => void unlock()}\n                size=\"medium\"\n              >\n                {t('authentication:forceUnlock')}\n              </Button>\n            )}\n          </div>\n        </React.Fragment>\n      )}\n      {useAPIKey && (\n        <div className={`${baseClass}__api-key`}>\n          {canReadApiKey && (\n            <Fragment>\n              <CheckboxField\n                field={{\n                  name: 'enableAPIKey',\n                  admin: { disabled, readOnly: enableAPIKeyReadOnly },\n                  label: t('authentication:enableAPIKey'),\n                }}\n                path=\"enableAPIKey\"\n                schemaPath={`${collectionSlug}.enableAPIKey`}\n              />\n              <APIKey enabled={!!enableAPIKey?.value} readOnly={apiKeyReadOnly} />\n            </Fragment>\n          )}\n        </div>\n      )}\n      {verify && isEditing && (\n        <CheckboxField\n          field={{\n            name: '_verified',\n            admin: { disabled, readOnly },\n            label: t('authentication:verified'),\n          }}\n          path=\"_verified\"\n          schemaPath={`${collectionSlug}._verified`}\n        />\n      )}\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]}