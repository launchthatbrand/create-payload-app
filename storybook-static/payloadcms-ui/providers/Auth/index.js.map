{"version":3,"file":"index.js","names":["useModal","usePathname","useRouter","formatAdminURL","qs","React","createContext","use","useCallback","useEffect","useState","toast","stayLoggedInModalSlug","useDebounce","useTranslation","requests","useConfig","useRouteTransition","Context","maxTimeoutTime","AuthProvider","children","permissions","initialPermissions","user","initialUser","setUserInMemory","tokenInMemory","setTokenInMemory","tokenExpiration","setTokenExpiration","pathname","router","config","admin","routes","inactivity","logoutInactivityRoute","userSlug","adminRoute","api","apiRoute","serverURL","setPermissions","i18n","closeAllModals","openModal","lastLocationChange","setLastLocationChange","debouncedLocationChange","refreshTokenTimeoutRef","useRef","startRouteTransition","id","redirectToInactivityRoute","replace","path","window","location","startsWith","encodeURIComponent","revokeTokenAndExpire","undefined","clearTimeout","current","setNewUser","userResponse","token","exp","refreshCookie","forceRefresh","now","Math","round","Date","getTime","remainingTime","setTimeout","refresh","request","post","headers","language","status","json","e","error","message","refreshCookieAsync","skipSetUser","logOut","collection","refreshPermissions","locale","params","stringify","addQueryPrefix","get","Error","fetchFullUser","credentials","reminder","forceLogOut","remindInTimeFromNow","max","min","forceLogOutInTimeFromNow","_jsx","value","setUser","useAuth"],"sources":["../../../src/providers/Auth/index.tsx"],"sourcesContent":["'use client'\nimport type { ClientUser, SanitizedPermissions, User } from 'payload'\n\nimport { useModal } from '@faceless-ui/modal'\nimport { usePathname, useRouter } from 'next/navigation.js'\nimport { formatAdminURL } from 'payload/shared'\nimport * as qs from 'qs-esm'\nimport React, { createContext, use, useCallback, useEffect, useState } from 'react'\nimport { toast } from 'sonner'\n\nimport { stayLoggedInModalSlug } from '../../elements/StayLoggedIn/index.js'\nimport { useDebounce } from '../../hooks/useDebounce.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { requests } from '../../utilities/api.js'\nimport { useConfig } from '../Config/index.js'\nimport { useRouteTransition } from '../RouteTransition/index.js'\n\nexport type UserWithToken<T = ClientUser> = {\n  exp: number\n  token: string\n  user: T\n}\n\nexport type AuthContext<T = ClientUser> = {\n  fetchFullUser: () => Promise<null | User>\n  logOut: () => Promise<boolean>\n  permissions?: SanitizedPermissions\n  refreshCookie: (forceRefresh?: boolean) => void\n  refreshCookieAsync: () => Promise<ClientUser>\n  refreshPermissions: () => Promise<void>\n  setPermissions: (permissions: SanitizedPermissions) => void\n  setUser: (user: null | UserWithToken<T>) => void\n  strategy?: string\n  token?: string\n  tokenExpiration?: number\n  user?: null | T\n}\n\nconst Context = createContext({} as AuthContext)\n\nconst maxTimeoutTime = 2147483647\n\ntype Props = {\n  children: React.ReactNode\n  permissions?: SanitizedPermissions\n  user?: ClientUser | null\n}\n\nexport function AuthProvider({\n  children,\n  permissions: initialPermissions,\n  user: initialUser,\n}: Props) {\n  const [user, setUserInMemory] = useState<ClientUser | null>(initialUser)\n  const [tokenInMemory, setTokenInMemory] = useState<string>()\n  const [tokenExpiration, setTokenExpiration] = useState<number>()\n  const pathname = usePathname()\n  const router = useRouter()\n\n  const { config } = useConfig()\n\n  const {\n    admin: {\n      routes: { inactivity: logoutInactivityRoute },\n      user: userSlug,\n    },\n    routes: { admin: adminRoute, api: apiRoute },\n    serverURL,\n  } = config\n\n  const [permissions, setPermissions] = useState<SanitizedPermissions>(initialPermissions)\n\n  const { i18n } = useTranslation()\n  const { closeAllModals, openModal } = useModal()\n  const [lastLocationChange, setLastLocationChange] = useState(0)\n  const debouncedLocationChange = useDebounce(lastLocationChange, 10000)\n  const refreshTokenTimeoutRef = React.useRef<ReturnType<typeof setTimeout>>(null)\n  const { startRouteTransition } = useRouteTransition()\n\n  const id = user?.id\n\n  const redirectToInactivityRoute = useCallback(() => {\n    startRouteTransition(() =>\n      router.replace(\n        formatAdminURL({\n          adminRoute,\n          path: `${logoutInactivityRoute}${window.location.pathname.startsWith(adminRoute) ? `?redirect=${encodeURIComponent(window.location.pathname)}` : ''}`,\n        }),\n      ),\n    )\n\n    closeAllModals()\n  }, [router, adminRoute, logoutInactivityRoute, closeAllModals, startRouteTransition])\n\n  const revokeTokenAndExpire = useCallback(() => {\n    setTokenInMemory(undefined)\n    setTokenExpiration(undefined)\n    clearTimeout(refreshTokenTimeoutRef.current)\n  }, [])\n\n  const setNewUser = useCallback(\n    (userResponse: null | UserWithToken) => {\n      if (userResponse?.user) {\n        setUserInMemory(userResponse.user)\n        setTokenInMemory(userResponse.token)\n        setTokenExpiration(userResponse.exp)\n      } else {\n        setUserInMemory(null)\n        revokeTokenAndExpire()\n      }\n    },\n    [revokeTokenAndExpire],\n  )\n\n  const refreshCookie = useCallback(\n    (forceRefresh?: boolean) => {\n      const now = Math.round(new Date().getTime() / 1000)\n      const remainingTime = (typeof tokenExpiration === 'number' ? tokenExpiration : 0) - now\n\n      if (forceRefresh || (tokenExpiration && remainingTime < 120)) {\n        refreshTokenTimeoutRef.current = setTimeout(() => {\n          async function refresh() {\n            try {\n              const request = await requests.post(\n                `${serverURL}${apiRoute}/${userSlug}/refresh-token?refresh`,\n                {\n                  headers: {\n                    'Accept-Language': i18n.language,\n                  },\n                },\n              )\n\n              if (request.status === 200) {\n                const json = await request.json()\n                setNewUser(json)\n              } else {\n                setNewUser(null)\n                redirectToInactivityRoute()\n              }\n            } catch (e) {\n              toast.error(e.message)\n            }\n          }\n\n          void refresh()\n        }, 1000)\n      }\n\n      return () => {\n        clearTimeout(refreshTokenTimeoutRef.current)\n      }\n    },\n    [\n      apiRoute,\n      i18n.language,\n      redirectToInactivityRoute,\n      serverURL,\n      setNewUser,\n      tokenExpiration,\n      userSlug,\n    ],\n  )\n\n  const refreshCookieAsync = useCallback(\n    async (skipSetUser?: boolean): Promise<ClientUser> => {\n      try {\n        const request = await requests.post(`${serverURL}${apiRoute}/${userSlug}/refresh-token`, {\n          headers: {\n            'Accept-Language': i18n.language,\n          },\n        })\n\n        if (request.status === 200) {\n          const json = await request.json()\n          if (!skipSetUser) {\n            setNewUser(json)\n          }\n          return json.user\n        }\n\n        setNewUser(null)\n        redirectToInactivityRoute()\n        return null\n      } catch (e) {\n        toast.error(`Refreshing token failed: ${e.message}`)\n        return null\n      }\n    },\n    [apiRoute, i18n.language, redirectToInactivityRoute, serverURL, setNewUser, userSlug],\n  )\n\n  const logOut = useCallback(async () => {\n    try {\n      await requests.post(`${serverURL}${apiRoute}/${user.collection}/logout`)\n      setNewUser(null)\n      revokeTokenAndExpire()\n      return true\n    } catch (e) {\n      toast.error(`Logging out failed: ${e.message}`)\n      return false\n    }\n  }, [apiRoute, revokeTokenAndExpire, serverURL, setNewUser, user])\n\n  const refreshPermissions = useCallback(\n    async ({ locale }: { locale?: string } = {}) => {\n      const params = qs.stringify(\n        {\n          locale,\n        },\n        {\n          addQueryPrefix: true,\n        },\n      )\n\n      try {\n        const request = await requests.get(`${serverURL}${apiRoute}/access${params}`, {\n          headers: {\n            'Accept-Language': i18n.language,\n          },\n        })\n\n        if (request.status === 200) {\n          const json: SanitizedPermissions = await request.json()\n          setPermissions(json)\n        } else {\n          throw new Error(`Fetching permissions failed with status code ${request.status}`)\n        }\n      } catch (e) {\n        toast.error(`Refreshing permissions failed: ${e.message}`)\n      }\n    },\n    [serverURL, apiRoute, i18n],\n  )\n\n  const fetchFullUser = React.useCallback(async () => {\n    try {\n      const request = await requests.get(`${serverURL}${apiRoute}/${userSlug}/me`, {\n        credentials: 'include',\n        headers: {\n          'Accept-Language': i18n.language,\n        },\n      })\n\n      if (request.status === 200) {\n        const json: UserWithToken = await request.json()\n        const user = null\n\n        setNewUser(json)\n        return user\n      }\n    } catch (e) {\n      toast.error(`Fetching user failed: ${e.message}`)\n    }\n\n    return null\n  }, [serverURL, apiRoute, userSlug, i18n.language, setNewUser])\n\n  // On mount, get user and set\n  useEffect(() => {\n    void fetchFullUser()\n  }, [fetchFullUser])\n\n  // When location changes, refresh cookie\n  useEffect(() => {\n    if (id) {\n      refreshCookie()\n    }\n  }, [debouncedLocationChange, refreshCookie, id])\n\n  useEffect(() => {\n    setLastLocationChange(Date.now())\n  }, [pathname])\n\n  useEffect(() => {\n    let reminder: ReturnType<typeof setTimeout>\n    let forceLogOut: ReturnType<typeof setTimeout>\n    const now = Math.round(new Date().getTime() / 1000)\n    const remainingTime = typeof tokenExpiration === 'number' ? tokenExpiration - now : 0\n    const remindInTimeFromNow = Math.max(Math.min((remainingTime - 60) * 1000, maxTimeoutTime), 0)\n    const forceLogOutInTimeFromNow = Math.max(Math.min(remainingTime * 1000, maxTimeoutTime), 0)\n\n    if (!user) {\n      clearTimeout(reminder)\n      clearTimeout(forceLogOut)\n      return\n    }\n\n    if (remainingTime > 0) {\n      reminder = setTimeout(() => {\n        openModal(stayLoggedInModalSlug)\n      }, remindInTimeFromNow)\n\n      forceLogOut = setTimeout(() => {\n        setNewUser(null)\n        redirectToInactivityRoute()\n      }, forceLogOutInTimeFromNow)\n    }\n\n    return () => {\n      if (reminder) {\n        clearTimeout(reminder)\n      }\n      if (forceLogOut) {\n        clearTimeout(forceLogOut)\n      }\n    }\n  }, [tokenExpiration, openModal, i18n, setNewUser, user, redirectToInactivityRoute])\n\n  return (\n    <Context\n      value={{\n        fetchFullUser,\n        logOut,\n        permissions,\n        refreshCookie,\n        refreshCookieAsync,\n        refreshPermissions,\n        setPermissions,\n        setUser: setNewUser,\n        token: tokenInMemory,\n        user,\n      }}\n    >\n      {children}\n    </Context>\n  )\n}\n\nexport const useAuth = <T = ClientUser,>(): AuthContext<T> => use(Context) as AuthContext<T>\n"],"mappings":"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","ignoreList":[]}