{"version":3,"file":"useQueues.js","names":["useCallback","useRef","useQueues","runningTaskRef","queuedTask","abortControllerRef","queueTask","fn","current","abort","executeTask","taskToRun","controller","AbortController","signal","err","name","console","error"],"sources":["../../src/hooks/useQueues.ts"],"sourcesContent":["import { useCallback, useRef } from 'react'\n\nexport function useQueues(): {\n  queueTask: (fn: (signal: AbortSignal) => Promise<void>) => void\n} {\n  const runningTaskRef = useRef<null | Promise<void>>(null)\n  const queuedTask = useRef<((signal: AbortSignal) => Promise<void>) | null>(null)\n  const abortControllerRef = useRef<AbortController | null>(null)\n\n  const queueTask = useCallback((fn: (signal: AbortSignal) => Promise<void>) => {\n    // Overwrite the queued task every time a new one arrives\n    queuedTask.current = fn\n\n    // If a task is already running, abort it and return\n    if (runningTaskRef.current !== null) {\n      if (abortControllerRef.current) {\n        abortControllerRef.current.abort()\n      }\n\n      return\n    }\n\n    const executeTask = async () => {\n      while (queuedTask.current) {\n        const taskToRun = queuedTask.current\n        queuedTask.current = null // Reset latest task before running\n\n        const controller = new AbortController()\n        abortControllerRef.current = controller\n\n        try {\n          runningTaskRef.current = taskToRun(controller.signal)\n          await runningTaskRef.current // Wait for the task to complete\n        } catch (err) {\n          if (err.name !== 'AbortError') {\n            console.error('Error in queued function:', err) // eslint-disable-line no-console\n          }\n        } finally {\n          runningTaskRef.current = null\n        }\n      }\n    }\n\n    void executeTask()\n  }, [])\n\n  return { queueTask }\n}\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,MAAM,QAAQ;AAEpC,OAAO,SAASC,UAAA;EAGd,MAAMC,cAAA,GAAiBF,MAAA,CAA6B;EACpD,MAAMG,UAAA,GAAaH,MAAA,CAAwD;EAC3E,MAAMI,kBAAA,GAAqBJ,MAAA,CAA+B;EAE1D,MAAMK,SAAA,GAAYN,WAAA,CAAaO,EAAA;IAC7B;IACAH,UAAA,CAAWI,OAAO,GAAGD,EAAA;IAErB;IACA,IAAIJ,cAAA,CAAeK,OAAO,KAAK,MAAM;MACnC,IAAIH,kBAAA,CAAmBG,OAAO,EAAE;QAC9BH,kBAAA,CAAmBG,OAAO,CAACC,KAAK;MAClC;MAEA;IACF;IAEA,MAAMC,WAAA,GAAc,MAAAA,CAAA;MAClB,OAAON,UAAA,CAAWI,OAAO,EAAE;QACzB,MAAMG,SAAA,GAAYP,UAAA,CAAWI,OAAO;QACpCJ,UAAA,CAAWI,OAAO,GAAG,KAAK;QAAA;QAE1B,MAAMI,UAAA,GAAa,IAAIC,eAAA;QACvBR,kBAAA,CAAmBG,OAAO,GAAGI,UAAA;QAE7B,IAAI;UACFT,cAAA,CAAeK,OAAO,GAAGG,SAAA,CAAUC,UAAA,CAAWE,MAAM;UACpD,MAAMX,cAAA,CAAeK,OAAO,CAAC;UAAA;QAC/B,EAAE,OAAOO,GAAA,EAAK;UACZ,IAAIA,GAAA,CAAIC,IAAI,KAAK,cAAc;YAC7BC,OAAA,CAAQC,KAAK,CAAC,6BAA6BH,GAAA,EAAK;YAAA;UAClD;QACF,UAAU;UACRZ,cAAA,CAAeK,OAAO,GAAG;QAC3B;MACF;IACF;IAEA,KAAKE,WAAA;EACP,GAAG,EAAE;EAEL,OAAO;IAAEJ;EAAU;AACrB","ignoreList":[]}