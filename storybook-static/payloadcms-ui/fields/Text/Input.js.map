{"version":3,"file":"Input.js","names":["c","_c","getTranslation","React","ReactSelect","RenderCustomComponent","FieldDescription","FieldError","FieldLabel","useTranslation","fieldBaseClass","TextInput","props","$","AfterInput","BeforeInput","className","Description","description","Error","hasMany","inputRef","Label","label","localized","maxRows","onChange","onKeyDown","path","placeholder","readOnly","required","rtl","showError","style","value","valueToRender","i18n","t","editableProps","_temp2","t0","t1","t2","t3","filter","Boolean","t4","join","t5","_jsxs","children","_jsx","CustomComponent","Fallback","replace","components","DropdownIndicator","customProps","disabled","filterOption","Array","isArray","length","isClearable","isCreatable","isMulti","isSortable","menuIsOpen","noOptionsMessage","isOverHasMany","max","options","id","name","ref","type","_temp","event","currentTarget","contentEditable","data","className_0","selectProps","editableClassName","onBlur","onClick","event_0","classList","add","focus","event_1","key","remove","innerText","replaceAll","action","option","newValues","v","removedValue","preventDefault","stopPropagation"],"sources":["../../../src/fields/Text/Input.tsx"],"sourcesContent":["'use client'\nimport type { ChangeEvent } from 'react'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport React from 'react'\n\nimport type { ReactSelectAdapterProps } from '../../elements/ReactSelect/types.js'\nimport type { TextInputProps } from './types.js'\n\nimport { ReactSelect } from '../../elements/ReactSelect/index.js'\nimport { RenderCustomComponent } from '../../elements/RenderCustomComponent/index.js'\nimport { FieldDescription } from '../../fields/FieldDescription/index.js'\nimport { FieldError } from '../../fields/FieldError/index.js'\nimport { FieldLabel } from '../../fields/FieldLabel/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { fieldBaseClass } from '../shared/index.js'\nimport './index.scss'\n\nexport const TextInput: React.FC<TextInputProps> = (props) => {\n  const {\n    AfterInput,\n    BeforeInput,\n    className,\n    Description,\n    description,\n    Error,\n    hasMany,\n    inputRef,\n    Label,\n    label,\n    localized,\n    maxRows,\n    onChange,\n    onKeyDown,\n    path,\n    placeholder,\n    readOnly,\n    required,\n    rtl,\n    showError,\n    style,\n    value,\n    valueToRender,\n  } = props\n\n  const { i18n, t } = useTranslation()\n\n  const editableProps: ReactSelectAdapterProps['customProps']['editableProps'] = (\n    data,\n    className,\n    selectProps,\n  ) => {\n    const editableClassName = `${className}--editable`\n\n    return {\n      onBlur: (event: React.FocusEvent<HTMLDivElement>) => {\n        event.currentTarget.contentEditable = 'false'\n      },\n      onClick: (event: React.MouseEvent<HTMLDivElement>) => {\n        event.currentTarget.contentEditable = 'true'\n        event.currentTarget.classList.add(editableClassName)\n        event.currentTarget.focus()\n      },\n      onKeyDown: (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Escape') {\n          event.currentTarget.contentEditable = 'false'\n          event.currentTarget.classList.remove(editableClassName)\n          data.value.value = event.currentTarget.innerText\n          data.label = event.currentTarget.innerText\n\n          if (data.value.value.replaceAll('\\n', '')) {\n            selectProps.onChange(selectProps.value, {\n              action: 'create-option',\n              option: data,\n            })\n          } else {\n            if (Array.isArray(selectProps.value)) {\n              const newValues = selectProps.value.filter((v) => v.id !== data.id)\n              selectProps.onChange(newValues, {\n                action: 'pop-value',\n                removedValue: data,\n              })\n            }\n          }\n\n          event.preventDefault()\n        }\n        event.stopPropagation()\n      },\n    }\n  }\n\n  return (\n    <div\n      className={[\n        fieldBaseClass,\n        'text',\n        className,\n        showError && 'error',\n        readOnly && 'read-only',\n        hasMany && 'has-many',\n      ]\n        .filter(Boolean)\n        .join(' ')}\n      style={style}\n    >\n      <RenderCustomComponent\n        CustomComponent={Label}\n        Fallback={\n          <FieldLabel label={label} localized={localized} path={path} required={required} />\n        }\n      />\n      <div className={`${fieldBaseClass}__wrap`}>\n        <RenderCustomComponent\n          CustomComponent={Error}\n          Fallback={<FieldError path={path} showError={showError} />}\n        />\n        {BeforeInput}\n        {hasMany ? (\n          <ReactSelect\n            className={`field-${path.replace(/\\./g, '__')}`}\n            components={{ DropdownIndicator: null }}\n            customProps={{\n              editableProps,\n            }}\n            disabled={readOnly}\n            // prevent adding additional options if maxRows is reached\n            filterOption={() =>\n              !maxRows ? true : !(Array.isArray(value) && maxRows && value.length >= maxRows)\n            }\n            isClearable={false}\n            isCreatable\n            isMulti\n            isSortable\n            menuIsOpen={false}\n            noOptionsMessage={() => {\n              const isOverHasMany = Array.isArray(value) && value.length >= maxRows\n              if (isOverHasMany) {\n                return t('validation:limitReached', { max: maxRows, value: value.length + 1 })\n              }\n              return null\n            }}\n            onChange={onChange}\n            options={[]}\n            placeholder={t('general:enterAValue')}\n            showError={showError}\n            value={valueToRender}\n          />\n        ) : (\n          <input\n            data-rtl={rtl}\n            disabled={readOnly}\n            id={`field-${path?.replace(/\\./g, '__')}`}\n            name={path}\n            onChange={onChange as (e: ChangeEvent<HTMLInputElement>) => void}\n            onKeyDown={onKeyDown}\n            placeholder={getTranslation(placeholder, i18n)}\n            ref={inputRef}\n            type=\"text\"\n            value={value || ''}\n          />\n        )}\n        {AfterInput}\n        <RenderCustomComponent\n          CustomComponent={Description}\n          Fallback={<FieldDescription description={description} path={path} />}\n        />\n      </div>\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]}