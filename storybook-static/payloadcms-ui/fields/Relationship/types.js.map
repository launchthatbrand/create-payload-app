{"version":3,"file":"types.js","names":[],"sources":["../../../src/fields/Relationship/types.ts"],"sourcesContent":["import type { I18nClient } from '@payloadcms/translations'\nimport type { ClientCollectionConfig, ClientConfig, FilterOptionsResult } from 'payload'\n\nexport type Option = {\n  allowEdit: boolean\n  label: string\n  options?: Option[]\n  relationTo?: string\n  value: number | string\n}\n\nexport type OptionGroup = {\n  label: string\n  options: Option[]\n}\n\nexport type ValueWithRelation = {\n  relationTo: string\n  value: number | string\n}\n\nexport type Value = number | string | ValueWithRelation\n\ntype CLEAR = {\n  exemptValues?: Value | Value[]\n  type: 'CLEAR'\n}\n\ntype UPDATE = {\n  collection: ClientCollectionConfig\n  config: ClientConfig\n  doc: any\n  i18n: I18nClient\n  type: 'UPDATE'\n}\n\ntype ADD = {\n  collection: ClientCollectionConfig\n  config: ClientConfig\n  docs: any[]\n  i18n: I18nClient\n  ids?: (number | string)[]\n  sort?: boolean\n  type: 'ADD'\n}\n\ntype REMOVE = {\n  collection: ClientCollectionConfig\n  config: ClientConfig\n  i18n: I18nClient\n  id: string\n  type: 'REMOVE'\n}\n\nexport type Action = ADD | CLEAR | REMOVE | UPDATE\n\nexport type GetResults = (args: {\n  filterOptions?: FilterOptionsResult\n  lastFullyLoadedRelation?: number\n  lastLoadedPage: Record<string, number>\n  onSuccess?: () => void\n  search?: string\n  sort?: boolean\n  value?: Value | Value[]\n}) => Promise<void>\n"],"mappings":"AAwDA","ignoreList":[]}