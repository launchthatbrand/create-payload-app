{"version":3,"file":"Input.js","names":["React","RenderCustomComponent","FieldLabel","CheckIcon","LineIcon","inputBaseClass","CheckboxInput","id","name","AfterInput","BeforeInput","checked","className","inputRef","Label","label","localized","onToggle","partialChecked","readOnly","required","_jsxs","filter","Boolean","join","_jsx","defaultChecked","disabled","onInput","ref","type","CustomComponent","Fallback","htmlFor"],"sources":["../../../src/fields/Checkbox/Input.tsx"],"sourcesContent":["'use client'\nimport type { StaticLabel } from 'payload'\n\nimport React from 'react'\n\nimport { RenderCustomComponent } from '../../elements/RenderCustomComponent/index.js'\nimport { FieldLabel } from '../../fields/FieldLabel/index.js'\nimport { CheckIcon } from '../../icons/Check/index.js'\nimport { LineIcon } from '../../icons/Line/index.js'\n\nexport type CheckboxInputProps = {\n  readonly AfterInput?: React.ReactNode\n  readonly BeforeInput?: React.ReactNode\n  readonly checked?: boolean\n  readonly className?: string\n  readonly id?: string\n  readonly inputRef?: React.RefObject<HTMLInputElement | null>\n  readonly Label?: React.ReactNode\n  readonly label?: StaticLabel\n  readonly localized?: boolean\n  readonly name?: string\n  readonly onToggle: (event: React.ChangeEvent<HTMLInputElement>) => void\n  readonly partialChecked?: boolean\n  readonly readOnly?: boolean\n  readonly required?: boolean\n}\n\nexport const inputBaseClass = 'checkbox-input'\n\nexport const CheckboxInput: React.FC<CheckboxInputProps> = ({\n  id,\n  name,\n  AfterInput,\n  BeforeInput,\n  checked,\n  className,\n  inputRef,\n  Label,\n  label,\n  localized,\n  onToggle,\n  partialChecked,\n  readOnly,\n  required,\n}) => {\n  return (\n    <div\n      className={[\n        className,\n        inputBaseClass,\n        checked && `${inputBaseClass}--checked`,\n        readOnly && `${inputBaseClass}--read-only`,\n      ]\n        .filter(Boolean)\n        .join(' ')}\n    >\n      <div className={`${inputBaseClass}__input`}>\n        {BeforeInput}\n        <input\n          aria-label=\"\"\n          defaultChecked={Boolean(checked)}\n          disabled={readOnly}\n          id={id}\n          name={name}\n          onInput={onToggle}\n          ref={inputRef}\n          required={required}\n          type=\"checkbox\"\n        />\n        <span\n          className={[`${inputBaseClass}__icon`, !checked && partialChecked ? 'partial' : 'check']\n            .filter(Boolean)\n            .join(' ')}\n        >\n          {checked && <CheckIcon />}\n          {!checked && partialChecked && <LineIcon />}\n        </span>\n        {AfterInput}\n      </div>\n      <RenderCustomComponent\n        CustomComponent={Label}\n        Fallback={\n          <FieldLabel htmlFor={id} label={label} localized={localized} required={required} />\n        }\n      />\n    </div>\n  )\n}\n"],"mappings":"AAAA;;;AAGA,OAAOA,KAAA,MAAW;AAElB,SAASC,qBAAqB,QAAQ;AACtC,SAASC,UAAU,QAAQ;AAC3B,SAASC,SAAS,QAAQ;AAC1B,SAASC,QAAQ,QAAQ;AAmBzB,OAAO,MAAMC,cAAA,GAAiB;AAE9B,OAAO,MAAMC,aAAA,GAA8CA,CAAC;EAC1DC,EAAE;EACFC,IAAI;EACJC,UAAU;EACVC,WAAW;EACXC,OAAO;EACPC,SAAS;EACTC,QAAQ;EACRC,KAAK;EACLC,KAAK;EACLC,SAAS;EACTC,QAAQ;EACRC,cAAc;EACdC,QAAQ;EACRC;AAAQ,CACT;EACC,oBACEC,KAAA,CAAC;IACCT,SAAA,EAAW,CACTA,SAAA,EACAP,cAAA,EACAM,OAAA,IAAW,GAAGN,cAAA,WAAyB,EACvCc,QAAA,IAAY,GAAGd,cAAA,aAA2B,CAC3C,CACEiB,MAAM,CAACC,OAAA,EACPC,IAAI,CAAC;4BAERH,KAAA,CAAC;MAAIT,SAAA,EAAW,GAAGP,cAAA,SAAuB;iBACvCK,WAAA,E,aACDe,IAAA,CAAC;QACC,cAAW;QACXC,cAAA,EAAgBH,OAAA,CAAQZ,OAAA;QACxBgB,QAAA,EAAUR,QAAA;QACVZ,EAAA,EAAIA,EAAA;QACJC,IAAA,EAAMA,IAAA;QACNoB,OAAA,EAASX,QAAA;QACTY,GAAA,EAAKhB,QAAA;QACLO,QAAA,EAAUA,QAAA;QACVU,IAAA,EAAK;uBAEPT,KAAA,CAAC;QACCT,SAAA,EAAW,CAAC,GAAGP,cAAA,QAAsB,EAAE,CAACM,OAAA,IAAWO,cAAA,GAAiB,YAAY,QAAQ,CACrFI,MAAM,CAACC,OAAA,EACPC,IAAI,CAAC;mBAEPb,OAAA,iBAAWc,IAAA,CAACtB,SAAA,OACZ,CAACQ,OAAA,IAAWO,cAAA,iBAAkBO,IAAA,CAACrB,QAAA;UAEjCK,UAAA;qBAEHgB,IAAA,CAACxB,qBAAA;MACC8B,eAAA,EAAiBjB,KAAA;MACjBkB,QAAA,eACEP,IAAA,CAACvB,UAAA;QAAW+B,OAAA,EAAS1B,EAAA;QAAIQ,KAAA,EAAOA,KAAA;QAAOC,SAAA,EAAWA,SAAA;QAAWI,QAAA,EAAUA;;;;AAKjF","ignoreList":[]}