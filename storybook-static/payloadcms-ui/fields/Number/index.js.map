{"version":3,"file":"index.js","names":["getTranslation","isNumber","React","useCallback","useEffect","useMemo","useState","ReactSelect","RenderCustomComponent","useField","withCondition","useTranslation","FieldDescription","FieldError","FieldLabel","mergeFieldStyles","fieldBaseClass","NumberFieldComponent","props","field","admin","className","description","placeholder","step","hasMany","label","localized","max","Infinity","maxRows","min","required","onChange","onChangeFromProps","path","readOnly","validate","i18n","t","memoizedValidate","value","options","customComponents","AfterInput","BeforeInput","Description","Error","Label","disabled","setValue","showError","handleChange","e","val","parseFloat","target","newVal","Number","isNaN","valueToRender","setValueToRender","handleHasManyChange","selectedOption","newValue","Array","isArray","map","option","index","id","toString","styles","_jsxs","filter","Boolean","join","style","_jsx","CustomComponent","Fallback","replace","filterOption","_","rawInput","isOverHasMany","length","isClearable","isCreatable","isMulti","isSortable","noOptionsMessage","name","onWheel","blur","type","NumberField"],"sources":["../../../src/fields/Number/index.tsx"],"sourcesContent":["'use client'\nimport type { NumberFieldClientComponent, NumberFieldClientProps } from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport { isNumber } from 'payload/shared'\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\n\nimport type { Option } from '../../elements/ReactSelect/types.js'\n\nimport { ReactSelect } from '../../elements/ReactSelect/index.js'\nimport { RenderCustomComponent } from '../../elements/RenderCustomComponent/index.js'\nimport { useField } from '../../forms/useField/index.js'\nimport { withCondition } from '../../forms/withCondition/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { FieldDescription } from '../FieldDescription/index.js'\nimport { FieldError } from '../FieldError/index.js'\nimport { FieldLabel } from '../FieldLabel/index.js'\nimport { mergeFieldStyles } from '../mergeFieldStyles.js'\nimport './index.scss'\nimport { fieldBaseClass } from '../shared/index.js'\n\nconst NumberFieldComponent: NumberFieldClientComponent = (props) => {\n  const {\n    field,\n    field: {\n      admin: {\n        className,\n        description,\n        placeholder,\n        step = 1,\n      } = {} as NumberFieldClientProps['field']['admin'],\n      hasMany = false,\n      label,\n      localized,\n      max = Infinity,\n      maxRows = Infinity,\n      min = -Infinity,\n      required,\n    },\n    onChange: onChangeFromProps,\n    path,\n    readOnly,\n    validate,\n  } = props\n\n  const { i18n, t } = useTranslation()\n\n  const memoizedValidate = useCallback(\n    (value, options) => {\n      if (typeof validate === 'function') {\n        return validate(value, { ...options, max, min, required })\n      }\n    },\n    [validate, min, max, required],\n  )\n\n  const {\n    customComponents: { AfterInput, BeforeInput, Description, Error, Label } = {},\n    disabled,\n    setValue,\n    showError,\n    value,\n  } = useField<number | number[]>({\n    path,\n    validate: memoizedValidate,\n  })\n\n  const handleChange = useCallback(\n    (e) => {\n      const val = parseFloat(e.target.value)\n      let newVal = val\n\n      if (Number.isNaN(val)) {\n        newVal = null\n      }\n\n      if (typeof onChangeFromProps === 'function') {\n        onChangeFromProps(newVal)\n      }\n\n      setValue(newVal)\n    },\n    [onChangeFromProps, setValue],\n  )\n\n  const [valueToRender, setValueToRender] = useState<\n    { id: string; label: string; value: { value: number } }[]\n  >([]) // Only for hasMany\n\n  const handleHasManyChange = useCallback(\n    (selectedOption) => {\n      if (!(readOnly || disabled)) {\n        let newValue\n        if (!selectedOption) {\n          newValue = []\n        } else if (Array.isArray(selectedOption)) {\n          newValue = selectedOption.map((option) => Number(option.value?.value || option.value))\n        } else {\n          newValue = [Number(selectedOption.value?.value || selectedOption.value)]\n        }\n\n        setValue(newValue)\n      }\n    },\n    [readOnly, disabled, setValue],\n  )\n\n  // useEffect update valueToRender:\n  useEffect(() => {\n    if (hasMany && Array.isArray(value)) {\n      setValueToRender(\n        value.map((val, index) => {\n          return {\n            id: `${val}${index}`, // append index to avoid duplicate keys but allow duplicate numbers\n            label: `${val}`,\n            value: {\n              toString: () => `${val}${index}`,\n              value: (val as unknown as Record<string, number>)?.value || val,\n            }, // You're probably wondering, why the hell is this done that way? Well, React-select automatically uses \"label-value\" as a key, so we will get that react duplicate key warning if we just pass in the value as multiple values can be the same. So we need to append the index to the toString() of the value to avoid that warning, as it uses that as the key.\n          }\n        }),\n      )\n    }\n  }, [value, hasMany])\n\n  const styles = useMemo(() => mergeFieldStyles(field), [field])\n\n  return (\n    <div\n      className={[\n        fieldBaseClass,\n        'number',\n        className,\n        showError && 'error',\n        (readOnly || disabled) && 'read-only',\n        hasMany && 'has-many',\n      ]\n        .filter(Boolean)\n        .join(' ')}\n      style={styles}\n    >\n      <RenderCustomComponent\n        CustomComponent={Label}\n        Fallback={\n          <FieldLabel label={label} localized={localized} path={path} required={required} />\n        }\n      />\n      <div className={`${fieldBaseClass}__wrap`}>\n        <RenderCustomComponent\n          CustomComponent={Error}\n          Fallback={<FieldError path={path} showError={showError} />}\n        />\n        {BeforeInput}\n        {hasMany ? (\n          <ReactSelect\n            className={`field-${path.replace(/\\./g, '__')}`}\n            disabled={readOnly || disabled}\n            filterOption={(_, rawInput) => {\n              const isOverHasMany = Array.isArray(value) && value.length >= maxRows\n              return isNumber(rawInput) && !isOverHasMany\n            }}\n            isClearable\n            isCreatable\n            isMulti\n            isSortable\n            noOptionsMessage={() => {\n              const isOverHasMany = Array.isArray(value) && value.length >= maxRows\n              if (isOverHasMany) {\n                return t('validation:limitReached', { max: maxRows, value: value.length + 1 })\n              }\n              return null\n            }}\n            // numberOnly\n            onChange={handleHasManyChange}\n            options={[]}\n            placeholder={t('general:enterAValue')}\n            showError={showError}\n            value={valueToRender as Option[]}\n          />\n        ) : (\n          <div>\n            <input\n              disabled={readOnly || disabled}\n              id={`field-${path.replace(/\\./g, '__')}`}\n              max={max}\n              min={min}\n              name={path}\n              onChange={handleChange}\n              onWheel={(e) => {\n                // @ts-expect-error\n                e.target.blur()\n              }}\n              placeholder={getTranslation(placeholder, i18n)}\n              step={step}\n              type=\"number\"\n              value={typeof value === 'number' ? value : ''}\n            />\n          </div>\n        )}\n        {AfterInput}\n        <RenderCustomComponent\n          CustomComponent={Description}\n          Fallback={<FieldDescription description={description} path={path} />}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport const NumberField = withCondition(NumberFieldComponent)\n"],"mappings":"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","ignoreList":[]}