{"version":3,"file":"index.js","names":["React","RelationshipContent","UploadCard","baseClass","UploadComponentHasOne","props","className","displayPreview","fileDoc","onRemove","readonly","reloadDoc","serverURL","relationTo","value","id","String","src","thumbnailSrc","url","URL","toString","thumbnailURL","_jsx","filter","Boolean","join","allowEdit","allowRemove","alt","filename","byteSize","filesize","collectionSlug","mimeType","x","width","y","height"],"sources":["../../../../src/fields/Upload/HasOne/index.tsx"],"sourcesContent":["'use client'\n\nimport type { JsonObject } from 'payload'\n\nimport React from 'react'\n\nimport type { ReloadDoc } from '../types.js'\n\nimport { RelationshipContent } from '../RelationshipContent/index.js'\nimport { UploadCard } from '../UploadCard/index.js'\nimport './index.scss'\n\nconst baseClass = 'upload upload--has-one'\n\ntype Props = {\n  readonly className?: string\n  readonly displayPreview?: boolean\n  readonly fileDoc: {\n    relationTo: string\n    value: JsonObject\n  }\n  readonly onRemove?: () => void\n  readonly readonly?: boolean\n  readonly reloadDoc: ReloadDoc\n  readonly serverURL: string\n}\n\nexport function UploadComponentHasOne(props: Props) {\n  const { className, displayPreview, fileDoc, onRemove, readonly, reloadDoc, serverURL } = props\n  const { relationTo, value } = fileDoc\n  const id = String(value?.id)\n\n  let src: string\n  let thumbnailSrc: string\n\n  if (value.url) {\n    try {\n      src = new URL(value.url, serverURL).toString()\n    } catch {\n      src = `${serverURL}${value.url}`\n    }\n  }\n\n  if (value.thumbnailURL) {\n    try {\n      thumbnailSrc = new URL(value.thumbnailURL, serverURL).toString()\n    } catch {\n      thumbnailSrc = `${serverURL}${value.thumbnailURL}`\n    }\n  }\n\n  return (\n    <UploadCard className={[baseClass, className].filter(Boolean).join(' ')}>\n      <RelationshipContent\n        allowEdit={!readonly}\n        allowRemove={!readonly}\n        alt={(value?.alt || value?.filename) as string}\n        byteSize={value.filesize as number}\n        collectionSlug={relationTo}\n        displayPreview={displayPreview}\n        filename={value.filename as string}\n        id={id}\n        mimeType={value?.mimeType as string}\n        onRemove={onRemove}\n        reloadDoc={reloadDoc}\n        src={src}\n        thumbnailSrc={thumbnailSrc || src}\n        x={value?.width as number}\n        y={value?.height as number}\n      />\n    </UploadCard>\n  )\n}\n"],"mappings":"AAAA;;;AAIA,OAAOA,KAAA,MAAW;AAIlB,SAASC,mBAAmB,QAAQ;AACpC,SAASC,UAAU,QAAQ;AAC3B,OAAO;AAEP,MAAMC,SAAA,GAAY;AAelB,OAAO,SAASC,sBAAsBC,KAAY;EAChD,MAAM;IAAEC,SAAS;IAAEC,cAAc;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC,SAAS;IAAEC;EAAS,CAAE,GAAGP,KAAA;EACzF,MAAM;IAAEQ,UAAU;IAAEC;EAAK,CAAE,GAAGN,OAAA;EAC9B,MAAMO,EAAA,GAAKC,MAAA,CAAOF,KAAA,EAAOC,EAAA;EAEzB,IAAIE,GAAA;EACJ,IAAIC,YAAA;EAEJ,IAAIJ,KAAA,CAAMK,GAAG,EAAE;IACb,IAAI;MACFF,GAAA,GAAM,IAAIG,GAAA,CAAIN,KAAA,CAAMK,GAAG,EAAEP,SAAA,EAAWS,QAAQ;IAC9C,EAAE,MAAM;MACNJ,GAAA,GAAM,GAAGL,SAAA,GAAYE,KAAA,CAAMK,GAAG,EAAE;IAClC;EACF;EAEA,IAAIL,KAAA,CAAMQ,YAAY,EAAE;IACtB,IAAI;MACFJ,YAAA,GAAe,IAAIE,GAAA,CAAIN,KAAA,CAAMQ,YAAY,EAAEV,SAAA,EAAWS,QAAQ;IAChE,EAAE,MAAM;MACNH,YAAA,GAAe,GAAGN,SAAA,GAAYE,KAAA,CAAMQ,YAAY,EAAE;IACpD;EACF;EAEA,oBACEC,IAAA,CAACrB,UAAA;IAAWI,SAAA,EAAW,CAACH,SAAA,EAAWG,SAAA,CAAU,CAACkB,MAAM,CAACC,OAAA,EAASC,IAAI,CAAC;cACjE,aAAAH,IAAA,CAACtB,mBAAA;MACC0B,SAAA,EAAW,CAACjB,QAAA;MACZkB,WAAA,EAAa,CAAClB,QAAA;MACdmB,GAAA,EAAMf,KAAA,EAAOe,GAAA,IAAOf,KAAA,EAAOgB,QAAA;MAC3BC,QAAA,EAAUjB,KAAA,CAAMkB,QAAQ;MACxBC,cAAA,EAAgBpB,UAAA;MAChBN,cAAA,EAAgBA,cAAA;MAChBuB,QAAA,EAAUhB,KAAA,CAAMgB,QAAQ;MACxBf,EAAA,EAAIA,EAAA;MACJmB,QAAA,EAAUpB,KAAA,EAAOoB,QAAA;MACjBzB,QAAA,EAAUA,QAAA;MACVE,SAAA,EAAWA,SAAA;MACXM,GAAA,EAAKA,GAAA;MACLC,YAAA,EAAcA,YAAA,IAAgBD,GAAA;MAC9BkB,CAAA,EAAGrB,KAAA,EAAOsB,KAAA;MACVC,CAAA,EAAGvB,KAAA,EAAOwB;;;AAIlB","ignoreList":[]}