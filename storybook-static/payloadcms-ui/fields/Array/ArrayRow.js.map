{"version":3,"file":"ArrayRow.js","names":["c","_c","getTranslation","React","ArrayAction","Collapsible","ErrorPill","ShimmerEffect","useFormSubmitted","RenderFields","RowLabel","useThrottledValue","useTranslation","baseClass","ArrayRow","t0","$","addRow","attributes","CustomRowLabel","duplicateRow","errorCount","fields","forceRender","t1","hasMaxRows","isDragging","isLoading","isLoadingFromProps","isSortable","labels","listeners","moveRow","parentPath","path","permissions","readOnly","removeRow","row","rowCount","rowIndex","schemaPath","setCollapse","setNodeRef","transform","transition","undefined","i18n","hasSubmitted","fallbackLabel","singular","String","padStart","fieldHasErrors","t2","t3","filter","Boolean","classNames","join","t4","split","t5","t6","collapsed","id","t7","_jsx","count","withMessage","t8","ref","style","zIndex","children","actions","index","className","collapsibleStyle","dragHandleProps","header","_jsxs","height","width","CustomComponent","label","rowNumber","onToggle","margins","parentIndexPath","parentSchemaPath"],"sources":["../../../src/fields/Array/ArrayRow.tsx"],"sourcesContent":["'use client'\nimport type { ArrayField, ClientField, Row, SanitizedFieldPermissions } from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport React from 'react'\n\nimport type { UseDraggableSortableReturn } from '../../elements/DraggableSortable/useDraggableSortable/types.js'\n\nimport { ArrayAction } from '../../elements/ArrayAction/index.js'\nimport { Collapsible } from '../../elements/Collapsible/index.js'\nimport { ErrorPill } from '../../elements/ErrorPill/index.js'\nimport { ShimmerEffect } from '../../elements/ShimmerEffect/index.js'\nimport { useFormSubmitted } from '../../forms/Form/context.js'\nimport { RenderFields } from '../../forms/RenderFields/index.js'\nimport { RowLabel } from '../../forms/RowLabel/index.js'\nimport { useThrottledValue } from '../../hooks/useThrottledValue.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport './index.scss'\n\nconst baseClass = 'array-field'\n\ntype ArrayRowProps = {\n  readonly addRow: (rowIndex: number) => Promise<void> | void\n  readonly CustomRowLabel?: React.ReactNode\n  readonly duplicateRow: (rowIndex: number) => void\n  readonly errorCount: number\n  readonly fields: ClientField[]\n  readonly forceRender?: boolean\n  readonly hasMaxRows?: boolean\n  readonly isLoading?: boolean\n  readonly isSortable?: boolean\n  readonly labels: Partial<ArrayField['labels']>\n  readonly moveRow: (fromIndex: number, toIndex: number) => void\n  readonly parentPath: string\n  readonly path: string\n  readonly permissions: SanitizedFieldPermissions\n  readonly readOnly?: boolean\n  readonly removeRow: (rowIndex: number) => void\n  readonly row: Row\n  readonly rowCount: number\n  readonly rowIndex: number\n  readonly schemaPath: string\n  readonly setCollapse: (rowID: string, collapsed: boolean) => void\n} & UseDraggableSortableReturn\n\nexport const ArrayRow: React.FC<ArrayRowProps> = ({\n  addRow,\n  attributes,\n  CustomRowLabel,\n  duplicateRow,\n  errorCount,\n  fields,\n  forceRender = false,\n  hasMaxRows,\n  isDragging,\n  isLoading: isLoadingFromProps,\n  isSortable,\n  labels,\n  listeners,\n  moveRow,\n  parentPath,\n  path,\n  permissions,\n  readOnly,\n  removeRow,\n  row,\n  rowCount,\n  rowIndex,\n  schemaPath,\n  setCollapse,\n  setNodeRef,\n  transform,\n  transition,\n}) => {\n  const isLoading = useThrottledValue(isLoadingFromProps, 500)\n\n  const { i18n } = useTranslation()\n  const hasSubmitted = useFormSubmitted()\n\n  const fallbackLabel = `${getTranslation(labels.singular, i18n)} ${String(rowIndex + 1).padStart(\n    2,\n    '0',\n  )}`\n\n  const fieldHasErrors = errorCount > 0 && hasSubmitted\n\n  const classNames = [\n    `${baseClass}__row`,\n    fieldHasErrors ? `${baseClass}__row--has-errors` : `${baseClass}__row--no-errors`,\n  ]\n    .filter(Boolean)\n    .join(' ')\n\n  return (\n    <div\n      id={`${parentPath.split('.').join('-')}-row-${rowIndex}`}\n      key={`${parentPath}-row-${row.id}`}\n      ref={setNodeRef}\n      style={{\n        transform,\n        transition,\n        zIndex: isDragging ? 1 : undefined,\n      }}\n    >\n      <Collapsible\n        actions={\n          !readOnly ? (\n            <ArrayAction\n              addRow={addRow}\n              duplicateRow={duplicateRow}\n              hasMaxRows={hasMaxRows}\n              index={rowIndex}\n              isSortable={isSortable}\n              moveRow={moveRow}\n              removeRow={removeRow}\n              rowCount={rowCount}\n            />\n          ) : undefined\n        }\n        className={classNames}\n        collapsibleStyle={fieldHasErrors ? 'error' : 'default'}\n        dragHandleProps={\n          isSortable\n            ? {\n                id: row.id,\n                attributes,\n                listeners,\n              }\n            : undefined\n        }\n        header={\n          <div className={`${baseClass}__row-header`}>\n            {isLoading ? (\n              <ShimmerEffect height=\"1rem\" width=\"8rem\" />\n            ) : (\n              <RowLabel\n                CustomComponent={CustomRowLabel}\n                label={fallbackLabel}\n                path={path}\n                rowNumber={rowIndex}\n              />\n            )}\n            {fieldHasErrors && <ErrorPill count={errorCount} i18n={i18n} withMessage />}\n          </div>\n        }\n        isCollapsed={row.collapsed}\n        onToggle={(collapsed) => setCollapse(row.id, collapsed)}\n      >\n        {isLoading ? (\n          <ShimmerEffect />\n        ) : (\n          <RenderFields\n            className={`${baseClass}__fields`}\n            fields={fields}\n            forceRender={forceRender}\n            margins=\"small\"\n            parentIndexPath=\"\"\n            parentPath={path}\n            parentSchemaPath={schemaPath}\n            permissions={permissions === true ? permissions : permissions?.fields}\n            readOnly={readOnly}\n          />\n        )}\n      </Collapsible>\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]}