{"version":3,"file":"index.js","names":["getTranslation","React","useCallback","useMemo","RenderCustomComponent","FieldDescription","FieldError","FieldLabel","useField","withCondition","useTranslation","mergeFieldStyles","fieldBaseClass","baseClass","PointFieldComponent","props","field","admin","className","description","placeholder","step","label","localized","required","path","readOnly","validate","i18n","t","memoizedValidate","value","options","customComponents","AfterInput","BeforeInput","Description","Error","Label","disabled","setValue","showError","handleChange","e","index","val","parseFloat","target","Number","isNaN","coordinates","getCoordinateFieldLabel","type","suffix","fieldLabel","styles","_jsxs","filter","Boolean","join","style","_jsx","CustomComponent","Fallback","id","replace","name","onChange","PointField"],"sources":["../../../src/fields/Point/index.tsx"],"sourcesContent":["'use client'\nimport type { PointFieldClientComponent, PointFieldValidation } from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport React, { useCallback, useMemo } from 'react'\n\nimport { RenderCustomComponent } from '../../elements/RenderCustomComponent/index.js'\nimport { FieldDescription } from '../../fields/FieldDescription/index.js'\nimport { FieldError } from '../../fields/FieldError/index.js'\nimport { FieldLabel } from '../../fields/FieldLabel/index.js'\nimport { useField } from '../../forms/useField/index.js'\nimport { withCondition } from '../../forms/withCondition/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { mergeFieldStyles } from '../mergeFieldStyles.js'\nimport './index.scss'\nimport { fieldBaseClass } from '../shared/index.js'\n\nconst baseClass = 'point'\n\nexport const PointFieldComponent: PointFieldClientComponent = (props) => {\n  const {\n    field,\n    field: {\n      admin: { className, description, placeholder, step } = {},\n      label,\n      localized,\n      required,\n    },\n    path,\n    readOnly,\n    validate,\n  } = props\n\n  const { i18n, t } = useTranslation()\n\n  const memoizedValidate: PointFieldValidation = useCallback(\n    (value, options) => {\n      if (typeof validate === 'function') {\n        return validate(value, { ...options, required })\n      }\n    },\n    [validate, required],\n  )\n\n  const {\n    customComponents: { AfterInput, BeforeInput, Description, Error, Label } = {},\n    disabled,\n    setValue,\n    showError,\n    value = [null, null],\n  } = useField<[number, number]>({\n    path,\n    validate: memoizedValidate,\n  })\n\n  const handleChange = useCallback(\n    (e, index: 0 | 1) => {\n      let val = parseFloat(e.target.value)\n      if (Number.isNaN(val)) {\n        val = e.target.value\n      }\n      const coordinates = [...value]\n      coordinates[index] = val\n      setValue(coordinates)\n    },\n    [setValue, value],\n  )\n\n  const getCoordinateFieldLabel = (type: 'latitude' | 'longitude') => {\n    const suffix = type === 'longitude' ? t('fields:longitude') : t('fields:latitude')\n    const fieldLabel = label ? getTranslation(label, i18n) : ''\n\n    return `${fieldLabel}${fieldLabel ? ' - ' : ''}${suffix}`\n  }\n\n  const styles = useMemo(() => mergeFieldStyles(field), [field])\n\n  return (\n    <div\n      className={[\n        fieldBaseClass,\n        baseClass,\n        className,\n        showError && 'error',\n        (readOnly || disabled) && 'read-only',\n      ]\n        .filter(Boolean)\n        .join(' ')}\n      style={styles}\n    >\n      <ul className={`${baseClass}__wrap`}>\n        <li>\n          <RenderCustomComponent\n            CustomComponent={Label}\n            Fallback={\n              <FieldLabel\n                label={getCoordinateFieldLabel('longitude')}\n                localized={localized}\n                path={path}\n                required={required}\n              />\n            }\n          />\n          <div className=\"input-wrapper\">\n            {BeforeInput}\n            {/* disable eslint rule because the label is dynamic */}\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <input\n              disabled={readOnly || disabled}\n              id={`field-longitude-${path?.replace(/\\./g, '__')}`}\n              name={`${path}.longitude`}\n              onChange={(e) => handleChange(e, 0)}\n              placeholder={getTranslation(placeholder, i18n)}\n              step={step}\n              type=\"number\"\n              value={value && typeof value[0] === 'number' ? value[0] : ''}\n            />\n            {AfterInput}\n          </div>\n        </li>\n        <li>\n          <RenderCustomComponent\n            CustomComponent={Label}\n            Fallback={\n              <FieldLabel\n                label={getCoordinateFieldLabel('latitude')}\n                localized={localized}\n                path={path}\n                required={required}\n              />\n            }\n          />\n          <div className=\"input-wrapper\">\n            <RenderCustomComponent\n              CustomComponent={Error}\n              Fallback={<FieldError path={path} showError={showError} />}\n            />\n            {BeforeInput}\n            {/* disable eslint rule because the label is dynamic */}\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <input\n              disabled={readOnly || disabled}\n              id={`field-latitude-${path?.replace(/\\./g, '__')}`}\n              name={`${path}.latitude`}\n              onChange={(e) => handleChange(e, 1)}\n              placeholder={getTranslation(placeholder, i18n)}\n              step={step}\n              type=\"number\"\n              value={value && typeof value[1] === 'number' ? value[1] : ''}\n            />\n            {AfterInput}\n          </div>\n        </li>\n      </ul>\n      <RenderCustomComponent\n        CustomComponent={Description}\n        Fallback={<FieldDescription description={description} path={path} />}\n      />\n    </div>\n  )\n}\n\nexport const PointField = withCondition(PointFieldComponent)\n"],"mappings":"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","ignoreList":[]}