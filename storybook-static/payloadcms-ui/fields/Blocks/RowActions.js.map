{"version":3,"file":"RowActions.js","names":["c","_c","useModal","React","ArrayAction","useDrawerSlug","BlocksDrawer","RowActions","props","$","addRow","blocks","blockType","duplicateRow","hasMaxRows","isSortable","labels","moveRow","removeRow","rowCount","rowIndex","closeModal","openModal","drawerSlug","indexToAdd","setIndexToAdd","useState","t0","_","rowBlockType","t1","t2","index","t3","_jsxs","Fragment","children","_jsx","addRowIndex"],"sources":["../../../src/fields/Blocks/RowActions.tsx"],"sourcesContent":["'use client'\nimport type { ClientBlock, ClientField, Labels } from 'payload'\n\nimport { useModal } from '@faceless-ui/modal'\nimport React from 'react'\n\nimport { ArrayAction } from '../../elements/ArrayAction/index.js'\nimport { useDrawerSlug } from '../../elements/Drawer/useDrawerSlug.js'\nimport { BlocksDrawer } from './BlocksDrawer/index.js'\n\nexport const RowActions: React.FC<{\n  readonly addRow: (rowIndex: number, blockType: string) => Promise<void> | void\n  readonly blocks: (ClientBlock | string)[]\n  readonly blockType: string\n  readonly duplicateRow: (rowIndex: number, blockType: string) => void\n  readonly fields: ClientField[]\n  readonly hasMaxRows?: boolean\n  readonly isSortable?: boolean\n  readonly labels: Labels\n  readonly moveRow: (fromIndex: number, toIndex: number) => void\n  readonly removeRow: (rowIndex: number) => void\n  readonly rowCount: number\n  readonly rowIndex: number\n}> = (props) => {\n  const {\n    addRow,\n    blocks,\n    blockType,\n    duplicateRow,\n    hasMaxRows,\n    isSortable,\n    labels,\n    moveRow,\n    removeRow,\n    rowCount,\n    rowIndex,\n  } = props\n\n  const { closeModal, openModal } = useModal()\n  const drawerSlug = useDrawerSlug('blocks-drawer')\n\n  const [indexToAdd, setIndexToAdd] = React.useState<null | number>(null)\n\n  return (\n    <React.Fragment>\n      <BlocksDrawer\n        addRow={(_, rowBlockType) => {\n          if (typeof addRow === 'function') {\n            void addRow(indexToAdd, rowBlockType)\n          }\n          closeModal(drawerSlug)\n        }}\n        addRowIndex={rowIndex}\n        blocks={blocks}\n        drawerSlug={drawerSlug}\n        labels={labels}\n      />\n      <ArrayAction\n        addRow={(index) => {\n          setIndexToAdd(index)\n          openModal(drawerSlug)\n        }}\n        duplicateRow={() => duplicateRow(rowIndex, blockType)}\n        hasMaxRows={hasMaxRows}\n        index={rowIndex}\n        isSortable={isSortable}\n        moveRow={moveRow}\n        removeRow={removeRow}\n        rowCount={rowCount}\n      />\n    </React.Fragment>\n  )\n}\n"],"mappings":"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","ignoreList":[]}