{"version":3,"file":"index.js","names":["getTranslation","React","useCallback","useMemo","useField","withCondition","useConfig","useLocale","useTranslation","mergeFieldStyles","isFieldRTL","TextareaInput","TextareaFieldComponent","props","field","admin","className","description","placeholder","rows","rtl","label","localized","maxLength","minLength","required","path","readOnly","validate","i18n","config","localization","locale","isRTL","fieldLocalized","fieldRTL","localizationConfig","undefined","memoizedValidate","value","options","customComponents","AfterInput","BeforeInput","Description","Error","Label","disabled","setValue","showError","styles","_jsx","onChange","e","target","style","TextareaField"],"sources":["../../../src/fields/Textarea/index.tsx"],"sourcesContent":["'use client'\nimport type { TextareaFieldClientComponent, TextareaFieldValidation } from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport React, { useCallback, useMemo } from 'react'\n\nimport type { TextAreaInputProps } from './types.js'\n\nimport { useField } from '../../forms/useField/index.js'\nimport { withCondition } from '../../forms/withCondition/index.js'\nimport { useConfig } from '../../providers/Config/index.js'\nimport { useLocale } from '../../providers/Locale/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { mergeFieldStyles } from '../mergeFieldStyles.js'\nimport './index.scss'\nimport { isFieldRTL } from '../shared/index.js'\nimport { TextareaInput } from './Input.js'\n\nexport { TextareaInput, TextAreaInputProps }\n\nconst TextareaFieldComponent: TextareaFieldClientComponent = (props) => {\n  const {\n    field,\n    field: {\n      admin: { className, description, placeholder, rows, rtl } = {},\n      label,\n      localized,\n      maxLength,\n      minLength,\n      required,\n    },\n    path,\n    readOnly,\n    validate,\n  } = props\n\n  const { i18n } = useTranslation()\n\n  const {\n    config: { localization },\n  } = useConfig()\n\n  const locale = useLocale()\n\n  const isRTL = isFieldRTL({\n    fieldLocalized: localized,\n    fieldRTL: rtl,\n    locale,\n    localizationConfig: localization || undefined,\n  })\n\n  const memoizedValidate: TextareaFieldValidation = useCallback(\n    (value, options) => {\n      if (typeof validate === 'function') {\n        return validate(value, { ...options, maxLength, minLength, required })\n      }\n    },\n    [validate, required, maxLength, minLength],\n  )\n\n  const {\n    customComponents: { AfterInput, BeforeInput, Description, Error, Label } = {},\n    disabled,\n    setValue,\n    showError,\n    value,\n  } = useField<string>({\n    path,\n    validate: memoizedValidate,\n  })\n\n  const styles = useMemo(() => mergeFieldStyles(field), [field])\n\n  return (\n    <TextareaInput\n      AfterInput={AfterInput}\n      BeforeInput={BeforeInput}\n      className={className}\n      Description={Description}\n      description={description}\n      Error={Error}\n      Label={Label}\n      label={label}\n      localized={localized}\n      onChange={(e) => {\n        setValue(e.target.value)\n      }}\n      path={path}\n      placeholder={getTranslation(placeholder, i18n)}\n      readOnly={readOnly || disabled}\n      required={required}\n      rows={rows}\n      rtl={isRTL}\n      showError={showError}\n      style={styles}\n      value={value}\n    />\n  )\n}\n\nexport const TextareaField = withCondition(TextareaFieldComponent)\n"],"mappings":"AAAA;;;AAGA,SAASA,cAAc,QAAQ;AAC/B,OAAOC,KAAA,IAASC,WAAW,EAAEC,OAAO,QAAQ;AAI5C,SAASC,QAAQ,QAAQ;AACzB,SAASC,aAAa,QAAQ;AAC9B,SAASC,SAAS,QAAQ;AAC1B,SAASC,SAAS,QAAQ;AAC1B,SAASC,cAAc,QAAQ;AAC/B,SAASC,gBAAgB,QAAQ;AACjC,OAAO;AACP,SAASC,UAAU,QAAQ;AAC3B,SAASC,aAAa,QAAQ;AAE9B,SAASA,aAAa;AAEtB,MAAMC,sBAAA,GAAwDC,KAAA;EAC5D,MAAM;IACJC,KAAK;IACLA,KAAA,EAAO;MACLC,KAAA,EAAO;QAAEC,SAAS;QAAEC,WAAW;QAAEC,WAAW;QAAEC,IAAI;QAAEC;MAAG,CAAE,GAAG,CAAC,CAAC;MAC9DC,KAAK;MACLC,SAAS;MACTC,SAAS;MACTC,SAAS;MACTC;IAAQ,CACT;IACDC,IAAI;IACJC,QAAQ;IACRC;EAAQ,CACT,GAAGf,KAAA;EAEJ,MAAM;IAAEgB;EAAI,CAAE,GAAGrB,cAAA;EAEjB,MAAM;IACJsB,MAAA,EAAQ;MAAEC;IAAY;EAAE,CACzB,GAAGzB,SAAA;EAEJ,MAAM0B,MAAA,GAASzB,SAAA;EAEf,MAAM0B,KAAA,GAAQvB,UAAA,CAAW;IACvBwB,cAAA,EAAgBZ,SAAA;IAChBa,QAAA,EAAUf,GAAA;IACVY,MAAA;IACAI,kBAAA,EAAoBL,YAAA,IAAgBM;EACtC;EAEA,MAAMC,gBAAA,GAA4CpC,WAAA,CAChD,CAACqC,KAAA,EAAOC,OAAA;IACN,IAAI,OAAOZ,QAAA,KAAa,YAAY;MAClC,OAAOA,QAAA,CAASW,KAAA,EAAO;QAAE,GAAGC,OAAO;QAAEjB,SAAA;QAAWC,SAAA;QAAWC;MAAS;IACtE;EACF,GACA,CAACG,QAAA,EAAUH,QAAA,EAAUF,SAAA,EAAWC,SAAA,CAAU;EAG5C,MAAM;IACJiB,gBAAA,EAAkB;MAAEC,UAAU;MAAEC,WAAW;MAAEC,WAAW;MAAEC,KAAK;MAAEC;IAAK,CAAE,GAAG,CAAC,CAAC;IAC7EC,QAAQ;IACRC,QAAQ;IACRC,SAAS;IACTV,KAAK,EAALA;EAAK,CACN,GAAGnC,QAAA,CAAiB;IACnBsB,IAAA;IACAE,QAAA,EAAUU;EACZ;EAEA,MAAMY,MAAA,GAAS/C,OAAA,CAAQ,MAAMM,gBAAA,CAAiBK,KAAA,GAAQ,CAACA,KAAA,CAAM;EAE7D,oBACEqC,IAAA,CAACxC,aAAA;IACC+B,UAAA,EAAYA,UAAA;IACZC,WAAA,EAAaA,WAAA;IACb3B,SAAA,EAAWA,SAAA;IACX4B,WAAA,EAAaA,WAAA;IACb3B,WAAA,EAAaA,WAAA;IACb4B,KAAA,EAAOA,KAAA;IACPC,KAAA,EAAOA,KAAA;IACPzB,KAAA,EAAOA,KAAA;IACPC,SAAA,EAAWA,SAAA;IACX8B,QAAA,EAAWC,CAAA;MACTL,QAAA,CAASK,CAAA,CAAEC,MAAM,CAACf,KAAK;IACzB;IACAb,IAAA,EAAMA,IAAA;IACNR,WAAA,EAAalB,cAAA,CAAekB,WAAA,EAAaW,IAAA;IACzCF,QAAA,EAAUA,QAAA,IAAYoB,QAAA;IACtBtB,QAAA,EAAUA,QAAA;IACVN,IAAA,EAAMA,IAAA;IACNC,GAAA,EAAKa,KAAA;IACLgB,SAAA,EAAWA,SAAA;IACXM,KAAA,EAAOL,MAAA;IACPX,KAAA,EAAOA;;AAGb;AAEA,OAAO,MAAMiB,aAAA,GAAgBnD,aAAA,CAAcO,sBAAA","ignoreList":[]}